<?php
// Подключаю базу данных
require_once '../parts_php/dbconnection.php';

// Обработка данных из формы
if(!empty($_POST)) {
    // Загрузка фото художника
    $random_identifier = bin2hex(random_bytes(8)); // Например, 16 символов
    $portrait_image = $_FILES["portrait_image"]["name"];
    $extension = pathinfo($portrait_image, PATHINFO_EXTENSION);
    $random_filename = $random_identifier . '_' . $portrait_image;
    $portrait_image_tmp = $_FILES["portrait_image"]["tmp_name"];
    $target_dir = "../img/painters-portrets/";
    $target_file = $target_dir . $random_filename;
    // Переместить загруженное фото в целевую папку
    move_uploaded_file($portrait_image_tmp, $target_file);

    // Другие поля формы
    $name_ru = $_POST["name_ru"];
    $name_en = $_POST["name_en"];
    $name_de = $_POST["name_de"];
    $middle_name_ru = $_POST["middle_name_ru"];
    $middle_name_en = $_POST["middle_name_en"];
    $middle_name_de = $_POST["middle_name_de"];
    $last_name_ru = $_POST["last_name_ru"];
    $last_name_en = $_POST["last_name_en"];
    $last_name_de = $_POST["last_name_de"];
    $birth_year = $_POST["birth_year"];
    $birth_place_ru = $_POST["birth_place_ru"];
    $birth_place_en = $_POST["birth_place_en"];
    $birth_place_de = $_POST["birth_place_de"];
    $death_year = $_POST["death_year"];
    $death_place_ru = $_POST["death_place_ru"];
    $death_place_en = $_POST["death_place_en"];
    $death_place_de = $_POST["death_place_de"];
    
    $in_catalog = $_POST["in_catalog"];
    if (!isset($in_catalog)) {
        $in_catalog = 'off';
    }

    // SQL-запрос для вставки данных в таблицу Artists
    $sql = "INSERT 
            INTO Artists 
                (in_catalog, 
                portrait_image_url, 
                name_ru, name_en, name_de, 
                middle_name_ru, middle_name_en, middle_name_de, 
                last_name_ru, last_name_en, last_name_de, 
                birth_year, birth_place_ru, birth_place_en, birth_place_de, 
                death_year, death_place_ru, death_place_en, death_place_de
            ) 
            VALUES 
                (:in_catalog, 
                :portrait_image, 
                :name_ru, :name_en, :name_de, 
                :middle_name_ru, :middle_name_en, :middle_name_de, 
                :last_name_ru, :last_name_en, :last_name_de, 
                :birth_year, :birth_place_ru, :birth_place_en, :birth_place_de, 
                :death_year, :death_place_ru, :death_place_en, :death_place_de
            )";

    // Подготовка и выполнение запроса

    $stmt = $conn->prepare($sql);

    $stmt->bindParam(':in_catalog', $in_catalog);
    $stmt->bindParam(':portrait_image', $random_filename);
    $stmt->bindParam(':name_ru', $name_ru);
    $stmt->bindParam(':name_en', $name_en);
    $stmt->bindParam(':name_de', $name_de);
    $stmt->bindParam(':middle_name_ru', $middle_name_ru);
    $stmt->bindParam(':middle_name_en', $middle_name_en);
    $stmt->bindParam(':middle_name_de', $middle_name_de);
    $stmt->bindParam(':last_name_ru', $last_name_ru);
    $stmt->bindParam(':last_name_en', $last_name_en);
    $stmt->bindParam(':last_name_de', $last_name_de);
    $stmt->bindParam(':birth_year', $birth_year);
    $stmt->bindParam(':birth_place_ru', $birth_place_ru);
    $stmt->bindParam(':birth_place_en', $birth_place_en);
    $stmt->bindParam(':birth_place_de', $birth_place_de);
    $stmt->bindParam(':death_year', $death_year);
    $stmt->bindParam(':death_place_ru', $death_place_ru);
    $stmt->bindParam(':death_place_en', $death_place_en);
    $stmt->bindParam(':death_place_de', $death_place_de);

    // var_dump($stmt);

    try {
        $stmt->execute();
        header("Location: ../artists_painting_add.php?artist_add=true&name_ru=$name_ru&last_name_ru=$last_name_ru");
        // header("Location: ../artists_list.php");
    } catch (PDOException $e) {
        echo "Ошибка: " . $e->getMessage();
    }
}
?>

<?php
session_start();

// Передаваемые данные формы
$correctPassword = 'lbkoperator';
$password = $_POST['password'];

// if ($username == $correctUsername && $password == $correctPassword)
if ($password == $correctPassword) {
    $_SESSION['login'] = true;
    header("Location: ../loginOK.php");
    exit;
} else {
    // Определяем сообщение
    $login_result = 'Неправильный пароль';
}


// Кодируем сообщение для передачи в URL
$encodedMessage = urlencode($login_result);

// Перенаправляем с параметром
$redirect_url = "../login.php?message=$encodedMessage";
header("Location: " . $redirect_url);
exit;

<?php
// Подключаю базу данных
require_once '../parts_php/dbconnection.php';

// Обработка данных из формы
if(!empty($_POST)) {
    
    // Загрузка картины
    $portrait_image = $_FILES["painting_image"]["name"];    
    $random_identifier = bin2hex(random_bytes(8)); // Например, 16 символов
    $random_filename = $random_identifier . '_' . $portrait_image;
    $portrait_image_tmp = $_FILES["painting_image"]["tmp_name"];
    $target_dir = "../img/paintings/";
    $target_file = $target_dir . $random_filename;
    
    
    // Определяем ID художника
    if(isset($_POST['artist_add'])) {
        // Если перешли с добавления художника    
        $sql = "SELECT artist_id FROM artists WHERE name_ru = :name_ru AND last_name_ru = :last_name_ru";
        $stmt = $conn->prepare($sql);
       
        $name_ru = $_POST['name_ru'];
        $stmt->bindParam(":name_ru", $name_ru);
       
        $last_name_ru = $_POST['last_name_ru'];
        $stmt->bindParam(":last_name_ru", $last_name_ru);

        $stmt->execute();
        $artistData = $stmt->fetch(PDO::FETCH_ASSOC);

        $artist_id = $artistData["artist_id"];
    } else {
        // В обычном случае
        $artist_id = $_POST["artist_id"];
    }

    // Другие поля формы
    $title_ru = $_POST["title_ru"];
    $title_en = $_POST["title_en"];
    $title_de = $_POST["title_de"];
    $creation_year = $_POST["creation_year"];    
    $technique_ru = $_POST["technique_ru"];
    $technique_en = $_POST["technique_en"];
    $technique_de = $_POST["technique_de"];
    $size = $_POST["size"];
    $catalog_number = $_POST["catalog_number"];
    $location = $_POST["location"];
    


    // Переместить загруженное фото в целевую папку
    move_uploaded_file($portrait_image_tmp, $target_file);
    
    // SQL-запрос для вставки данных в таблицу Artists
    $sql = "INSERT INTO Paintings (`artist_id`, `title_ru`, `title_en`, `title_de`, `creation_year`, `technique_ru`, `technique_en`, `technique_de`, `size`, `location`, `catalog_number`, `image_url`) VALUES (:artist_id, :title_ru, :title_en, :title_de, :creation_year, :technique_ru, :technique_en, :technique_de, :size, :location, :catalog_number, :image_url)";

    // Подготовка и выполнение запроса
    $stmt = $conn->prepare($sql);

    $stmt->bindParam(':artist_id', $artist_id);
    $stmt->bindParam(':title_ru', $title_ru);
    $stmt->bindParam(':title_en', $title_en);
    $stmt->bindParam(':title_de', $title_de);
    $stmt->bindParam(':creation_year', $creation_year);
    $stmt->bindParam(':technique_ru', $technique_ru);
    $stmt->bindParam(':technique_en', $technique_en);
    $stmt->bindParam(':technique_de', $technique_de);
    $stmt->bindParam(':size', $size);
    $stmt->bindParam(':catalog_number', $catalog_number);
    $stmt->bindParam(':location', $location);
    $stmt->bindParam(':image_url', $random_filename);

    try {
        $stmt->execute();
        // echo "Данные успешно добавлены в базу данных.";
        header('location: ../artists_list.php');
    } catch (PDOException $e) {
        echo "Ошибка: " . $e->getMessage();
    }
}
?>

<?php
session_start();
require '../parts_php/dbconnection.php';

if (!empty($_POST) && !empty($_FILES["image"]["name"])) {
    $page_type = $_POST['page_type'];
    $page_url = $_POST['page_url'];
    $img_number = $_POST['img_number'];

    // Содание имени файла 
    $random_identifier = bin2hex(random_bytes(8));
    $original_filename = $_FILES["image"]["name"];
    $random_filename = $page_type . '_' . $random_identifier . '_' . $original_filename;
    $target_dir = "../img/images/";
    $target_file = $target_dir . $random_filename;


    $description_ru = $_POST['image_description_ru'];
    $description_en = $_POST['image_description_en'];
    $description_de = $_POST['image_description_de'];
    
    // Проверить, все ли заполнено
    if (empty($description_ru)) {
        $description_ru = "Описание $img_number";
    }
    if (empty($description_en)) {
        if(empty($description_ru)) {
            $description_en = "Description $img_number";
        } else {
            $description_en = $description_ru;
        }
    }
    if (empty($description_de)) {
        if(empty($description_ru)) {
            $description_de = "Description $img_number";
        } else {
            $description_en = $description_ru;
        }
    }
    
    /* TESTS */
    // echo $target_file;
    // echo "<hr>";
    // echo "<br>";

    // echo $page_type;
    // echo "<hr>";
    // echo "location: ../$page_url.php";
    // echo "<hr>";
    // echo "<br>";

    // echo $description_ru;
    // echo "<hr>";
    // echo $description_en;
    // echo "<hr>";
    // echo $description_de;

    
    // Перемещаем загруженное фото в целевую папку
    if (move_uploaded_file($_FILES["image"]["tmp_name"], $target_file)) {

        $sql = "INSERT INTO table_images (page_type, image_url, description_ru, description_en, description_de)
                VALUES (:page_type, :image_url, :description_ru, :description_en, :description_de)";
        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':page_type', $page_type);
        $stmt->bindParam(':image_url', $random_filename);
        $stmt->bindParam(':description_ru', $description_ru);
        $stmt->bindParam(':description_en', $description_en);
        $stmt->bindParam(':description_de', $description_de);

        try {
            $stmt->execute();
            header("location: ../$page_url.php");
        } catch (PDOException $e) {
            echo "Ошибка: " . $e->getMessage();
        }
    } else {
        echo "Ошибка при перемещении файла.";
    }
}

<?php
session_start();
require_once '../parts_php/dbconnection.php';

if (isset($_GET['image_url'])) {
    $image_url = htmlentities($_GET['image_url']);
    // echo '<br>';
    $page_url = htmlentities($_GET['page_url']);
    // echo '<br>';
    // Сформируйте полный путь к файлу
    $target_dir = "../img/images/";
    $file_to_delete = $target_dir . $image_url;

    if (file_exists($file_to_delete)) {
        // Удалите файл изображения
        unlink($file_to_delete);

        // Затем, если нужно, удалите запись из базы данных
        $sql = "DELETE FROM table_images WHERE image_url = :image_url";
        $stmt = $conn->prepare($sql);
        $stmt->bindParam(':image_url', $image_url);

        try {
            $stmt->execute();
            header("location: ../$page_url");
        } catch (PDOException $e) {
            echo "Ошибка при удалении записи из базы данных: " . $e->getMessage();
        }
    } else {
        echo "Файл изображения не найден на сервере.";
    }
} else {
    echo "Неверные параметры запроса.";
}
?>

<?php

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Подключение к базе данных
    require '../parts_php/dbconnection.php';
    
    header('Content-Type: application/json');
    $recordId = $_POST['record_id'];
    $selected_language = $_POST['selectedLanguage'];

    // Обновление текста
    if (isset($_POST['new_description'])) {
        $newDescription = $_POST['new_description'];
        
        $updateQuery = "UPDATE table_images SET description_$selected_language = :newDescription WHERE id = :recordId";
        $updateStatement = $conn->prepare($updateQuery);
    
        if ($updateStatement->execute(['newDescription' => $newDescription, 'recordId' => $recordId])) {
            // Обновление выполнено успешно
            $response = [
                'success' => true,
                'message' => $recordId
            ];
            echo json_encode($response);
        } else {
            // Ошибка выполнения SQL-запроса
            header('HTTP/1.1 500 Internal Server Error');
            $response = [
                'success' => false,
                'message' => 'Ошибка при выполнении SQL-запроса.'
            ];
            echo json_encode($response);
        }
    }
    
    if (isset($_FILES['new_image'])) {
        $newImage = $_FILES['new_image'];
        $target_dir = "../img/r1_photographs/";

        // Удалите файл изображения
        // $sql = "SELECT image_url FROM r1_photographs WHERE id = :recordId";
        // $stmt = $conn->prepare($sql);
        // $stmt->bindParam(':recordId', $recordId);
        // $stmt->execute();
        // $image_url = $stmt->fetch(PDO::FETCH_ASSOC);
        // $image_url = $image_url["image_url"];
        // $file_to_delete = $target_dir . $image_url;
        // unlink($file_to_delete);
        
        // Добавлю новое изображение
        $random_identifier = bin2hex(random_bytes(8)); // Например, 16 символов
        $original_filename = $newImage["name"];
        $extension = pathinfo($original_filename, PATHINFO_EXTENSION);
        $random_filename = $random_identifier . '_' . $original_filename;

        // Определяем целевую директорию
        $target_file = $target_dir . $random_filename;

        // Перемещаем загруженное фото в целевую папку
        if (move_uploaded_file($_FILES["image"]["tmp_name"], $target_file)) {
            $sql = "UPDATE r1_photographs SET image_url = :image_url WHERE id = :recordId";
            $stmt = $conn->prepare($sql);
            $stmt->bindParam(':image_url', $random_filename, PDO::PARAM_STR);
            $stmt->bindParam(':recordId', $recordId, PDO::PARAM_INT);
            $stmt->execute();
        }
    }
    
    // Закройте соединение с базой данных
    $conn = null;
    
    // Верните ответ на клиентскую сторону (например, "Успешно обновлено" или "Ошибка")
    // Пример ответа на клиентскую сторону (JSON):
    
    // $response = [
    //     'success' => true, // Успешно обновлено
    //     'message' => $recordId
    // ];
    
    echo json_encode($response);
}

<?php
session_start();

// Загружаем password
require_once('../parts_php/correctuser.php');

$to = "michael.osipov@gmail.com";
$subject = "Параметры входа на сайт LBK";

$message = "Пароль — " . $correctPassword . "<br><br>";
$message .= "Если не получается войти с этим паролем, можете написать на <a href='mailto:michael.osipov@gmail.com'>michael.osipov@gmail.com</a>";

$headers .= "Content-Type: text/html; charset=UTF-8\r\n";

if (mail($to, $subject, $message, $headers)) {
    // Определяем сообщение
    $mail_message_result = "Письмо успешно отправлено. Если его нет во «Входящих», проверьте папку «Спам».";
} else {
    // Определяем сообщение
    $mail_message_result = "Ошибка отправки";
}


// Кодируем сообщение для передачи в URL
$encodedMessage = urlencode($mail_message_result);

// Перенаправляем с параметром
$redirect_url = "../login.php?message=$encodedMessage";
header("Location: " . $redirect_url);
exit;

<?php
session_start();
require_once '../parts_php/dbconnection.php';
$delete_id = $_GET['delete_id'];
$page_url = $_GET['page_url'];

$sql = "DELETE FROM table_texts WHERE id=:delete_id";
$stmt = $conn->prepare($sql);
$stmt->execute([ "delete_id" => $delete_id ]);

header("location: ../$page_url");


<?php
if ($_FILES['file']['name']) {
    if (!$_FILES['file']['error']) {
        $name = md5(rand(100, 200));
        $ext = explode('.', $_FILES['file']['name']);
        $filename = $name . '.' . $ext[1];
        
        // server 
        // $destination = 'img/text-images/' . $filename;
        // move_uploaded_file($_FILES['file']['tmp_name'], '../' . $destination);
        
        // local
        $destination = '../img/text-images/' . $filename;
        move_uploaded_file($_FILES['file']['tmp_name'], $destination);
        
        $response = [
            // server
            // 'location' => $_SERVER['HTTP_ORIGIN'] . '/work/LBK_PHP/' . $destination
            
            // local
            'location' => $_SERVER['HTTP_ORIGIN'] . '/' . $destination
            
            // local=server? не работает
            // 'location' => $destination
        ];
        echo json_encode($response);

    } else {
        $response = ['error' => 'Ошибка загрузки изображения'];
        echo json_encode($response);
    }

} else {
    $response = ['error' => 'Ошибка загрузки изображения'];
        echo json_encode($response);
}

class ApplyButtonManager {
    constructor(applyBtn) {
        this.applyBtn = applyBtn;
        this.clicked = false;
    }

    setBtnState(active = true) {
        this.applyBtn.textContent = active ? 'APPLY' : 'DONE';
        this.applyBtn.classList.toggle('apply_btn_active', active);
        this.applyBtn.classList.toggle('apply_btn_active_done', !active);
        this.clicked = active;
    }
}

// function setBtnState(active = true) {
//     applyBtn.textContent = active ? 'APPLY' : 'DONE';
//     applyBtn.classList.toggle('apply_btn_active', active);
//     applyBtn.classList.toggle('apply_btn_active_done', !active);
//     clicked = active;
// }
// 
// setBtnState()
// setBtnState(false)

document.addEventListener('DOMContentLoaded', function() {
    const arrows = document.querySelectorAll('.arrow');
    const images = document.querySelectorAll('.gallery div');
    const descriptions = document.querySelectorAll('.painting-description div');
    let currentImageIndex = 0;

    function showImage(index) {
      images.forEach(function(image) {
        image.classList.remove('gallery-active');
      });
      descriptions.forEach(function(description) {
        description.classList.remove('gallery-active');
      });

      images[currentImageIndex].classList.add('gallery-active');
      descriptions[currentImageIndex].classList.add('gallery-active');
    }

    arrows.forEach(function(arrow) {
      arrow.addEventListener('click', function() {
        if (arrow.classList.contains('arrow_left')) {
          currentImageIndex = (currentImageIndex - 1 + images.length) % images.length;
        } else if (arrow.classList.contains('arrow_right')) {
          currentImageIndex = (currentImageIndex + 1) % images.length;
        }

        showImage(currentImageIndex);
      });
    });

  });

  document.addEventListener("DOMContentLoaded", function () {
    document.addEventListener('click', function(event) {
        const navDesktopLinks = document.querySelectorAll('.nav-desktop > a');
        const navDesktopDropdowns = document.querySelectorAll('.nav-desktop_dropdown');
        
        // Проверяем, что ширина браузера меньше 1030px
        if (window.innerWidth < 1030) {
            // Проверяем, был ли клик сделан вне объектов с классом 'nav-desktop' и 'nav-desktop_dropdown'
            let isOutsideNavDesktopLinks = true;
            for (let i = 0; i < navDesktopLinks.length; i++) {
                if (navDesktopLinks[i] === event.target) {
                    isOutsideNavDesktopLinks = false;
                    // Здесь вы можете добавить логику для открытия/закрытия соответствующего списка
                    const dropdown = navDesktopLinks[i].nextElementSibling;
                    if (dropdown.style.display === 'block') {
                        dropdown.style.display = 'none'; // Закрываем список
                    } else {
                        dropdown.style.display = 'block'; // Разворачиваем список
                    }
                    break;
                }
            }
            
            if (isOutsideNavDesktopLinks) {
                // Закрываем все объекты с классом 'nav-desktop_dropdown'
                navDesktopDropdowns.forEach(function(dropdown) {
                    dropdown.style.display = 'none';
                });
            }
        }
    });
    

});

/************************************
    Удаление картинки / художника
************************************/
const deleteConfirmation_btn = document.querySelectorAll('.deleteConfirmation_btn');
deleteConfirmation_btn.forEach((item) => {
    const deleteConfirmation_container = item.querySelector('.deleteConfirmation_container')
    const deleteConfirmation_cancel = item.querySelector('.deleteConfirmation_cancel');
    
    item.addEventListener('click', (e) => {
        deleteConfirmation_container.style.display = 'flex';
        item.style.cursor = "auto";
    })
    
    deleteConfirmation_cancel.addEventListener('click', (e) => {
        e.stopPropagation()
        item.style.cursor = "pointer";
        deleteConfirmation_container.style.display = 'none';
    })
})

const init = () => {
    // 
    const picture_container = document.querySelector('.artists-list_paintings');
    const pictures = picture_container.querySelectorAll('.artists-list-picture_container');
    const paintingsInGallery = Array.from(pictures)
            .filter(picture => picture.classList.contains('in_edit'))
            .map(picture => picture.dataset.paintingId);
    console.log(`paintingsInGallery — ${paintingsInGallery}`)

    pictures.forEach(picture => picture.addEventListener('click', () => picture.classList.toggle('in_edit')));

    const addEditClassToAll = () => pictures.forEach(picture => picture.classList.add('in_edit'));
    const removeEditClassFromAll = () => pictures.forEach(picture => picture.classList.remove('in_edit'));
    
    const createExhibition = () => {
        const selectedPaintings = Array.from(pictures)
            .filter(picture => picture.classList.contains('in_edit'))
            .map(picture => picture.dataset.paintingId);
        console.log(`selectedPaintings — ${selectedPaintings}`)

        let nonMatchingElements = paintingsInGallery.filter(element => !selectedPaintings.includes(element))
            .concat(selectedPaintings.filter(element => !paintingsInGallery.includes(element))); 
        console.log(`nonMatchingElements — ${nonMatchingElements}`);
        console.log("");

        // Добавьте скрытое поле в форму для передачи выбранных картин
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'selected_paintings';
        hiddenInput.value = selectedPaintings.join(',');
        createExhibitionForm.appendChild(hiddenInput);

        // Отправка формы
        createExhibitionForm.submit();

     }

    const saveAndContinue = () => {
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'continue_setup';
        hiddenInput.value = 'continue_setup';
        createExhibitionForm.appendChild(hiddenInput);

        createExhibition()
    }

    // const btn_selectAll = document.querySelector('#selectAll');
    // const btn_deselect = document.querySelector('#deselect');
    // const btn_create = document.querySelector('#create');
    const btn_save = document.querySelector('#save');
    
    selectAll.addEventListener('click', addEditClassToAll);
    deselect.addEventListener('click', removeEditClassFromAll);
    if(btn_save){
        btn_save.addEventListener('click', saveAndContinue);
    }
    create.addEventListener('click', createExhibition);
}

document.addEventListener('DOMContentLoaded', init)

const images = document.getElementsByClassName("image");
const descriptions = document.getElementsByClassName('caption');

const fullscreen = document.querySelector(".fullscreen");
const fullscreenImage = fullscreen.querySelector("img");
const fullscreenDescription = fullscreen.querySelector("p");
const prevArrow = fullscreen.querySelector(".prev");
const nextArrow = fullscreen.querySelector(".next");
const closeBtn = fullscreen.querySelector(".close");

let currentIndex = 0;

// Open fullscreen image
function openFullscreen(index) {
  currentIndex = index;
  fullscreenImage.src = images[index].src;
  fullscreenDescription.innerHTML = descriptions[index].innerHTML;
  fullscreen.style.display = "flex";
}

// Close fullscreen image
function closeFullscreen() {
  fullscreen.style.display = "none";
  fullscreenImage.src = "";
  fullscreenDescription.innerHTML = "";
}

// Display previous image
function showPrev() {
  currentIndex--;
  if (currentIndex < 0) {
    currentIndex = images.length - 1;
  }
  fullscreenImage.src = images[currentIndex].src;
  fullscreenDescription.innerHTML = descriptions[currentIndex].innerHTML;
}

// Display next image
function showNext() {
  currentIndex++;
  if (currentIndex >= images.length) {
    currentIndex = 0;
  }
  fullscreenImage.src = images[currentIndex].src;
  fullscreenDescription.innerHTML = descriptions[currentIndex].innerHTML;
}

// Add click event listeners to each image to open them
for (let i = 0; i < images.length; i++) {
  images[i].addEventListener("click", function() {
    openFullscreen(Array.prototype.indexOf.call(images, this));
  });
}
// Add click event listeners to arrows and close button
prevArrow.addEventListener("click", showPrev);
nextArrow.addEventListener("click", showNext);
closeBtn.addEventListener("click", closeFullscreen);
fullscreenImage.addEventListener("click", closeFullscreen);

document.addEventListener('DOMContentLoaded', function() {
    
    const showDivHeight = () => {
        const mainBlock = document.querySelector('main')
        const headerBlock = document.querySelector('header')
        const heightDiv = document.createElement('div');

        heightDiv.style.position = 'fixed';
        // heightDiv.style.width = '100%';
        // heightDiv.style.height = '100%';
        heightDiv.style.top = '0';
        heightDiv.style.left = '0';
        heightDiv.style.backgroundColor = 'white';
        heightDiv.style.opacity = ".7";
        heightDiv.style.color = 'black';
        heightDiv.style.padding = '10px';
        heightDiv.style.zIndex = '9999';
        heightDiv.style.pointerEvents = 'none';
        
        document.body.appendChild(heightDiv);        
        heightDiv.innerHTML = `Content H: ${mainBlock.offsetHeight}px / Header H: ${headerBlock.offsetHeight}px <br> Body H: ${document.body.offsetHeight}px  Body W: ${document.body.offsetWidth}px<br> Body-Header= ${document.body.offsetHeight - headerBlock.offsetHeight}`
    }

    const mainSectionScroll = () => {
        const links = document.querySelectorAll('.left-side_link')
        const itemScroll = document.querySelector('main section .overflowItem_scroll')
        
        const screenWidth = window.innerWidth || document.documentElement.clientWidth;
        links.forEach( link => link.addEventListener( 'click', () => {
            if (screenWidth < 1200) itemScroll.style.top = '2px'
            else itemScroll.style.top = '2px'
        }))
    }

    

    mainSectionScroll()
    // showDivHeight()
})

document.addEventListener('DOMContentLoaded', function() {
    let userAgent = navigator.userAgent;
    let iPadVersion = 'Nothing';

    if (userAgent.match(/iPad/i)) {
        let matches = userAgent.match(/iPad;.*CPU.*OS (\d[_\d]*)/i);
        
        if (matches && matches.length > 1) {
            iPadVersion = matches[1].replace(/_/g, '.');
        }
    }

    if (iPadVersion) {
        // Создаем элемент div в JavaScript
        let versionDiv = document.createElement('div');
        
        // Добавляем атрибут id
        versionDiv.id = 'versionContainer';

        // Стилизуем div
        versionDiv.style.position = 'fixed';
        versionDiv.style.top = '0';
        versionDiv.style.left = '0';
        versionDiv.style.color = '#fff';
        versionDiv.style.background = 'black';
        versionDiv.style.padding = '10px';
        versionDiv.style.zIndex = '9999';

        // Устанавливаем текст версии в div
        versionDiv.innerText = 'Версия iPad: ' + iPadVersion;
        versionDiv.innerText += ' ——— '
        versionDiv.innerText += userAgent
        // console.log();

        // Добавляем div в DOM
        document.body.appendChild(versionDiv);
    }
});

document.addEventListener("DOMContentLoaded", function () {
    const leftSideLinks = document.querySelectorAll('.left-side_link');
    leftSideLinks.forEach( link => {
     link.addEventListener('click', ()=> {
         leftSideLinks.forEach( link => { link.classList.remove('left-side__active') })
         link.classList.add('left-side__active')
     })
    })

    let consShow = false
    const videoContainer = document.querySelector('figure iframe')
    
    showDimensions = (img) => {
        console.log('img Width — ' + img.width + 'px')
        console.log('img MAXwidth — ' + img.style.maxWidth + 'px')
        console.log('videoContainer width — ' + videoContainer.clientWidth + 'px')
        console.log('');
        console.log('img Height — ' + img.height + 'px')
        console.log('img MAXheight — ' + img.style.maxHeight + 'px')
        console.log('videoContainer height — ' + videoContainer.offsetHeight + 'px')
    }
    
    const images = document.querySelectorAll('figure img')
    images.forEach( img => {

        img.style.maxHeight = videoContainer.offsetHeight + 'px'
        img.style.maxWidth = videoContainer.clientWidth  + 'px'

        const screenWidth = window.innerWidth || document.documentElement.clientWidth;
        if(!consShow) {
            const videoContainers = document.querySelectorAll('figure iframe')
            videoContainers.forEach( (videoContainer) => {
                videoContainer.height = img.height
            })
            consShow = true
            showDimensions(img)
        }
        
    })
 });

 document.addEventListener('DOMContentLoaded', function() {
    const formImg_btn = document.getElementById('formImg_btn')
    const formImg_area = document.getElementById('formImg_area')
    
    const formVideo_btn = document.getElementById('formVideo_btn')
    const formVideo_area = document.getElementById('formVideo_area')
    
    const media_type = document.getElementById('media_type')

    formVideo_area.style.display = "none";

    formImg_btn.addEventListener('click', () => {
        formVideo_area.style.display = "none";
        formImg_area.style.display = "block";
        formImg_btn.classList.toggle('formbtn_deactive')
        formVideo_btn.classList.toggle('formbtn_deactive')
        media_type.value = "photo"
    })

    formVideo_btn.addEventListener('click', () => {
        formImg_area.style.display = "none";
        formVideo_area.style.display = "block";
        formImg_btn.classList.toggle('formbtn_deactive')
        formVideo_btn.classList.toggle('formbtn_deactive')
        media_type.value = "video"
    })

    let formTop_hidden = false;
    const formTop = document.getElementById('formTop')
    const formTop_btn = document.getElementById('formTop_btn')
    formTop_btn.addEventListener('click', () => {
        if (!formTop_hidden) {
            formTop_btn.innerHTML = "Развернуть форму"
            formTop.classList.add("meetings-lectures_form-hidden")
            formTop_hidden = true
        } else {
            formTop_btn.innerHTML = "Свернуть форму"
            formTop.classList.remove("meetings-lectures_form-hidden")
            formTop_hidden = false
        }
    })
});

const init = () => {

    // Загрузка картинки
    const imageInput = document.querySelector("input[name='exhibition_img']")
    const previewImage = () => {
        const image = document.querySelector(".text-add__img img")

        if (imageInput.files && imageInput.files[0]) {
            const reader = new FileReader();
            reader.onload = (e) => {
                image.src = e.target.result;
                image.style.display = 'block';
            };
            reader.readAsDataURL(imageInput.files[0]);
            imageInput.style.color = 'black';
        } else {
            image.src = '';
            image.style.display = 'none';
        }
    }
    if (imageInput) imageInput.addEventListener('change', previewImage);


    // Инициализируем редакторы для разных языков
    const tinyMceEditor_ru = new TinyMCEEditor('.description_editor_ru')
    const tinyMceEditor_en = new TinyMCEEditor('.description_editor_en')
    const tinyMceEditor_de = new TinyMCEEditor('.description_editor_de')

    // Перед отправкой формы
    const descriptionCollect = (e) => {
        // e.preventDefault()

        const languageEditors = {
            ru: tinyMceEditor_ru,
            en: tinyMceEditor_en,
            de: tinyMceEditor_de
        };

        for (const lang in languageEditors) {
            const tinymceContent = languageEditors[lang].getContent();
            const textarea = document.querySelector(`.description_editor_${lang}`);
            textarea.value = tinymceContent;

            console.log(textarea.value);
        }
    };
    const form = document.querySelector('form')
    form.addEventListener('submit', descriptionCollect)

}

document.addEventListener('DOMContentLoaded', init)

class TinyMCEEditor {
    constructor(selector) {
        this.selector = selector;
        this.editorInstance = null;
        this.init();
    }

    init() {
        const tinymceOptions = {
            selector: this.selector,
            menubar: false,
            plugins: 'autolink charmap image link',
            toolbar: 'undo redo | italic link image',
            content_style: `
                img { 
                    max-width: calc(27.3vh * 2.5); 
                    width: auto; 
                    height: auto; 
                    display: block; 
                    margin: 0 auto 
                }
            `,
            file_picker_types: 'image',
            file_picker_callback: this.handleFilePicker.bind(this),
            setup: (editorInstance) => {
                this.editorInstance = editorInstance;
            }
        };

        tinymce.init(tinymceOptions);
    }

    handleFilePicker(callback) {
        const input = document.createElement('input');
        input.setAttribute('type', 'file');
        input.setAttribute('accept', 'image/*');

        input.onchange = () => {
            const file = input.files[0];

            const formData = new FormData();
            formData.append('file', file);

            const xhr = new XMLHttpRequest();
            xhr.open('POST', 'actions/table-text_img-upload.php', true);

            xhr.onload = () => {
                if (xhr.status === 200) {
                    const response = JSON.parse(xhr.responseText);
                    console.log(response);
                    callback(response.location, { title: file.name });
                }
            };

            xhr.send(formData);
        };

        input.click();
    }
}



// update-longTextPage.js
// let TinyMCEEditor;
// // Функция для инициализации редактора TinyMCE
// function initializeTinyMCE(selector) {
//     tinymce.init({
//         selector: selector,
//         menubar: false,
//         plugins: 'autolink charmap image link',
//         toolbar: 'undo redo | italic link image',
//         content_style: 
//             `img { 
//                 max-width: calc(27.3vh * 2.5); 
//                 width: auto; 
//                 height: auto; 
//                 display: block; 
//                 margin: 0 auto 
//             }`,
//         file_picker_types: 'image',
//         file_picker_callback: function (callback, value, meta) {
//             let input = document.createElement('input');
//             input.setAttribute('type', 'file');
//             input.setAttribute('accept', 'image/*');

//             input.onchange = function () {
//                 let file = this.files[0];

//                 let formData = new FormData();
//                 formData.append('file', file);

//                 let xhr = new XMLHttpRequest();
//                 xhr.open('POST', 'actions/table-text_img-upload.php', true);

//                 xhr.onload = function () {
//                     if (xhr.status === 200) {
//                         let response = JSON.parse(xhr.responseText);
//                         console.log(response)
//                         callback(response.location, { title: file.name });
//                     }
//                 };

//                 xhr.send(formData);
//             };

//             input.click();
//         },
//         setup: function (editorInstance) {
//                     TinyMCEEditor = editorInstance;
//         }
//     });
// }
// initializeTinyMCE('#description_textarea');


// update-textpage.js
// let tinyMCEEditor;
// tinymce.init({
//     selector: '#description_editor',
//     menubar: false,
//     plugins: 'autolink image link wordcount',
//     file_picker_types: 'image',
//     toolbar: 'undo redo | italic | link image ',
//     content_style: `img { 
//         max-width: calc(27.3vh * 2.5); 
//         width: auto; 
//         height: auto; 
//         display: block; 
//         margin: 0 auto 
//     }`,
//     setup: function (editorInstance) {
//         tinyMCEEditor = editorInstance;
//     }
// });

document.addEventListener('DOMContentLoaded', function() {

    let clicked = false
    let fieldType;
    

    /********************************************
    Нажатие на тексты и включение textarea
    ********************************************/
    const img = document.querySelector('.colomn-middle img');
    const imgEditor = document.querySelector('.img-editor');
    imgEditor.style.display = 'none'
    const imgUpdate = (e) => {
        
        if(!clicked){
            fieldType = 'img';
            clicked = true;
            applyButtonManager.setBtnState()
            e.target.classList.add('in_edit');
            imgEditor.click();
        }

        imgEditor.addEventListener('change', (e) => {
            selectedFile = e.target.files[0];
            if (selectedFile) {
                // Проверка, что выбранный файл - изображение (опционально)
                if (selectedFile.type.startsWith('image/')) {
                    const reader = new FileReader();
                    
                    reader.onload = (e) => {
                        // Обновляем атрибут src изображения, чтобы отобразить выбранное изображение
                        img.src = e.target.result;
                    };
                    
                    // Считываем выбранный файл как Data URL
                    reader.readAsDataURL(selectedFile);
                    
                } else {
                    alert('Пожалуйста, выберите изображение.');
                }
            }
        });
    }
    img.addEventListener('click', imgUpdate)

    const smallText = document.querySelector('.small_text');
    const smallTextEditor = document.querySelector('.small_text-editor');
    smallTextEditor.style.display = 'none'
    const smallTextUpdate = () => {
        if(!clicked) {
            fieldType = "smallText"
            clicked = true
            applyButtonManager.setBtnState()
            smallText.style.display = 'none'
            smallTextEditor.style.display = 'inline-block'
        }
    }
    smallText.addEventListener('click', smallTextUpdate)
    
    const rightText = document.querySelector('.right_text');
    const rightTextEditor = document.querySelector('.right_text-editor');
    rightTextEditor.style.display = 'none'
    const rightTextUpdate = () => {
        if(!clicked) {
            fieldType = "rightText"
            clicked = true
            applyButtonManager.setBtnState()
            rightText.style.display = 'none'
            rightTextEditor.style.display = 'inline-block'
        }
    }
    rightText.addEventListener('click', rightTextUpdate)


    /********************************
        Сохранение изменений в БД
    *********************************/
    const applyBtn = document.getElementById('apply_btn');
    const applyButtonManager = new ApplyButtonManager(applyBtn)
    const applyBtnUpdate = (e) => {
        // Деактивация кнопки
        applyButtonManager.setBtnState(false)
        e.preventDefault();
        clicked = false;

        // Сохранение 
        
        switch (fieldType) {
            case 'smallText':
                smallText.textContent = smallTextEditor.value
                smallText.style.display = 'block'
                smallTextEditor.style.display = 'none'
                break;
            case 'rightText':
                rightText.textContent = rightTextEditor.value
                rightText.style.display = 'block'
                rightTextEditor.style.display = 'none'
                break;
            case 'img':
                img.classList.remove('in_edit');
                break;
        }
    }
    applyBtn.addEventListener('click', applyBtnUpdate)
})

document.addEventListener('DOMContentLoaded', function() {

/*************************************************
    Превью изображения в форме загрузки сверху
    *************************************************/
   // Функция, которая будет вызвана при изменении выбранного файла
   
   function previewImage() {
       const input = document.querySelector('input[name="image"]');
       const preview = document.getElementById('previewImage');
       // const imageAddForm_btn = document.querySelector('.imageAdd-form_btn');
       
       if (input.files && input.files[0]) {
           const reader = new FileReader();
           reader.onload = function(e) {
               preview.src = e.target.result;
               preview.style.display = 'block';
            };
            reader.readAsDataURL(input.files[0]);
            
        // imageAddForm_btn.style.display = 'inline-block';
        input.style.color = 'black';
    } else {
        preview.src = '';
        preview.style.display = 'none';
    }
}

// Отслеживаем изменения в поле input с атрибутом name="image"
const imageInput = document.querySelector('input[name="image"]');
imageInput.addEventListener('change', previewImage);

});

document.addEventListener('DOMContentLoaded', function() {
/*************************
    Создание tinymce
*************************/
let tinyMCEEditor = new TinyMCEEditor('#description_textarea')

/********************************************
Нажатие на тексты и включение textarea
********************************************/
// Область редактора
const editorContainer = document.getElementById('editor_container') // Область редактора
editorContainer.style.display = 'none';

const titleEditor = document.getElementById("title_editor"); // Инпут для заголовка
const titleInEdit_id = titleEditor.dataset.titileEditId
const titleLink = document.getElementById(titleInEdit_id)


// Текстовая часть страницы
const description = document.getElementById("description");
const descriptionClick = () => {
    if(!clicked){ 
        applyButtonManager.setBtnState()
  
        // Область редактора
        description.style.display = 'none';
        editorContainer.style.display = 'block';
    }
}
description.addEventListener('click', descriptionClick)


/********************************
 Сохранение изменений в БД
 *********************************/
let recordId, fieldType, selectedFile; // Номер записи
let clicked = false; // Ничего не нажато, когда страница загружена
const applyBtn = document.getElementById('apply_btn');
const applyButtonManager = new ApplyButtonManager(applyBtn)


// Кнопка сохранения
 applyBtn.addEventListener('click', (e) => {
    e.preventDefault();

    // Обновить текст в description
    description.innerHTML = tinyMCEEditor.editorInstance.getContent()
    titleLink.innerHTML = titleEditor.value
    description.style.display = 'block';
    
    // Инпут для текстовой части
    const descriptionTextarea = document.getElementById("description_textarea"); 
    descriptionTextarea.value = description.innerHTML

    // Скрыть редактор
    editorContainer.style.display = 'none';
    
    // Деактивация кнопки
    applyButtonManager.setBtnState(false)

    // Отправка формы
    const formSend = document.getElementById('text-update')
    if (formSend) formSend.submit();
});
});

document.addEventListener('DOMContentLoaded', function() {

/********************************************
    Нажатие на тексты и включение textarea
********************************************/
let clicked = false, // Ничего не нажато

    recordId, // Номер записи
    fieldType, // Тип поля — описание картинки или само изображение
    selectedFile; // Выбранный файл

const figures = document.querySelectorAll("figure"); // Все блоки к изображениями
const applyBtn = document.getElementById('apply_btn'); // Кнопка "применить"
const applyButtonManager = new ApplyButtonManager(applyBtn)

// Примените обработчик событий к каждому элементу
for (const figure of figures) {
    const figureId = figure.dataset.recordId; // Получаю ID блока с картинкой — по изображения в БД 

    // Описание под картинкой
    const caption = figure.querySelector("figcaption")
    caption.addEventListener("click", (e) => {
        // Поиск редактора TEXTAREA внутри блока
        const figure = e.target.closest("figure");
        const textarea = figure.querySelector("textarea")
        
        if(!clicked){ 
            // Запоминаю номер записи в БД и тип обновления
            recordId = figureId; 
            fieldType = 'text'; 

            applyButtonManager.setBtnState()
            e.target.style.display = 'none'; // скрываю описание
            textarea.style.display = 'block'; // открываю редактор
            // textarea.focus(); // Фокусировка на TEXTAREA. Удобно, но скачет страница на iPad
        }
    });
    
    // Изображение
    const image = figure.querySelector("img")
    image.addEventListener("click", (e) => {
        // Поиск редактора INPUT-file внутри блока
        const figure = e.target.closest("figure");
        const image_input = figure.querySelector("input[type='file']")
        
        image_input.addEventListener('change', (e) => {
            selectedFile = e.target.files[0];

            if (selectedFile) {
                // Проверка, что выбранный файл - изображение
                if (selectedFile.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        // Обновляем атрибут src изображения, чтобы отобразить выбранное изображение
                        const img = figure.querySelector("img")
                        img.src = e.target.result;
                    };
                    // Считываем выбранный файл как Data URL
                    reader.readAsDataURL(selectedFile);
                } else {
                    alert('Пожалуйста, выберите изображение.');
                }
            }
        });
        
        if(!clicked){
            // Запоминаю номер записи в БД и тип обновления
            recordId = figureId;
            fieldType = 'img';

            applyButtonManager.setBtnState()
            e.target.classList.add('in_edit');
            image_input.click();
        }
    });        
}


/********************************
    Сохранение изменений в БД
*********************************/
apply_btn.addEventListener('click', (e) => {
    e.preventDefault();
    applyButtonManager.setBtnState(false)

    // Ищу FIGURE, где было обновление 
    const updatedObj = document.querySelector(`[data-record-id='${recordId}']`);
    let description, selectedLanguage;
    
    console.log(recordId)
    console.log(fieldType)
    
    // Формирую отправку данных
    const formData = new FormData();
    formData.append('record_id', recordId);
    formData.append('field_type', fieldType);
    formData.append('selected_language', selectedLanguage);
    switch (fieldType) {
        // Новый текст
        case 'text':
            selectedLanguage = updatedObj.dataset.selectedLang ;// Выбранный язык
            console.log(selectedLanguage)
            description = updatedObj.querySelector('textarea').value
            formData.append('new_description', description); 
            console.log(description)
            break;

        // Новая картинка
        case 'image':
            formData.append('new_image', selectedFile);
            console.log(selectedFile);
            break;
    }
  
    // Отправка данных на сервер с использованием AJAX
    // const xhr = new XMLHttpRequest();
    // xhr.open('POST', '../actions/photogallery-update.php', true);
    // xhr.send(formData);

    if (fieldType === 'text') {
        // Обновить текст в figcaption
        const figcaption = updatedObj.querySelector('figcaption');
        const textarea = updatedObj.querySelector('textarea');
        figcaption.style.display = 'block';
        figcaption.textContent = description;

        // Скрыть textarea
        textarea.style.display = 'none';
    }
    if (fieldType === 'img') {
        // Убрать границу вокруг картинки
        const img = updatedObj.querySelector('img');
        img.classList.remove('in_edit');
    } 


    // Обработка ответа от сервера
    // xhr.onreadystatechange = function() {
    //     if (xhr.readyState === 4) {
    //         if (xhr.status === 200) {
    //             // Есть ответ от сервера
    //             const response = JSON.parse(xhr.responseText);
                
    //             if (response.success) {
    //                 // Сообщение об успешном обновлении
    //                 alert('Данные успешно обновлены' + response.message);
    //             } else {
    //                 // Сервер вернул сообщение об ошибке
    //                 alert('Ошибка: ' + response.message);
    //             }
    //         } else {
    //             // Ошибка в статусе ответа
    //             alert('Произошла ошибка при обновлении данных');
    //         }
    //     }
    // };

});



/*************************************************
    Превью изображения в форме загрузки сверху
*************************************************/
// Функция, которая будет вызвана при изменении выбранного файла
function previewImage() {
    const input = document.querySelector('input[name="image"]');
    const preview = document.getElementById('previewImage');
    const imageAddForm_btn = document.querySelector('.imageAdd-form_btn');
    
    if (input.files && input.files[0]) {
        const reader = new FileReader();
        reader.onload = function(e) {
            preview.src = e.target.result;
            preview.style.display = 'block';
        };
        reader.readAsDataURL(input.files[0]);
        
        imageAddForm_btn.style.display = 'inline-block';
        input.style.color = 'black';
    } else {
        preview.src = '';
        preview.style.display = 'none';
    }
}

// Отслеживаем изменения в поле input с атрибутом name="image"
const imageInput = document.querySelector('input[name="image"]');
imageInput.addEventListener('change', previewImage);

});

document.addEventListener('DOMContentLoaded', function() {
/*************************
    Создание tinymce
*************************/
let tinyMceEditor = new TinyMCEEditor('#description_editor');

/********************************************
Нажатие на тексты и включение textarea
********************************************/
const editorContainer = document.getElementById('editor_container') // Область редактора
editorContainer.style.display = 'none';

// Кнопка сохранения
let recordId, fieldType, selectedFile; // Номер записи
let clicked = false; // Ничего не нажато, когда страница загружена
const applyBtn = document.getElementById('apply_btn');
const applyButtonManager = new ApplyButtonManager(applyBtn)


// Нажатие на картинку
const figureImg = document.getElementById("figure_img"); // Картинка          
const figureImg_input = document.getElementById("figure_img_input"); // Скрытый input для этой картинки
if (figureImg) {
    figureImg.addEventListener('click', (e) => {
        figureImg_input.addEventListener('change', (e) => {
            selectedFile = e.target.files[0];
            if (selectedFile) {
                // Проверка, что выбранный файл - изображение (опционально)
                if (selectedFile.type.startsWith('image/')) {
                    const reader = new FileReader();
                    
                    reader.onload = (e) => {
                        // Обновляем атрибут src изображения, чтобы отобразить выбранное изображение
                        figureImg.src = e.target.result;
                    };
                    
                    // Считываем выбранный файл как Data URL
                    reader.readAsDataURL(selectedFile);
                    
                } else {
                    alert('Пожалуйста, выберите изображение.');
                }
            }
        });
        
        if(!clicked){
            clicked = true;
            
            fieldType = 'img';
            applyButtonManager.setBtnState()
            
            e.target.classList.add('in_edit');
            figureImg_input.click();
        }
    })
}

// Нажатие описание картинки
const figcaption = document.getElementById("figcaption");                       // Описание под отдельной картинкой
const figcaption_editor = document.getElementById("figcaption_editor");         // Инпут для этого описания
if (figcaption) {
    figcaption.addEventListener('click', (e) => {
        if(!clicked){
            
            clicked = true;
            fieldType = 'figcaption';
            applyButtonManager.setBtnState()
            
            e.target.style.display = 'none';
            figcaption_editor.style.display = 'block';
            figcaption_editor.focus();
        }
    })
}

// Нажатие на текст
const description = document.getElementById("description");                     // Текстовая часть страницы
const description_container = document.getElementById('description_container')  // Инпут для текстовой части
description.addEventListener('click', (e) => {
    if(!clicked){
        
        clicked = true;
        fieldType = 'description';
        applyButtonManager.setBtnState()
        
        // Контейнер
        description_container.style.width = '84vh';
        description_container.style.height = '84vh';

        editorContainer.style.display = 'block'; // Редактор показать
        description.style.display = 'none'; // Текст скрыть
    }
})



/********************************
    Сохранение изменений в БД
*********************************/
applyBtn.addEventListener('click', (e) => {
    e.preventDefault();
    clicked = false;
    applyButtonManager.setBtnState(false)

    const formSend = document.querySelector('#exhibition_update')

    // Сохранение
    switch (fieldType) {
        
        case 'figcaption':
            figcaption.textContent = figcaption_editor.value;// Обновить текст в figcaption
            figcaption.style.display = 'block';
            figcaption_editor.style.display = 'none'; // Скрыть textarea

            // Перенос в форму
            if (formSend) formSend.appendChild(figcaption_editor)
            break;

        case 'description':
            // Обновить текст в description
            description.innerHTML = tinyMceEditor.editorInstance.getContent().replace(/<\/?strong>/g, '')
            description.style.display = 'block';
            
            // Обнулить настройки контейнера
            description_container.style.width = 'auto';
            description_container.style.height = 'auto';
            
            // Скрыть редактор
            editorContainer.style.display = 'none';

            // Перенос в форму
            const descriptionTextarea = document.getElementById('description_editor')
            descriptionTextarea.innerHTML = description.innerHTML
            if (formSend) formSend.appendChild(descriptionTextarea)
            break;

        case 'img':
            figureImg.classList.remove('in_edit'); // Убрать границу вокруг картинки
            break;
    }

    // Отправка формы
    if (formSend) formSend.submit();
});
});

document.addEventListener("DOMContentLoaded", function () {

    // Create HTML elements and apply styles

    const container = document.createElement('div');
    container.style.position = 'fixed';
    container.style.top = '10px';
    container.style.left = '50%';
    container.style.transform = 'translateX(-50%)';
    container.style.backgroundColor = 'rgba(255,255,255,.7)';
    container.style.padding = '5px';

    const number = document.createElement('span');
    number.style.color = 'black';
    number.style.fontSize = '14px';


    // Function to update the width, height of the browser window, and body height

    function updateWindowSize() {
        const width = window.innerWidth;
        const height = window.innerHeight;
        const bodyHeight = document.body.offsetHeight;
        number.textContent = `${width} x ${height}, Body Height: ${bodyHeight}px`;
    }


    // Update the browser window dimensions on page load and when the window is resized

    window.addEventListener('load', updateWindowSize);
    window.addEventListener('resize', updateWindowSize);

    
    // Add elements to the page

    container.appendChild(number);
    document.body.appendChild(container);

});

<?php
$hostDB = "localhost";

// Server
// $baseName = "wm12487_lbk";
// $userDB = "wm12487_lbk";
// $passDB = "pIBym^C^{*78";

// Local
$baseName = "lbk";
$userDB = "root";

// WIN 
$passDB = "";

// MAC
// $passDB = "root";
    
try {
    $dsn = 'mysql:host=' . $hostDB . ';dbname=' . $baseName;
    $conn = new PDO($dsn, $userDB, $passDB);
    // Далее вы можете выполнять запросы к базе данных
    // echo $host;
} catch (PDOException $e) {
    echo "Ошибка подключения: " . $e->getMessage();
}
?>

<div class="column list-scrolling_mask">
    <ul class="overflowItem_scroll">
        
        <?php
        // Получаем список
        $sql = "SELECT * FROM $page_type" . (($page_type === 'Artists') ? " WHERE in_catalog = 'on' ORDER BY last_name_$selectedLang" : "");
        $stmt = $conn->prepare($sql);
        $stmt->execute();
        ?>

        <!-- Настоящий список -->
        <?php while ($data = $stmt->fetch(PDO::FETCH_ASSOC)): ?>
            <li>
                <a href="r-2_catalog-artist.php?artist_id=<?=$data["artist_id"]?>" <?=($catalog_artist && $data['artist_id']==$artist_id)? 'style="font-weight: bold; color: rgba(0, 0, 0, .4);"':'';?>>
                    <?=$data["last_name_$selectedLang"]?>
                    <?=preg_split('//u', $data["name_$selectedLang"], -1, PREG_SPLIT_NO_EMPTY)[0]?>.<?=preg_split('//u', $data["middle_name_$selectedLang"], -1, PREG_SPLIT_NO_EMPTY)[0]?>.
                </a>
            </li>
        <?php endwhile; ?>

        <?php 
            // Временный список
            $artists_list_tmparr = [
                'Иванов А.И.',
                'Селиванов А.И.',
                'Кор Б.О.',
                'Рябушкин Н.Л.',
                'Сониковский А.И.',
                'Лапин Р.И.',
                'Перов Г.В.',
                'Лозовский Н.Л.',
            ];
            $rand_number = mt_rand(0, 7);
            for($i = 0; $i < 30; $i ++) {
                $rand_number_new = mt_rand(0, 7);
                while ($rand_number == $rand_number_new) {
                    $rand_number_new = mt_rand(0, 7);
                }
                $rand_number = $rand_number_new;
                echo "<li style='opacity: 1'>" . $artists_list_tmparr[$rand_number] . "</li>";
            }
        ?>

    </ul>

    <!-- Кнопка добавления нового объекта -->
    <?php if ($_SESSION['login']): ?>
        <a class="editor_btn text-add_btn" href="artists_list_add.php">Добавить художника</a>
    <?php endif; ?>

</div>

<?php
// Получаем список
switch ($page_type) {
    case 'Artists':
        $sql = "SELECT * FROM $page_type WHERE in_catalog = 'on' ORDER BY last_name_$selectedLang";
        break;
    
    case 'exhibitions':
        $sql = "SELECT * FROM $page_type WHERE exhibition_type != 'rubinstein'";
        break;
    
    default:
        $sql = "SELECT * FROM $page_type";
        break;
}
// $sql = "SELECT * FROM $page_type" . (($page_type == 'Artists') ? " WHERE in_catalog = 'on' ORDER BY last_name_$selectedLang" : " WHERE exhibition_type != '	
// rubinstein'");
$stmt = $conn->prepare($sql);
$stmt->execute();
?>
<main class="gallery-grid_4col wrap overflowItem_scroll">
    <?php while ($data = $stmt->fetch(PDO::FETCH_ASSOC)): ?>
        
        
        <!-- Художники -->
        <?php if ($page_type == 'Artists'): ?>
            <a href="r-2_catalog-artist_descr.php?artist_id=<?=$data["artist_id"]?>">
                <figure>
                    <img src='img/painters-portrets/<?=$data["portrait_image_url"]?>' alt='<?=$data["name_$selectedLang"]?>' >
                    <figcaption>
                        <?=$data["last_name_$selectedLang"]?>
                        <?=$data["name_$selectedLang"]?>
                        <?=(isset($data["middle_name_$selectedLang"]))?$data["middle_name_$selectedLang"]:''?><br>
                        <?=$data['birth_year']?> — <?=$data['death_year']?>
                    </figcaption>
                </figure>
            </a>
        <?php endif; ?>
        

        <!-- Выставки -->
        <?php
        // Не показывать в списке, если нет названия, картинки и описания на выбранном языке
        $show_item = true;
        if ($data["title_$selectedLang"] == 'Название') {
            $show_item = false;
        }
        if ($data["description_$selectedLang"] == '<p>Описание</p>') {
            // $show_item = false;
        }
        if ($data["exhibition_img"] == 'exhibition-sample.jpg') {
            // $show_item = false;
        }
        ?>
        <?php if ($page_type == 'exhibitions' && $show_item && !$_SESSION['login'] || $page_type == 'exhibitions' && $_SESSION['login']  ): ?>
            <a href="r-3_exhibition.php?exhibition_id=<?=$data["exhibition_id"]?>"> 
                <figure>
                    <img src='img/exhibitions/<?=$data["exhibition_img"]?>' alt='<?=$data["title_$selectedLang"]?>'>
                    <figcaption>
                        <p style="color: rgba(0, 0, 0, .5); margin: 4px 0 2px"><?=($data["exhibition_type"]=='solo')? 'Персональная': 'Тематическая';?>:</p>
                        <?=$data["title_$selectedLang"]?>
                    </figcaption>
                </figure>
            </a>
        <?php endif; ?>
        
        
    <?php endwhile; ?>
            

<!-- Временное отображение -->
<?php for($d = 0; $d < 20; $d++): ?>
    <?php $randomArtist=rand(0, 3); ?>
    <a href="" style="opacity: .3">
        <figure>
            <img src="<?=$artistsImgArray[$randomArtist]; ?>" alt="Trulli"  >
            <figcaption >
                Временный Художник Длянаполнения<br>1934 — 1999
            </figcaption>
        </figure>
    </a>
<?php endfor; ?>

</main>

<main class="wrap overflowItem_hide exhibition_container container">
    <div class="exhibition_gallery__elements">

        <?php for($painting_row = 0; $painting_row < count($exhibitions_paintings); $painting_row += 3): ?>
            <div class="flex gallery-3items exhibition_gallery__element">
                
                <?php for ($i=0; $i < 3 && ($painting_row + $i < count($exhibitions_paintings)); $i++): ?>
                    <div class="column exhibition-gallery">
                        <?php if($exhibitions_paintings[$painting_row + $i]['image_url'] != ''): ?>
                        <figure>

                            <?php if ($_SESSION['login']): // Edit mode ?>
                                <!-- Кнопка удаления записи -->
                                <div>
                                    <span class="editor_btn warning_btn  deleteConfirmation_btn">
                                        Удалить
                                        
                                        <!-- Скрытый блок с подтверждением -->
                                        <div class="deleteConfirmation_container">
                                            <p>Удалить картину (только из выставки): <b><?= $exhibitions_paintings[$painting_row + $i]["title_$selectedLang"] ?></b>?</p>
                                            <div>
                                                <a class="editor_btn warning_btn" style="color: white" href="exhibition_process_img-delete.php?delete_id=<?=$exhibitions_paintings[$painting_row + $i]['id']?>&exhibition_id=<?=$exhibition_id?>">Удалить</a>
                                                <!-- <a class="editor_btn warning_btn" style="color: white" href="actions/table-text_delete.php?delete_id=<?=$data[$i]['id']?>&page_url=<?=$page_url?>">Удалить</a> -->
                            
                                                <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                                            </div>
                                        </div>
                                    </span>
                                </div>
                            <?php endif; // End of Edit mode ?>

                            <!-- page_type == 'exhibition_new — потом убрать -->
                            <img src="img/<?= ($page_type == 'exhibition_new') ? 'paintings' : 'exhibitions-paintings' ?>/<?=$exhibitions_paintings[$painting_row + $i][($page_type == 'exhibition_new') ? 'image_url' : 'painting_url' ]?>" alt="<?=$exhibitions_paintings[$painting_row + $i]["title_$selectedLang"]?>" class="image">
                            <figcaption class="caption">
                                <?=$exhibitions_paintings[$painting_row + $i]["title_$selectedLang"]?>
                                <!-- Имя художника, если ($page_type == 'exhibition_new') и ?? ($exhibition_type == 'theme') -->
                            </figcaption>
                        </figure>
                        <?php endif; ?>
                    </div>
                <?php endfor; ?>
                
            </div>
        <?php endfor; ?>

    </div>
</main>

<div class="wrap exhibition-description" <?=($_SESSION['login']) ? "style='display: flex; gap: 30px'" : ""?>>        
    <div class="exhibition-description_btn">
        <a href="r-3_exhibition.php?exhibition_id=<?=$exhibition_id?>">
            <p><?=$exhibition_translation[$selectedLang][0]?></p>
            <p><?=$exhibition_translation[$selectedLang][1]?></p>
        </a>
    </div>

    <?php if ($_SESSION['login']): ?>
    <!-- Настроить переход на редакцию -->
    <!-- <div class="exhibition-description_btn">
        <a href="#">
            <p><?=wrapWordInSpans("РЕДАКТИРОВАТЬ")?></p>
            <p><?=wrapWordInSpans("ВЫСТАВКУ")?></p>
        </a>
    </div> -->
    <?php endif; ?>

    <div class="exhibition-description_mask"></div>  
</div>

<?php if ($_SESSION['login']): ?>
    <!-- Edit mode -->
    <script src="js/delete-confirmation.js"></script>
<?php endif; ?>

<main class="flex wrap textArticle_container overflowItem_hide">
    <div class="left-side_scroll list-scrolling_mask">
        <ul class="left-side exhibitions_list overflowItem_scroll">

            <?php foreach($exhibitions as $exhibition): ?>
            <?php 
                // Не показывать в списке, если нет названия, картинки и описания на выбранном языке
                $show_item = true;
                if ($exhibition["title_$selectedLang"] == 'Название') {
                    $show_item = false;
                } elseif ($exhibition["description_$selectedLang"] == '<p>Описание</p>') {
                    // $show_item = false;
                } elseif ($exhibition["exhibition_img"] == 'exhibition-sample.jpg') {
                    // $show_item = false;
                }

                if ($show_item && !$_SESSION['login'] || $_SESSION['login']): 
            ?>

                <li>
                    <a href="r-3_exhibition.php?exhibition_id=<?=$exhibition["exhibition_id"]?>"> 
                        <p><?=$exhibition["title_$selectedLang"]?></p>
                    </a>

                    <?php if ($_SESSION['login']): // Edit mode ?>
                    <!-- Кнопка удаления записи -->
                        <div style="margin: 4px 0 4px; text-align: left">
                            <span class="editor_btn warning_btn deleteConfirmation_btn">
                                Удалить
                                
                                <!-- Скрытый блок с подтверждением -->
                                <div class="deleteConfirmation_container">
                                    <p>Удалить выставку: <b><?= $exhibition["title_$selectedLang"] ?></b>?</p>
                                    <div>
                                        <a class="editor_btn warning_btn" style="color: white" href="exhibition_process_delete.php?exhibition_id=<?=$exhibition['exhibition_id']?>">Удалить</a>
                                        <!-- <a class="editor_btn warning_btn" style="color: white" href="actions/table-text_delete.php?delete_id=<?=$data[$i]['id']?>&page_url=<?=$page_url?>">Удалить</a> -->
                    
                                        <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                                    </div>
                                </div>
                            </span>
                        </div>
                    <?php endif; // End of Edit mode ?>

                </li>
            <?php endif;?>
            <?php endforeach; ?>
            
            <!-- TMP list -->
            <?php for($d = 1; $d < 6; $d ++): ?>
                <li style="opacity: 0.3">
                    <a href=""><p>Русский стиль в искусстве. От Николая I до Николая II</p></a>
                </li>
                <li style="opacity: 0.3">
                    <a href=""><p>Гравюры и рисунки: диалог искусств. От Дюрера до Гойи</p></a>
                </li>
                <li style="opacity: 0.3">
                    <a href=""><p>Коллекция петербургских собирателей братьев Якова Александровича и Иосифа Александровича Ржевских</p></a>
                </li>
            <?php endfor; ?>
            <!-- TMP list -->

        </ul>

        <!-- Кнопка добавления нового объекта -->
        <?php if ($_SESSION['login']): ?>
            Добавить:<br>
            <a class="editor_btn text-add_btn" style="margin-top: 0.5vh;" href="exhibition_process_create_start.php?page_type=solo&page_url=<?=$page_url?>">Персональную</a><br>
            <a class="editor_btn text-add_btn" style="margin-top: 0.5vh;" href="exhibition_process_create_start.php?page_type=theme&page_url=<?=$page_url?>">Тематическую</a>
        <?php endif; ?>

    </div>
    
    <section class="list-scrolling_mask">
        <div class="overflowItem_scroll" id="description_container">
            
            <div <?= ($_SESSION['login'])? "class='edit-btn' id='description'" : "" ?>>
                <?= $exhibition_description["description_$selectedLang"] ?>
            </div>

            <?php if ($_SESSION['login']): ?>
                <div id="editor_container">
                    <textarea class="editor_area" id="description_editor" name="description_editor">
                        <?= $exhibition_description["description_$selectedLang"] ?>
                    </textarea>
                </div>
            <?php endif; ?>

        </div>
    </section>
</main>

<?php if ($_SESSION['login']): ?>
    <!-- Edit mode -->
    <script src="https://cdn.tiny.cloud/1/a3mbri168ms9brn32tu5dc85nsuvui4l3sbkxjugzag3gljc/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="js/TinyMCEEditor.js"></script> 
    <script src="js/ApplyButtonManager.js"></script>
    <script src="js/delete-confirmation.js"></script>
    <script src="js/update-textpage.js"></script>
    <!-- End of Edit mode -->
<?php endif; ?>

    
    <!-- Мобильное меню -->
    <?php //require 'parts_php/mobile_menu_v1.php' ?>
    <!-- <script src="js/mobile-menu.js"></script> -->
    <!-- <script src="js/window-dimensions-tracker.js"></script> -->
</body>
</html>

<?php $conn = null ?>
<!-- Fullscreen image -->
<div class="fullscreen">
    <?php
        echo $page_type;
    ?>
    <div class="prev">
        <?php if(isset($paintingsData) && count($paintingsData) != 1 || $page_type == 'exhibition' || $page_type == 'exhibition_new'): ?> 
        <svg xmlns="http://www.w3.org/2000/svg" width="12.21" height="40.119" viewBox="0 0 12.21 40.119">
            <path id="Контур_2" data-name="Контур 2" d="M4285.292-642.669,4275.1-622.934l10.194,19.46" transform="translate(-4273.97 643.128)" fill="none" stroke="#959393" stroke-width="2"/>
        </svg>
        <?php endif; ?>
    </div>
    
    <img src="" alt="Fullscreen Image">
    
    <div class="next">
        <?php if(isset($paintingsData) && count($paintingsData) != 1 || $page_type == 'exhibition' || $page_type == 'exhibition_new'): ?>
        <svg xmlns="http://www.w3.org/2000/svg" width="12.21" height="40.119" viewBox="0 0 12.21 40.119">
            <path id="Контур_1" data-name="Контур 1" d="M4275.1-642.669l10.194,19.735-10.194,19.46" transform="translate(-4274.209 643.128)" fill="none" stroke="#959393" stroke-width="2"/>
        </svg>
        <?php endif; ?>
    </div>
    
    <p></p>

    <span class="close">&#10006;</span>
</div>

<!-- Скрипт — увеличение изображения -->
<script src="js/image-popup.js"></script>


<?php 
    // Получение данных
    $sql = "SELECT * FROM table_images WHERE page_type = :page_type";
    $stmt = $conn->prepare($sql);
    $stmt->bindParam(':page_type', $page_type);
    $stmt->execute();
    $data = $stmt->fetchAll(PDO::FETCH_ASSOC);

    $imgsCount = count($data);
    $columnCount = 3;
?>


<main class="wrap overflowItem_scroll">
    <?php if ($_SESSION['login']): ?>
        
        <!-- Форма загрузки нового изображения -->
        <form class="imageAdd-form wrap" action="actions/photogallery-add.php" enctype="multipart/form-data" method="POST">
            <h3 class="artist-add_header">Добавить изображение</h3>
            <div style="display: flex; justify-content: center"><img id="previewImage" src="" class="in_edit" alt="Preview Image" style="display: none; width: 32vh"></div>
            <p><input type="file" name="image"></p>
            <div>
                <div>
                    <p>Описание на русском</p>
                    <textarea name="image_description_ru" cols="30" rows="3" placeholder="Описание"></textarea>
                    <!-- <textarea name="image_description_ru" cols="30" rows="3" placeholder="Описание <?= $imgsCount + 1 ?>"></textarea> -->
                </div>
                <div>
                    <p>Описание на английском</p>
                    <textarea name="image_description_en" cols="30" rows="3" placeholder="Description"></textarea>
                    <!-- <textarea name="image_description_en" cols="30" rows="3" placeholder="Description <?= $imgsCount + 1 ?>"></textarea> -->
                </div>
                <div>
                    <p>Описание на немецком</p>
                    <textarea name="image_description_de" cols="30" rows="3" placeholder="Beschreibung"></textarea>
                    <!-- <textarea name="image_description_de" cols="30" rows="3" placeholder="Beschreibung <?= $imgsCount + 1 ?>"></textarea> -->
                </div>
            </div>

            <!-- Технические инпуты — тип страницы и обратный адрес -->
            <input type="text" hidden style="display: none" name="img_number" value="<?= $imgsCount + 1 ?>">
            <input type="text" hidden style="display: none" name="page_type" value="<?=$page_type?>">
            <input type="text" hidden style="display: none" name="page_url" value="<?=$page_url?>">

            <p><button type="submit" class="editor_btn imageAdd-form_btn">Добавить</button></p>
        </form>
    <?php endif; ?>


    <?php if ( $page_type == 'Rubinstein' ): 
        // $imgsCount--; 
        $photograph = $data[0]; ?>

        <figure class="img-gallery" style='margin: 0; margin-bottom: 3.9vh' data-record-id="<?=$photograph['id']?>" data-selected-lang="<?=$selectedLang?>">
                    
            <!-- Основной отображаемый объект — картинка + подпись -->
            <img class="image" style='width: 100%' src="img/images/<?= $photograph['image_url'] ?>" alt="<?= $photograph['description_ru']; ?>">
            <figcaption class="caption">
                <?= $photograph["description_" . $selectedLang]; ?>
            </figcaption>

            <?php if ($_SESSION['login']): ?>
            <!-- Режим редактора -->
                <input type="file">
                <textarea name="image_description" cols="30" rows="3"><?= $photograph["description_" . $selectedLang]; ?></textarea>
            
                <span class="artists-list-picture_editBtn editor_btn warning_btn deleteConfirmation_btn">
                    Удалить

                    <!-- Скрытый блок с подтверждением -->
                    <div class="deleteConfirmation_container">
                        <img class="image" src="img/images/<?= $photograph['image_url'] ?>" alt="<?= $photograph['description_ru']; ?>">
                        <p>Удалить изображение?</p>
                        <div>
                            <a style="color: white; text-decaration: none;" class="editor_btn warning_btn" href="actions/photogallery-delete.php?image_url=<?=$photograph["image_url"]?>&page_url=<?=$page_url?>">Удалить</a>
                            <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                        </div>
                    </div>

                </span>
                <style>
                    figcaption, img {
                        cursor: pointer;
                    }
                </style>
            <!-- Завершение режима редактора -->
            <?php endif; ?>
            
        </figure>
    <?php endif; ?>

    <!-- Раздел с колонками -->
    <section class="flex gallery-3items gallery-3items-NEW">
    <?php  for ($column = 0; $column < $columnCount; $column++):?>
        <div class="column">

            <?php
            for ($imgs = 0, $i = $column; $imgs <= $imgsCount; $imgs++, $i += $columnCount) :
                if ($i >= $imgsCount) { break;} // Проверка наличия записи
                
                if ($page_type == 'Rubinstein' && $i > 0 || $page_type != 'Rubinstein'):
                    $photograph = $data[$i];
            ?>

                <figure class="img-gallery" data-record-id="<?=$photograph['id']?>" data-selected-lang="<?=$selectedLang?>">
                    
                    <!-- Основной отображаемый объект — картинка + подпись -->
                    <img class="image" src="img/images/<?= $photograph['image_url'] ?>" alt="<?= $photograph['description_ru']; ?>">
                    <figcaption class="caption">
                        <?= $photograph["description_" . $selectedLang]; ?>
                    </figcaption>

                    <?php if ($_SESSION['login']): ?>
                    <!-- Режим редактора -->
                        <input type="file">
                        <textarea name="image_description" cols="30" rows="3"><?= $photograph["description_" . $selectedLang]; ?></textarea>
                    
                        <span class="artists-list-picture_editBtn editor_btn warning_btn deleteConfirmation_btn">
                            Удалить

                            <!-- Скрытый блок с подтверждением -->
                            <div class="deleteConfirmation_container">
                                <img class="image" src="img/images/<?= $photograph['image_url'] ?>" alt="<?= $photograph['description_ru']; ?>">
                                <p>Удалить изображение?</p>
                                <div>
                                    <a style="color: white; text-decaration: none;" class="editor_btn warning_btn" href="actions/photogallery-delete.php?image_url=<?=$photograph["image_url"]?>&page_url=<?=$page_url?>">Удалить</a>
                                    <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                                </div>
                            </div>

                        </span>
                        <style>
                            figcaption, img {
                                cursor: pointer;
                            }
                        </style>
                    <!-- Завершение режима редактора -->
                    <?php endif; ?>
                    
                </figure>
                <?php endif; ?>
            <?php endfor; ?>
            
        </div>
    <?php endfor; ?>
    </section>
</main>



<!-- Загрузка JS в режиме редактора -->
<?php if ($_SESSION['login']): ?>
    <script src="js/ApplyButtonManager.js"></script>
    <script src="js/update-photogallery.js"></script>
    <!-- Скрипт Удаление картинки / художника -->
    <script src="js/delete-confirmation.js"></script>
<?php endif; ?>



<!-- Fullscreen image -->
<?php if (!$_SESSION['login']): ?>
    <div class="fullscreen">
        <div class="prev"></div>
        <img src="" alt="Fullscreen Image">
        <div class="next"></div>
        <p></p>
        <span class="close">&#10006;</span>
    </div>
    
    <!-- Скрипт — увеличение изображения -->
    <script src="js/image-popup.js"></script>
<?php endif; ?>


<?php
    session_start();
    
    require_once 'parts_php/dbconnection.php';
    require_once 'menu_items.php';

    // Проверяем, был ли выбран новый язык
    if (isset($_GET['lang'])) {
        $selectedLang = $_GET['lang'];
        $_SESSION['selectedLang'] = $selectedLang; // Сохраняем выбранный язык в сессии
    } else {
        // Если язык не был выбран, используем значение из сессии (если оно есть) или значение по умолчанию
        $selectedLang = isset($_SESSION['selectedLang']) ? $_SESSION['selectedLang'] : 'ru';
    }

    // Разбивка на символы и SPAN
    function wrapWordInSpans($word) {
        $wordArray = preg_split('//u', $word, -1, PREG_SPLIT_NO_EMPTY);
        $output = '';
    
        foreach ($wordArray as $char) {
            if ($word == 'Ausstellungen' && $char == 'u' || $word == 'Ausstellungen' && $char == 'e' || $word == 'Ausstellungen' && $char == 'l') {
                $output .= '<span class="shrinked-letter">' . htmlspecialchars($char) . '</span>';    
            } else {
                $output .= ($char == ' ') ? '<span>&nbsp;</span>' : '<span>' . htmlspecialchars($char) . '</span>';
            }
        }
        
        return $output;
    }   
?>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="css/style.css" rel="stylesheet">
    <link rel="shortcut icon" href="img/LBK-AKT.svg" type="image/x-icon">
    <title>LBK art foundation – <?= (empty($page_title)) ? "" : $page_title ?></title>
    <?= (empty($page_styles)) ? "" : "<style>$page_styles</style>" ?>
</head>
<body class="home-flex">
    <header>
        <div class="nav-mobile_btn">
            <img src="img/burger-menu.svg">
        </div>

        <div class="header-line_1">
            <div class="wrap flex">
                <h1><a href="index.php">LBK art foundation</a></h1>
                <div class="topMenu-desktop">
                    <div class="lang-switch">
                        <a <?php echo ($selectedLang === 'ru') ? 'class="lang-switch_active"' : ''; ?> href="?lang=ru">RU</a>
                        <a <?php echo ($selectedLang === 'en') ? 'class="lang-switch_active"' : ''; ?> href="?lang=en">EN</a>
                        <a <?php echo ($selectedLang === 'de') ? 'class="lang-switch_active"' : ''; ?> href="?lang=de">DE</a>
                    </div>
                    
                    <a href="index.php">home</a>
                </div>
            </div>
        </div>

        <?php if ($_SESSION['login']): ?>
            <div class="login-bar">
                <div class="wrap">
                    <a class="editor_btn log-out_btn" href="logout.php">LOG OUT</a>
                    <a class="editor_btn apply_btn" id="apply_btn" href="#">DONE</a>                    
                    <a class="editor_btn artistsList_btn" href="artists_list.php">ТАБЛИЦА</a>
                </div>
            </div>
        <?php endif; ?>

    <nav class="wrap nav-page nav-page_experimental">
        <div class="nav-desktop">
            <div><?=wrapWordInSpans($menuItems[$page_menu[0]]["label_$selectedLang"])?></div>
            <ul>
                <?php for ($i = 1; $i <= 4; $i++): ?>               
                <li>
                    <a href="<?=$menuItems[$page_menu[$i]]['link']?>"><?=wrapWordInSpans($menuItems[$page_menu[$i]]["label_$selectedLang"])?></a>
                </li>
                <?php endfor; ?>            
            </ul>
        </div>
    </nav>
</header>

<?php
    session_start();
    
    require 'parts_php/dbconnection.php';
    require 'menu_items.php';

    // Проверяем, был ли выбран новый язык
    if (isset($_GET['lang'])) {
        $selectedLang = $_GET['lang'];
        $_SESSION['selectedLang'] = $selectedLang; // Сохраняем выбранный язык в сессии
    } else {
        // Если язык не был выбран, используем значение из сессии (если оно есть) или значение по умолчанию
        $selectedLang = isset($_SESSION['selectedLang']) ? $_SESSION['selectedLang'] : 'ru';
    }

    // Разбивка на символы и SPAN
    function wrapWordInSpans($word) {
        $wordArray = preg_split('//u', $word, -1, PREG_SPLIT_NO_EMPTY);
        $output = '';
        
        foreach ($wordArray as $char) {
            $output .= ($char == ' ') ? '<span>&nbsp;</span>' : '<span>' . htmlspecialchars($char) . '</span>';
        }
    
        return $output;
    }   
?>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="css/style.css" rel="stylesheet">
    <link rel="shortcut icon" href="img/LBK-AKT.svg" type="image/x-icon">
    <title>LBK art foundation</title>
    <!-- <title>LBK art foundation <?= (empty($page_title)) ? "" : "— $page_title" ?></title> -->
    <?= (empty($page_styles)) ? "" : "<style>$page_styles</style>" ?>
</head>
<body class="home-flex">
    <header>
        <div class="nav-mobile_btn">
            <img src="img/burger-menu.svg">
        </div>

        <div class="header-line_1">
            <div class="wrap flex">
                <h1><a href="index.php">LBK art foundation</a></h1>
                <div class="topMenu-desktop">
                    <div class="lang-switch">
                        <a <?php echo ($selectedLang === 'ru') ? 'class="lang-switch_active"' : ''; ?> href="?lang=ru">RU</a>
                        <a <?php echo ($selectedLang === 'en') ? 'class="lang-switch_active"' : ''; ?> href="?lang=en">EN</a>
                        <a <?php echo ($selectedLang === 'de') ? 'class="lang-switch_active"' : ''; ?> href="?lang=de">DE</a>
                    </div>
                    
                    <a href="index.php">home</a>
                </div>
            </div>
        </div>

        <?php if ($_SESSION['login']): ?>
            <div class="login-bar">
                <div class="wrap">
                    <a class="editor_btn log-out_btn" href="logout.php">LOG OUT</a>
                    <a class="editor_btn apply_btn" id="apply_btn" href="#">DONE</a>                    
                    <a class="editor_btn artistsList_btn" href="artists_list.php">ТАБЛИЦА</a>
                </div>
            </div>
        <?php endif; ?>

        <?php 
    // Добавление анонса, если была заполнена форма
    if(!empty($_POST) && $_POST['notice'] == 'notice') {
        echo 'notice';
        
        $notice_ru = $_POST['notice_ru'];
        if (empty($notice_ru)) {
            $notice_ru = "Описание";
        }
        
        $notice_en = $_POST['notice_en'];
        if (empty($notice_en)) {
            $notice_en = $notice_ru;
        }

        $notice_de = $_POST['notice_de'];
        if (empty($notice_de)) {
            $notice_de = $notice_ru;
        }

        $sql = "INSERT INTO meetings_lectures_notice (page_type, notice_ru, notice_en, notice_de)
                VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);

        try {
            $stmt->execute([ $page_type, $notice_ru, $notice_en, $notice_de ]);
            echo "<script>alert('Успешно')</script>";
        } catch (PDOException $e) {
            echo "<script>alert('Ошибка"  . $e->getMessage() . "')</script>";
        }
    }

    // Добавление записи, если была заполнена форма
    if(!empty($_POST) && !empty($_POST['media_type'])) {
        
        $media_type = $_POST['media_type'];

        if ($media_type == 'photo') { 
            $random_identifier = bin2hex(random_bytes(8));
            $original_filename = $_FILES["image"]["name"];
            $random_filename = $page_type . '_' . $random_identifier . '_' . $original_filename;
            $target_dir = "img/meetings_lectures/";
            $target_file = $target_dir . $random_filename;
            try {
                move_uploaded_file($_FILES["image"]["tmp_name"], $target_file);
            } catch (Exception $e) {
                echo "Ошибка при перемещении файла: " . $e->getMessage();
            }

        } else {
            $video_url = $_POST['video'];
            $parsed_url = parse_url($video_url);
            if ($parsed_url['host'] === 'www.youtube.com' || $parsed_url['host'] === 'youtube.com') {
                parse_str($parsed_url['query'], $query_params);
                $random_filename = $query_params['v'];
            }
        }

        $description_ru = $_POST['image_description_ru'];
        if (empty($description_ru)) {
            $description_ru = "Описание";
        }
        
        $description_en = $_POST['image_description_en'];
        if (empty($description_en)) {
            $description_en = $description_ru;
        }

        $description_de = $_POST['image_description_de'];
        if (empty($description_de)) {
            $description_de = $description_ru;
        }

        // TMP — нужен ли title
        $title_ru = $description_ru;
        $title_en = $description_ru;
        $title_de = $description_ru;


        $sql = "INSERT INTO meetings_lectures (media_type, media_link, page_type, title_ru, title_en, title_de, description_ru, description_en, description_de)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);

        try {
            $stmt->execute([ $media_type, $random_filename, $page_type, $title_ru, $title_en, $title_de, $description_ru, $description_en, $description_de ]);
            echo "<script>alert('Успешно')</script>";
        } catch (PDOException $e) {
            echo "<script>alert('Ошибка"  . $e->getMessage() . "')</script>";
        }
    }

    // Удаление записи, если была нажата кнопка
    $delete_id = htmlentities($_GET["delete_id"]);
    if(!empty($delete_id)) { 
        // Удаление изображения
        $sql = "SELECT media_link, media_type FROM meetings_lectures WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->execute([ $delete_id ]);
        $delete_data = $stmt->fetch(PDO::FETCH_ASSOC);

        $delete_img_name = $delete_data['media_link'];
        if ($delete_data['media_type'] == 'photo') {
            unlink("img/meetings_lectures/$delete_img_name");
        }

        // Удаление из БД
        $sql = "DELETE FROM meetings_lectures WHERE id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->execute([ $delete_id ]);

        echo "<script>alert('Успешно')</script>";
    }


    // Удаление анонса, если была нажата кнопка
    $delete_notice_id = htmlentities($_GET["delete_notice_id"]);
    if(!empty($delete_notice_id)) {
        $sql = "DELETE FROM meetings_lectures_notice WHERE id = ?";
        $stmt = $conn->prepare($sql);
        try {
            $stmt->execute([ $delete_notice_id ]);
            echo "<script>alert('Успешно')</script>";
        } catch (PDOException $e) {
            echo "<script>alert('Ошибка"  . $e->getMessage() . "')</script>";
        }
    }

    // Загрузка основной части
    $sql = "SELECT * FROM meetings_lectures WHERE page_type = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([$page_type]);
    $datas = $stmt->fetchAll(PDO::FETCH_ASSOC);

    // Загрузка анонсов
    $sql = "SELECT * FROM meetings_lectures_notice WHERE page_type = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([$page_type]);
    $notices = $stmt->fetchAll(PDO::FETCH_ASSOC);
?>



<?php if ($_SESSION['login']): ?>
<!-- Форма загрузки нового изображения -->

    <form id="formTop" class="imageAdd-form wrap meetings-lectures_form" action="<?=$_SERVER['PHP_SELF']?>" enctype="multipart/form-data" method="POST">
        <span id="formTop_btn" class="editor_btn formbtn formbtn_deactive">Свернуть форму</span>
        <h3 class="artist-add_header">Добавить: <span id="formImg_btn" class="editor_btn formbtn">изображение</span> или <span id="formVideo_btn" class="editor_btn formbtn formbtn_deactive">youtube видео</span></h3>
        
        <section id="formImg_area">
            <div style="display: flex; justify-content: center"><img id="previewImage" src="" class="in_edit" alt="Preview Image" style="display: none; width: 32vh"></div>
            <p style="text-align: center"><input type="file" name="image"></p>
        </section>

        <section id="formVideo_area" style="text-align: center">
            <input name="video" type="text" placeholder="https://www.youtube.com/watch?v=JOS92u-ilX8" style="width: 400px">
        </section>

        <div>
            <div>
                <p>Описание на русском</p>
                <textarea name="image_description_ru" cols="30" rows="3" placeholder="Описание"></textarea>
            </div>
            <div>
                <p>Описание на английском</p>
                <textarea name="image_description_en" cols="30" rows="3" placeholder="Description"></textarea>
            </div>
            <div>
                <p>Описание на немецком</p>
                <textarea name="image_description_de" cols="30" rows="3" placeholder="Beschreibung"></textarea>
            </div>
        </div>


        <!-- Технические инпуты — тип страницы и обратный адрес -->
        <input type="text" name="media_type" id="media_type" value="photo" hidden style="display: none">
        <input type="text" hidden style="display: none" name="page_type" value="<?=$page_type?>">

        <p><button type="submit" class="editor_btn">Добавить</button></p>

    </form>
<?php endif; ?>



<main class="flex wrap clickFix IIIcolumnPage overflowItem_hide">
    
    <div class="left-side_scroll list-scrolling_mask meetings-lectures">
        <ul class="left-side overflowItem_scroll">

            <?php foreach($datas as $data): ?>
                <li><a href="#<?=$data["id"]?>" class='left-side_link'>              
                    <?=$data["title_$selectedLang"]?>
                </a></li>
            <?php endforeach; ?>

            <!-- Temp list -->
            <?php for($d = 0; $d < 12; $d ++): ?>
                <li><a href="#" style="opacity: .3;">Временное название для наполнение, просмотра и тестирования</a></li>
                <li><a href="#" style="opacity: .3;">Еще название для разнообразия, наполнения и просмотра</a></li>
            <?php endfor; ?>

        </ul>

        <!-- Кнопка добавления нового объекта -->
        <?php if ($_SESSION['login']): ?>
            <a class="editor_btn text-add_btn" href="text-add.php?page_type=<?=$page_type?>&page_url=<?=$page_url?>">Добавить</a>
        <?php endif; ?>

    </div>



    <section class="column-middle overflowItem_scroll news-lectures_section">
        
        <?php foreach($datas as $data): ?>
        <figure id="<?=$data["id"] ?>">
            <?php if($data["media_type"] == "photo"):?>
                <img style="width: auto" src="img/meetings_lectures/<?=$data["media_link"]?>" alt="<?=$data["title_$selectedLang"]?>">
            <?php else: ?>
                <iframe width="100%" src="https://www.youtube.com/embed/<?=$data["media_link"]?>" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
            <?php endif; ?>
            <figcaption><?=$data["description_$selectedLang"]?></figcaption>



            <?php if ($_SESSION['login']): ?>
            <!-- Кнопка удаления записи -->
                <div style="margin: 4px 0 4px;">
                    <span class="editor_btn warning_btn deleteConfirmation_btn">
                        Удалить
                        
                        <!-- Скрытый блок с подтверждением -->
                        <div class="deleteConfirmation_container meetingslectures">
                            <p>Удалить <?=($page_type == "meetings")?"встречу":"лекцию";?>: <b class="text-preview"><?=$data["description_$selectedLang"]?></b></p>
                            <div>
                                <a class="editor_btn warning_btn" style="color: white" href="<?=$_SERVER['PHP_SELF']?>?delete_id=<?=$data['id']?>">Удалить</a>
            
                                <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                            </div>
                        </div>
                    </span>
                </div>
            <?php endif; ?>


        </figure>
        <?php endforeach; ?>
    
        <!-- Temp list -->
        <?php for($d = 0; $d < 12; $d ++): ?>
            <figure style="opacity: 0.4">
                <img src="img/xudozhnik_Andrej_Ryabushkin_05.jpg" alt="Trulli">
                <figcaption>
                    Gkjhlkjhlkjhlk kGkjhlkjhlkjhlk kGkjhlkjhlk jhl kkjhl kjhlkj hlkjhhjhlk jhlkjhlkjhh
                </figcaption>
            </figure>
        <?php endfor; ?>
    </section>



    <section class="column-right">
        <p class="column_right_header">
            <?=$calendar_translation[$selectedLang][0]?><br>
            <?=$calendar_translation[$selectedLang][1]?>
        </p>
        
        <!-- Отображение -->
        <div 
            class="<?= ($_SESSION['login']) ? 'overflowItem_scroll' : 'overflowItem_hide';?>" 
            style="
                margin-top: 20px;

                <?php if($page_type == "meetings"):?>
                    
                    <?php if($_SESSION['login']):?>
                        max-height: 30vh;
                    <?php else: ?>
                        height: calc(53vh - 66px - 57px);
                    <?php endif; ?>

                <?php else: ?>
                    
                    <?php if($_SESSION['login']):?>
                        max-height: 30vh;
                    <?php else: ?>
                        height: calc(53vh - 66px);
                    <?php endif; ?>

                <?php endif; ?>
                "
        >

            <?php foreach($notices as $notice): ?>
                <p style="text-align: left; <?=($_SESSION['login'])? "margin-bottom: 0": "";?>"><?= $notice["notice_$selectedLang"] ?></p>
                
                <?php if ($_SESSION['login']): ?>
                <!-- Кнопка удаления записи -->
                    <div style="margin: 4px 0 8px;">
                        <span class="editor_btn warning_btn deleteConfirmation_btn">
                            Удалить
                            
                            <!-- Скрытый блок с подтверждением -->
                            <div class="deleteConfirmation_container meetingslectures">
                                <p>Удалить анонс <?=($page_type == "meetings")?"встречи":"лекции";?>: <b class="text-preview"><?=$notice["notice_$selectedLang"]?></b></p>
                                <div>
                                    <a class="editor_btn warning_btn" style="color: white" href="<?=$_SERVER['PHP_SELF']?>?delete_notice_id=<?=$notice['id']?>">Удалить</a>
                
                                    <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                                </div>
                            </div>
                        </span>
                    </div>
                <?php endif; ?>

            <?php endforeach; ?>
        </div>

        <?php if ($_SESSION['login']): ?>
        <form action="<?=$_SERVER['PHP_SELF']?>" method="POST" style="margin-top: 16px">
            <textarea name="notice_ru" style="width: 100%" cols="20" rows="2"></textarea>
            <textarea name="notice_en" style="width: 100%" cols="20" rows="2"></textarea>
            <textarea name="notice_de" style="width: 100%" cols="20" rows="2"></textarea>
            <input type="text" hidden style="display: none" name="page_type" value="<?=$page_type?>">
            <input type="text" hidden style="display: none" name="notice" value="notice">
            <p><button type="submit" class="editor_btn">Добавить</button></p>
        </form>
        <?php endif; ?>
        
        <?php if($page_type == "meetings"):?>
            <div class="contacts_btn">
                <a href="contacts.php">
                    <p><?=$contacts_translation[$selectedLang][0]?></p>
                    <p><?=$contacts_translation[$selectedLang][1]?></p>
                </a>
            </div>
        <?php endif; ?>

    </section>

</main>

<script src="js/leftSideLinks.js"></script>

<?php if ($_SESSION['login']): ?>
<script src="js/delete-confirmation.js"></script>
<script src="js/meetings_lectures-formSelecion.js"></script>
<script src="js/update-formTopImg.js"></script>
<?php endif; ?>

<?php
// Массив с данными для меню
$menuItems = [
    'БИОГРАФИЯ' => [
        'label_ru' => 'Биография',
        'label_en' => 'Biography',
        'label_de' => 'Werdegang',
        'link' => 'r-1_1_biography.php'
    ],
    'ФОТОГРАФИИ' => [
        'label_ru' => 'Фотографии',
        'label_en' => 'Photographs',
        'label_de' => 'Fotografien',
        'link' => 'r-1_photogallery.php'
    ],
    'ТВОРЧЕСТВО' => [
        'label_ru' => 'Творчество',
        'label_en' => 'Artwork',
        'label_de' => 'Schaffen',
        'link' => 'r-1_gallery_create.php'
    ],
    'МЕМУАРЫ' => [
        'label_ru' => 'Мемуары',
        'label_en' => 'Memoirs',
        'label_de' => 'Memoiren',
        'link' => 'r-1_memoirs.php'
    ],
    'АРХИВ ЛБК' => [
        'label_ru' => 'Архив ЛБК',
        'label_en' => 'Archive of LBK',
        'label_de' => 'LBK Archiv',
        'link' => 'r-1_archiveLBK.php'
    ],
    'КОЛЛЕКЦИЯ' => [
        'label_ru' => 'Коллекция',
        'label_en' => 'Collection',
        'label_de' => 'Sammlung',
        'link' => 'r-2_1_collection.php'
    ],
    'КАТАЛОГ' => [
        'label_ru' => 'Каталог',
        'label_en' => 'Catalogue',
        'label_de' => 'Katalog',
        'link' => 'r-2_catalog.php'
    ],
    'СТАТЬИ' => [
        'label_ru' => 'Статьи',
        'label_en' => 'Articles',
        'label_de' => 'Artikel',
        'link' => 'r-2_articles.php'
    ],
    'ЛИТЕРАТУРА' => [
        'label_ru' => 'Литература',
        'label_en' => 'Bibliography',
        'label_de' => 'Literatur',
        'link' => 'r-2_literature.php'
    ],
    'ХУДОЖНИКИ' => [
        'label_ru' => 'Художники',
        'label_en' => 'Artists',
        'label_de' => 'Künstler',
        'link' => 'r-2_painters.php'
    ],
    'ВЫСТАВКИ' => [
        'label_ru' => 'Выставки',
        'label_en' => 'Exhibitions',
        'label_de' => 'Ausstellungen',
        'link' => 'r-3_exhibitions.php'
    ],
    'РУБИНШТЕЙНА' => [
        'label_ru' => 'Рубинштейна',
        'label_en' => 'Rubinstein',
        'label_de' => 'Rubinstein',
        'link' => 'r-3_rubinstein_descr.php'
    ],
    'ПЕРСОНАЛЬНАЯ' => [
        'label_ru' => 'ПЕРСОНАЛЬНАЯ',
        'label_en' => 'Solo Show',
        'label_de' => 'Personale',
        'link' => 'r-3_personal.php'
    ],
    'Тематическая' => [
        'label_ru' => 'Тематическая',
        'label_en' => 'thematic',
        'label_de' => 'Thematisch',
        'link' => 'r-3_tematic.php'
    ],
    'ПРОШЕДШИЕ' => [
        'label_ru' => 'Прошедшие',
        'label_en' => 'Archive',
        'label_de' => 'Archiv',
        'link' => 'r-3_past.php'
    ],
    'ИЗЫСКАНИЯ' => [
        'label_ru' => 'Изыскания',
        'label_en' => 'Reflections',
        'label_de' => 'Studien',
        'link' => 'r-4_research.php'
    ],
    'ЛЕКЦИИ' => [
        'label_ru' => 'Лекции',
        'label_en' => 'Lectures',
        'label_de' => 'Vorträge',
        'link' => 'r-4_lectures.php'
    ],
    'ВСТРЕЧИ' => [
        'label_ru' => 'Встречи',
        'label_en' => 'Meetings',
        'label_de' => 'Treffen',
        'link' => 'r-4_meetings.php'
    ],
    'НОВОСТИ' => [
        'label_ru' => 'Новости',
        'label_en' => 'News',
        'label_de' => 'Neues',
        'link' => 'r-4_news.php'
    ],
    'МАТЕРИАЛЫ' => [
        'label_ru' => 'Материалы',
        'label_en' => 'Materials',
        'label_de' => 'Materialien',
        'link' => 'r-4_materials.php'
    ]
];

    <nav class="wrap nav-page nav-page_experimental">
        <div class="nav-desktop">
            <div><?=wrapWordInSpans($menuItems[$page_menu[1]]["label_$selectedLang"])?></div>
            <ul>
                <?php for ($i = 2; $i <= 5; $i++): ?>               
                <li>
                    <a href="<?=$menuItems[$page_menu[$i]]['link']?>"><?=wrapWordInSpans($menuItems[$page_menu[$i]]["label_$selectedLang"])?></a>
                </li>
                <?php endfor; ?>            
            </ul>
        </div>
    </nav>
</header>

<main class="flex wrap overflowItem_hide">
    <figure class="left-side">

        <img class="<?=($_SESSION['login'])?"edit-btn":"";?>" id="figure_img" src="img/<?= /* IMG */ $data_img ?>" alt="<?= /* Title */ $data_title ?>">
            <figcaption class="<?=($_SESSION['login'])?"edit-btn":"";?>" id="figcaption">
                <?= /* Title */ $data_title ?>
            </figcaption>
        
        <?php if ($_SESSION['login']): ?>
            <input class="editor_area" type="file" id="figure_img_input">
            <textarea class="editor_area in_edit" id="figcaption_editor" cols="30" rows="3"><?= /* Title editor */ $data_title ?></textarea>
        <?php endif; ?>

    </figure>
    
    <section class="list-scrolling_mask">
        <div class="overflowItem_scroll" id="description_container">    
            
            <div class="<?=($_SESSION['login'])?"edit-btn":"";?>" id="description">
                <?= $data_description ?>
            </div>
            
            <?php if ($_SESSION['login']): ?>
                <div id="editor_container">
                    <textarea class="editor_area" id="description_editor" name="description_editor">
                        <?= $data_description ?>
                    </textarea>
                </div>
            <?php endif; ?>

        </div>

    </section>
</main>


<?php if ($_SESSION['login']): ?>
    <script src="https://cdn.tiny.cloud/1/a3mbri168ms9brn32tu5dc85nsuvui4l3sbkxjugzag3gljc/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="js/TinyMCEEditor.js"></script> 
    <script src="js/ApplyButtonManager.js"></script>
    <script src="js/update-textpage.js"></script>
<?php endif; ?>

<?php
    $template_type = (isset($template_type)) ? $template_type : "";
    if ($_SESSION['login']) {
        if($template_type != "painting_artist") {
            $img_editor = 'class="edit-btn" id="figure_img"';
            $figcaption_editor_class = 'edit-btn';
            $figcaption_editor_id = 'id="figcaption"';
        }
        $description_editor = 'class="edit-btn" id="description"';
    }
?>


<main class="flex wrap overflowItem_hide">

    <div>
        <div class="left-side painting-description_imgContainer">
            <img <?= $img_editor ?> src="img/<?= /* IMG */ $data_img ?>" alt="<?= /* Title */ $data_title ?>">
        </div>

        <p style="width: 27.34vh;" class="painting-description_p <?= $figcaption_editor_class ?>" <?= $figcaption_editor_id ?>><?= /* Title */ $data_title ?></p>
        

        <?php if ($_SESSION['login']): ?>
            <!-- <input class="editor_area" type="file" id="figure_img_input">     -->
            <textarea class="editor_area in_edit" id="figcaption_editor" name="title" cols="30" rows="3" style="width: 27.34vh; display: none"><?= /* Title editor */ $data_title ?></textarea>
        <?php endif; ?>
        

        <!-- Выставки: -->
        <?php //if ( $template_type == "exhibition" && !empty($exhibitions_paintings) || $page_type == "rubinstein"): ?>
        <?php if ( $template_type == "exhibition"): ?>
        <div class="exhebition_descr">
            <a href="<?= $exhibition_link ?>">
                <?php for ($i=0; $i < count($exhebition_btn_text); $i++): ?>
                <p style="text-transform: uppercase;"><?=wrapWordInSpans($exhebition_btn_text[$i][$selectedLang])?></p>
                <?php endfor; ?>
            </a>
        </div>
        <?php endif; ?>
        
        <?php if ($_SESSION['login'] && $template_type == "exhibition" && $page_type != "rubinstein"): ?>
            <?php if(empty($exhibitions_paintings)): ?>
                <a class="editor_btn" style="margin-top: 2.5vh;" href="exhibition_img_add.php?exhibition_id=<?=$exhibition_id?>">Добавить картины<br>из таблицы</a>
                <a class="editor_btn" style="margin-top: 1.5vh;" href="exhibition_process_upload?exhibition_id=<?=$exhibition_id?>">Загрузить картины<br>дополнительно</a>
            <?php else: ?>
                <a class="editor_btn" style="margin-top: 2.5vh;" href="exhibition_img_add.php?artist_id=<?=$solo_artist_id?>&exhibition_id=<?=$exhibition_id?>">Редактировать картины</a>
            <?php endif; ?>
        <?php endif; ?>
    </div>
    
    <section class="list-scrolling_mask" style="width: 100%">
        <div class="overflowItem_scroll" id="description_container">    
            
            <div <?= $description_editor ?>>
                <?= $data_description ?>
            </div>
            
            <?php if ($_SESSION['login']): ?>
                <div id="editor_container">
                    <textarea class="editor_area" id="description_editor" name="description_editor">
                        <?= $data_description ?>
                    </textarea>
                </div>
            <?php endif; ?>

        </div>
    </section>
</main>


<?php if ( $template_type == "exhibition" && $page_type != "rubinstein"): ?>
<form style="display: none" action="exhibition_process_update.php" id="exhibition_update" enctype="multipart/form-data" method="POST">
    <input class="editor_area" type="file" name="img" id="figure_img_input">

    <input type="text" hidden style="display: none" name="lang" value="<?=$selectedLang?>">
    <input type="text" hidden style="display: none" name="exhibition_id" value="<?=$exhibition_id?>">

</form>
<?php endif; ?>




<?php if ($_SESSION['login']): ?>
    <script src="https://cdn.tiny.cloud/1/a3mbri168ms9brn32tu5dc85nsuvui4l3sbkxjugzag3gljc/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="js/TinyMCEEditor.js"></script> 
    <script src="js/ApplyButtonManager.js"></script>
    <script src="js/update-textpage.js"></script>
<?php endif; ?>

<?php
    // Получаем список новостей
    $sql = "SELECT * FROM table_texts WHERE page_type = :page_type ORDER BY created_day DESC";
    $stmt = $conn->prepare($sql);
    $stmt->bindParam(':page_type', $page_type);
    $stmt->execute();
    $data = $stmt->fetchAll(PDO::FETCH_ASSOC);
?>

<main class="flex wrap textArticle_container clickFix">
    <div class="left-side_scroll list-scrolling_mask">
        <ul class="left-side overflowItem_scroll">

            <!-- Список новостей -->
            <?php for ($i=0; $i<count($data); $i++ ): ?>
                <li>
                    <a class='left-side_link' href="#<?=$data[$i]["id"]?>">
                        <?=$data[$i]["title_$selectedLang"]?>
                    </a>
                </li>
            <?php endfor; ?>

            <!-- Temp list. Remove when done. -->
            <?php for($d = 0; $d < 12; $d ++): ?>
                <li><a href="#" style="opacity: .3;">Временное название для наполнение, просмотра и тестирования</a></li>
                <li><a href="#" style="opacity: .3;">Еще название для разнообразия, наполнения и просмотра</a></li>
            <?php endfor; ?>
        
        </ul>
        
        <!-- Кнопка добавления нового объекта -->
        <?php if ($_SESSION['login']): ?>
            <a class="editor_btn text-add_btn" href="text-add.php?page_type=<?=$page_type?>&page_url=<?=$page_url?>">Добавить</a>
        <?php endif; // End of Edit mode ?>

    </div>

    <section class="list-scrolling_mask">
        <div class="overflowItem_scroll">

            <?php for ($i=0; $i<count($data); $i++ ): ?>
                <div class="news-header">

                    <?php if ($_SESSION['login']): // Edit mode ?>
                    <!-- Кнопка удаления записи -->
                        <div style="margin: 4px 0 4px; text-align: center">
                            <span class="editor_btn warning_btn deleteConfirmation_btn">
                                Удалить
                                
                                <!-- Скрытый блок с подтверждением -->
                                <div class="deleteConfirmation_container">
                                    <p>Удалить новость <?=date("Y-m-d", strtotime($data[$i]["created_day"])) ?>: <b><?= $data[$i]["title_$selectedLang"] ?></b>?</p>
                                    <div>
                                        <a class="editor_btn warning_btn" style="color: white" href="actions/table-text_delete.php?delete_id=<?=$data[$i]['id']?>&page_url=<?=$page_url?>">Удалить</a>
                    
                                        <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                                    </div>
                                </div>
                            </span>
                        </div>
                    <?php endif; // End of Edit mode ?>

                    <h4 id="<?=$data[$i]["id"] ?>"><?= $data[$i]["title_$selectedLang"] ?></h4>
                    <span><?=date("Y-m-d", strtotime($data[$i]["created_day"])) ?></span>
                </div>
                <p class="news-block">
                    <?= $data[$i]["description_$selectedLang"] ?>
                </p>
            <?php endfor; ?>
            
        </div>
    </section>
</main>

<script src="js/leftSideLinks.js"></script>

<?php if ($_SESSION['login']): // Edit mode ?>
<script src="js/delete-confirmation.js"></script>
<?php endif; // End of Edit mode ?>

<?php
    // Получаем список мемуаров
    $sql = "SELECT * FROM table_texts WHERE page_type = :page_type";
    $stmt = $conn->prepare($sql);
    $stmt->bindParam(':page_type', $page_type);
    $stmt->execute();
    $firstRecord = '';
?>

<main class="flex wrap textArticle_container overflowItem_hide">
    <div class="left-side_scroll list-scrolling_mask">
        <ul class="left-side overflowItem_scroll">

            <!-- Список мемуаров -->
            <?php while ($data = $stmt->fetch(PDO::FETCH_ASSOC)): ?>
                <?php 
                    $firstRecord = ($firstRecord == '') ? $data['id'] : $firstRecord;
                    $isSelected = (
                        (isset($_GET['data_id']) && $_GET['data_id'] == $data["id"]) || 
                        (!isset($_GET['data_id']) && $firstRecord == $data["id"])
                    );
                    $style_selected = $isSelected ? 'style="font-weight: bold; opacity: .3; color: rgba(0, 0, 0, .7)"' : '';
                ?>
                <li>
                    <a id="<?=$data["id"]?>" href="<?=$_SERVER['PHP_SELF']?>?data_id=<?=$data["id"]?>" <?=$style_selected?>>
                        <!-- <?=$data["id"]?> —  -->
                        <?=$data["title_$selectedLang"]?>
                    </a>
                </li>
            <?php endwhile; ?>

            <!-- Temp list. Remove when done. -->
            <?php for($d = 0; $d < 12; $d ++): ?>
                <li><a href="#" style="opacity: .3;">Временное название для наполнение, просмотра и тестирования</a></li>
                <li><a href="#" style="opacity: .3;">Еще название для разнообразия, наполнения и просмотра</a></li>
            <?php endfor; ?>
        
        </ul>
        
        <!-- Кнопка добавления нового объекта -->
        <?php if ($_SESSION['login']): ?>
            <a class="editor_btn text-add_btn" href="text_process_create_start.php?page_type=<?=$page_type?>&page_url=<?=$page_url?>">Добавить</a>
        <?php endif; ?>

    </div>

    <section class="list-scrolling_mask" >
        <div class="overflowItem_scroll">

        <?php 
            // Извлекаем нужную запись
            $data_id = isset($_GET['data_id']) ? $_GET['data_id'] : $firstRecord;
            $sql = "SELECT * FROM table_texts WHERE id = :data_id";
            $stmt2 = $conn->prepare($sql);
            $stmt2->bindParam(':data_id', $data_id, PDO::PARAM_INT);
            $stmt2->execute();
            $selected_data = $stmt2->fetch(PDO::FETCH_ASSOC);
        ?>                

        <?php if ($_SESSION['login']): ?>
        <!-- Кнопка удаления записи -->
            <div style="margin: 8px 0 16px; text-align: center">
                <span class="editor_btn warning_btn deleteConfirmation_btn">
                    Удалить
                    
                    <!-- Скрытый блок с подтверждением -->
                    <div class="deleteConfirmation_container">
                        <p>Удалить текст: <b><?= $selected_data["title_$selectedLang"] ?></b>?</p>
                        <div>
                            <a class="editor_btn warning_btn" style="color: white" href="actions/table-text_delete.php?delete_id=<?=$selected_data['id']?>&page_url=<?=$page_url?>">Удалить</a>

                            <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                        </div>
                    </div>
                </span>
            </div>
        <?php endif; ?>

        <!-- Текст записи -->
        <div id="description" class="edit-btn">
            <!-- <h1><?=$selected_data['id']?></h1> -->
            <?=$selected_data["description_$selectedLang"] ?>
        </div>

        <?php if ($_SESSION['login']): ?>
        <!-- Редактор текста -->
        <div id="editor_container">
            <form action="text_process_update.php" id="text-update" method="POST">
                    
                <!-- Заголовок -->
                <textarea id="title_editor" name="title" data-titile-edit-id="<?=$selected_data['id']?>" cols="30" class="in_edit" rows="10" style="width: 100%; height: 60px; font-size: 20px; margin-top: 5px;"><?= $selected_data["title_$selectedLang"] ?></textarea>
                <br>
                <!-- Основной текст -->
                <textarea id="description_textarea" name="description" cols="30" rows="30"><?= $selected_data["description_$selectedLang"] ?></textarea>

                <input type="text" hidden name="lang" value="<?=$selectedLang?>">
                <input type="text" hidden name="page_url" value="<?=$page_url?>">
                <input type="text" hidden name="page_type" value="<?=$page_type?>">
                <input type="text" hidden name="page_id" value="<?=$selected_data['id']?>">

            </form>
        </div>
        <?php endif; ?>
            
        </div>
    </section>
</main>


<?php if ($_SESSION['login']): ?>
<!-- Edit mode -->
    <script src="https://cdn.tiny.cloud/1/a3mbri168ms9brn32tu5dc85nsuvui4l3sbkxjugzag3gljc/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="js/TinyMCEEditor.js"></script> 
    <script src="js/ApplyButtonManager.js"></script>
    <script src="js/update-longTextPage.js"></script>
    <script src="js/delete-confirmation.js"></script>
<!-- End of Edit mode -->
<?php endif; ?>


<?php 

    $page_title = "добавление художника";
    $page_styles = "
.apply_btn {
    display: none;
}
    ";

    require 'templates/header_page.php';
    require_once 'parts_php/dbconnection.php'; // Подключаю базу данных
    $selectedLanguage = $_SESSION['selectedLang'];
?>
        
    <nav class="wrap nav-page nav-page_experimental">
        <div class="nav-desktop">
            <div>
                <?=wrapWordInSpans("ТАБЛИЦА");?>
            </div>
        </div>
    </nav>
</header>

<main class="flex textArticle_container wrap overflowItem_scroll">  
    <form class="artist-add" action="actions/artist_add.php" enctype="multipart/form-data" method="POST">
        <div>
            <h3 class="artist-add_header">Загрузка фото художника:</h3>
            <input type="file" name="portrait_image">
        </div>
        <div>
            <h3>Имя:</h3>
            на русском <input name="name_ru" type="text">
            на английском <input name="name_en" type="text">
            <nobr>на немецком <input name="name_de" type="text"></nobr>
        </div>
        <div>
            <h3>Отчество:</h3>
            на русском <input name="middle_name_ru" type="text">
            на английском <input name="middle_name_en" type="text">
            <nobr>на немецком <input name="middle_name_de" type="text"></nobr>
        </div>
        <div>
            <h3>Фамилия:</h3>
            на русском <input name="last_name_ru" type="text">
            на английском <input name="last_name_en" type="text">
            <nobr>на немецком <input name="last_name_de" type="text"></nobr>
        </div>
        <div>
            <h3>Год рождения:</h3>
            <input name="birth_year" type="text">
        </div>
        <div>
            <h3>Место рождения:</h3>
            на русском <input name="birth_place_ru" type="text">
            на английском <input name="birth_place_en" type="text">
            <nobr>на немецком <input name="birth_place_de" type="text"></nobr>
        </div>
        <div>
            <h3>Год смерти:</h3>
            <input name="death_year" type="text">
        </div>
        <div>
            <h3>Место смерти:</h3>
            на русском <input name="death_place_ru" type="text">
            на английском <input name="death_place_en" type="text">
            <nobr>на немецком <input name="death_place_de" type="text"></nobr>
        </div>
        <div>
            <h3>Если эта галочка отмечена, художник будет показан в разделе «каталог»:</h3>
            <input type="checkbox" <?=(isset($_GET) && $_GET['in_catalog'] == false) ? 'checked' : '' ?> name="in_catalog">
        </div>
        <p><button type="submit" class="editor_btn">Сохранить и перийти к загрузке картин художника</button></p>
        <br><br><br>
    </form>
</main>


<?php require 'templates/footer.php' ?>

<?php
// Подключаю базу данных
require_once 'parts_php/dbconnection.php';
$deleteID = htmlentities($_GET["artistId"]);

// Адрес изображения художника
$sql = "SELECT portrait_image_url FROM Artists WHERE artist_id = :deleteID";
$stmt = $conn->prepare($sql);
$stmt->execute(["deleteID" => $deleteID]);
$row = $stmt->fetch(PDO::FETCH_ASSOC);
$portrait_image_url = $row['portrait_image_url'];
// echo "img/painters-portrets/$portrait_image_url";
unlink("img/painters-portrets/$portrait_image_url");

$sql = "DELETE FROM Artists WHERE artist_id=:id";
$stmt = $conn->prepare($sql);
$stmt->execute([ "id" => $deleteID ]);

header('location: artists_list.php');

<?php 
    require 'templates/header_page.php';
    require_once 'parts_php/dbconnection.php'; // Подключаю базу данных
    $selectedLanguage = $_SESSION['selectedLang'];

    $artistId = $_GET["artistId"];
    // Обработка отправки формы
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        
        // Получите данные, отправленные из формы:
        $name_ru = $_POST["name_ru"];
        $name_en = $_POST["name_en"];
        $name_de = $_POST["name_de"];
        $middle_name_ru = $_POST["middle_name_ru"];
        $middle_name_en = $_POST["middle_name_en"];
        $middle_name_de = $_POST["middle_name_de"];
        $last_name_ru = $_POST["last_name_ru"];
        $last_name_en = $_POST["last_name_en"];
        $last_name_de = $_POST["last_name_de"];
        $birth_year = $_POST["birth_year"];
        $birth_place_ru = $_POST["birth_place_ru"];
        $birth_place_en = $_POST["birth_place_en"];
        $birth_place_de = $_POST["birth_place_de"];
        $death_year = $_POST["death_year"];
        $death_place_ru = $_POST["death_place_ru"];
        $death_place_en = $_POST["death_place_en"];
        $death_place_de = $_POST["death_place_de"];
        
        $in_catalog = $_POST["in_catalog"];
        if (!isset($in_catalog)) {
            $in_catalog = 'off';
        }

        // SQL-запрос для обновления данных художника
        $updateQuery = "UPDATE Artists 
            SET in_catalog = :in_catalog, name_ru = :name_ru, name_en = :name_en, name_de = :name_de, 
                middle_name_ru = :middle_name_ru, middle_name_en = :middle_name_en, middle_name_de = :middle_name_de, 
                last_name_ru = :last_name_ru, last_name_en = :last_name_en, last_name_de = :last_name_de, 
                birth_year = :birth_year, 
                birth_place_ru = :birth_place_ru, birth_place_en = :birth_place_en, birth_place_de = :birth_place_de, 
                death_year = :death_year, 
                death_place_ru = :death_place_ru, death_place_en = :death_place_en, death_place_de = :death_place_de
            WHERE artist_id = :artist_id";
        
        $updateStatement = $conn->prepare($updateQuery);
        
        $updateStatement->bindParam(':in_catalog', $in_catalog, PDO::PARAM_STR);
        $updateStatement->bindParam(':artist_id', $artistId, PDO::PARAM_INT);
        $updateStatement->bindParam(':name_ru', $name_ru, PDO::PARAM_STR);
        $updateStatement->bindParam(':name_en', $name_en, PDO::PARAM_STR);
        $updateStatement->bindParam(':name_ru', $name_ru, PDO::PARAM_STR);
        $updateStatement->bindParam(':name_de', $name_de, PDO::PARAM_STR);
        $updateStatement->bindParam(':name_en', $name_en, PDO::PARAM_STR);
        $updateStatement->bindParam(':middle_name_ru', $middle_name_ru, PDO::PARAM_STR);
        $updateStatement->bindParam(':middle_name_en', $middle_name_en, PDO::PARAM_STR);
        $updateStatement->bindParam(':middle_name_de', $middle_name_de, PDO::PARAM_STR);
        $updateStatement->bindParam(':last_name_ru', $last_name_ru, PDO::PARAM_STR);
        $updateStatement->bindParam(':last_name_en', $last_name_en, PDO::PARAM_STR);
        $updateStatement->bindParam(':last_name_de', $last_name_de, PDO::PARAM_STR);
        $updateStatement->bindParam(':birth_year', $birth_year, PDO::PARAM_STR);
        $updateStatement->bindParam(':birth_place_ru', $birth_place_ru, PDO::PARAM_STR);
        $updateStatement->bindParam(':birth_place_en', $birth_place_en, PDO::PARAM_STR);
        $updateStatement->bindParam(':birth_place_de', $birth_place_de, PDO::PARAM_STR);
        $updateStatement->bindParam(':death_year', $death_year, PDO::PARAM_STR);
        $updateStatement->bindParam(':death_place_ru', $death_place_ru, PDO::PARAM_STR);
        $updateStatement->bindParam(':death_place_en', $death_place_en, PDO::PARAM_STR);
        $updateStatement->bindParam(':death_place_de', $death_place_de, PDO::PARAM_STR);
        
        if ($updateStatement->execute()) {

            echo "Текст обновлен, теперь обновляю картинку";
            
            // Проверка, был ли выбран файл для загрузки
            if ($_FILES['portrait_image']['error'] === UPLOAD_ERR_OK) {
                
                echo "Текст обновлен, теперь обновляю картинку";
                // Получение информации о файле
                $random_identifier = bin2hex(random_bytes(8)); // Например, 16 символов
                $portrait_image = $_FILES["portrait_image"]["name"];
                $random_filename = $random_identifier . '_' . $portrait_image;
                
                $portrait_image_tmp = $_FILES["portrait_image"]["tmp_name"];

                // Определяем целевую директорию
                $target_dir = "img/painters-portrets/";
                $target_file = $target_dir . $random_filename;

                // Перемещение файла из временной директории в желаемую
                move_uploaded_file($portrait_image_tmp, $target_file);

                // Удаление предыдущей картинки
                $sql = "SELECT portrait_image_url FROM Artists WHERE artist_id = :artist_id";
                $stmt = $conn->prepare($sql);
                $stmt->execute(["artist_id" => $artistId]);
                $row = $stmt->fetch(PDO::FETCH_ASSOC);
                $image_url = $row['portrait_image_url'];              
                unlink("$target_dir$image_url");

                // Обновление поля с именем файла в базе данных
                $updateImageQuery = "UPDATE Artists SET portrait_image_url = :portrait_image_url WHERE artist_id = :artist_id";
                $updateImageStatement = $conn->prepare($updateImageQuery);
                $updateImageStatement->bindParam(':portrait_image_url', $random_filename, PDO::PARAM_STR);
                $updateImageStatement->bindParam(':artist_id', $artistId, PDO::PARAM_INT);
                $updateImageStatement->execute();
            }
        
            // Переадресация на страницу artists_list.php
            // header('Location: artists_list.php');
            echo '<script>window.location.href = "artists_list.php";</script>';
            exit;
        } else {
            // Обработка ошибки обновления данных
            echo "Ошибка при обновлении данных художника";
        }            
    }


    // Получаем художника
    $artistQuery = "SELECT * FROM Artists WHERE artist_id = :artist_id";
    $artistStatement = $conn->prepare($artistQuery);
    $artistStatement->bindParam(':artist_id', $artistId, PDO::PARAM_INT);
    $artistStatement->execute();
    $artistData = $artistStatement->fetch(PDO::FETCH_ASSOC);
?>
        
    <nav class="wrap nav-page nav-page_experimental">
        <div class="nav-desktop">
            <div>
                <?php echo wrapWordInSpans("ТАБЛИЦА") ?>
            </div>
        </div>
    </nav>
</header>

<main class="flex textArticle_container wrap overflowItem_scroll">

    <form class="artist-add" action="" method="POST" enctype="multipart/form-data">
        <input type="text" name="artistId" class="artistId" hidden value="<?=$artistId?>">
        <div>
            <h3 class="artist-add_header">Загрузка фото художника:</h3>
            <input type="file" name="portrait_image">
        </div>
        <div>
            <h3>Имя:</h3>
            на русском <input name="name_ru" type="text" value=<?=$artistData["name_ru"]?>>
            на английском <input name="name_en" type="text" value=<?=$artistData["name_en"]?>>
            на немецком <input name="name_de" type="text" value=<?=$artistData["name_de"]?>>
        </div>
        <div>
            <h3>Отчество:</h3>
            на русском <input name="middle_name_ru" type="text" value=<?=$artistData["middle_name_ru"]?>>
            на английском <input name="middle_name_en" type="text" value=<?=$artistData["middle_name_en"]?>>
            на немецком <input name="middle_name_de" type="text" value=<?=$artistData["middle_name_de"]?>>
        </div>
        <div>
            <h3>Фамилия:</h3>
            на русском <input name="last_name_ru" type="text" value=<?=$artistData["last_name_ru"]?>>
            на английском <input name="last_name_en" type="text" value=<?=$artistData["last_name_en"]?>>
            на немецком <input name="last_name_de" type="text" value=<?=$artistData["last_name_de"]?>>
        </div>
        <div>
            <h3>Год рождения:</h3>
            <input name="birth_year" type="text" value=<?=$artistData["birth_year"]?>>
        </div>
        <div>
            <h3>Место рождения:</h3>
            на русском <input name="birth_place_ru" type="text" value=<?=$artistData["birth_place_ru"]?>>
            на английском <input name="birth_place_en" type="text" value=<?=$artistData["birth_place_en"]?>>
            на немецком <input name="birth_place_de" type="text" value=<?=$artistData["birth_place_de"]?>>
        </div>
        <div>
            <h3>Год смерти:</h3>
            <input name="death_year" type="text" value=<?=$artistData["death_year"]?>>
        </div>
        <div>
            <h3>Место смерти:</h3>
            на русском <input name="death_place_ru" type="text" value=<?=$artistData["death_place_ru"]?>>
            на английском <input name="death_place_en" type="text" value=<?=$artistData["death_place_en"]?>>
            на немецком <input name="death_place_de" type="text" value=<?=$artistData["death_place_de"]?>>
        </div>
        <div>
            <h3>Если эта галочка отмечена, художник будет показан в разделе «каталог»:</h3>
            <input type="checkbox" <?=($artistData['in_catalog'] == 'on')?'checked':''?> name="in_catalog">
        </div>
        <p><button type="submit" class="editor_btn warning_btn">Сохранить</button> &nbsp;&nbsp;&nbsp; <a href="artists_list.php" style="color: white; border-size: 1px; font-size: 13px; position: relative; top: 2px;" class="editor_btn">Отменить</a></p>
        <br><br><br>
    </form>
</main>


<style>
    .apply_btn {
        display: none;
    }
</style>
<?php 
    $conn = null;
    require 'templates/footer.php';
?>

<?php
    // Подключение сессии
    session_start();
    require_once 'parts_php/dbconnection.php';

    // Проверяем, был ли выбран новый язык
    if (isset($_GET['lang'])) {
        $selectedLang = $_GET['lang'];
        $_SESSION['selectedLang'] = $selectedLang; // Сохраняем выбранный язык в сессии
    } else {
        // Если язык не был выбран, используем значение из сессии (если оно есть) или значение по умолчанию
        $selectedLang = isset($_SESSION['selectedLang']) ? $_SESSION['selectedLang'] : 'ru';
    };

    $table_names = [
        'Художник' => [
            'ru' => 'Художник',
            'en' => 'Artist',
            'de' => 'Künstler'
        ],
        'Год рождения' => [
            'ru' => 'Год рождения',
            'en' => 'Date of Birth',
            'de' => 'Geburtsjahr'
        ],
        'Место рождения' => [
            'ru' => 'Место рождения',
            'en' => 'Place of Birth',
            'de' => 'Geburtsort'
        ],
        'Год смерти' => [
            'ru' => 'Год смерти',
            'en' => 'Date of Demise',
            'de' => 'Sterbejahr'
        ],
        'Место смерти' => [
            'ru' => 'Место смерти',
            'en' => 'Place of Demise',
            'de' => 'Sterbeort'
        ]
    ];
?>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="css/style.css" rel="stylesheet">
    <title>LBK art foundation</title>
    <link rel="shortcut icon" href="img/LBK-AKT.svg" type="image/x-icon">

    <style>   
        .artists-list-grid {
            grid-template-columns: 20vh repeat(4, 1fr) 20vh;
        }
        .page-break {
            page-break-before: always;
        }
        main {
            padding: 1cm;
        }
    </style>
</head>
<body>

<main>    
    <div class="artists-list-grid artists-list_header">
        <div></div>
        <div><?=$table_names['Художник'][$selectedLang]?></div>
        <div><?=$table_names['Год рождения'][$selectedLang]?></div>
        <div><?=$table_names['Место рождения'][$selectedLang]?></div>
        <div><?=$table_names['Год смерти'][$selectedLang]?></div>
        <div><?=$table_names['Место смерти'][$selectedLang]?></div>
    </div>

    <?php
    $artistsQuery = "SELECT * FROM Artists WHERE in_catalog = 'on'";
    $artistsStatement = $conn->prepare($artistsQuery);
    $artistsStatement->execute();
    while ($artistData = $artistsStatement->fetch(PDO::FETCH_ASSOC)): 
    ?>

    <div class="artists-list-grid artist">
        <div><img src="img/painters-portrets/<?=$artistData['portrait_image_url']?>" alt="<?=$artistData['name_ru']?> <?=$artistData['last_name_ru']?>"></div>
        <div>
            <p><?=$artistData["last_name_$selectedLang"]?></p>
            <p><?=$artistData["name_$selectedLang"]?></p>
            <p><?=$artistData["middle_name_$selectedLang"]?></p>
        </div>
        <div><?=$artistData['birth_year']?></div>
        <div><?=$artistData["birth_place_$selectedLang"]?></div>
        <div><?=$artistData['death_year']?></div>
        <div><?=$artistData["death_place_$selectedLang"]?></div>
    </div>
    
    <!-- Картины художника -->
    <?php
        $paintingsQuery = "SELECT * FROM Paintings WHERE artist_id = :artist_id";
        $paintingsStatement = $conn->prepare($paintingsQuery);
        $artistId = $artistData["artist_id"];
        $paintingsStatement->bindParam(':artist_id', $artistId, PDO::PARAM_INT);
        $paintingsStatement->execute();
    ?>

    <div class="artists-list_paintings">
        <?php while ($paintingsData = $paintingsStatement->fetch(PDO::FETCH_ASSOC)): ?>
        <div class="artists-list-picture_container">
            <div><img src="img/paintings/<?=$paintingsData['image_url']?>" alt=""></div>
            <p>«<b><?=$paintingsData["title_$selectedLang"]?></b>»</p>
            <p><?=$paintingsData['creation_year']?></p>
            <p><?=$paintingsData["technique_$selectedLang"]?></p>
            <p><?=$paintingsData['size']?></p>
            <p><?=$paintingsData['catalog_number']?></p>

        </div>
        <?php endwhile; ?>
    </div>

    <div class="page-break"></div>
    <?php endwhile; ?>
</main>
</body>
</html>

<?php $conn = null; ?>

<?php 
    require 'templates/header_page.php'; 
    require_once 'parts_php/dbconnection.php';

    $table_names = [
        'Художник' => [
            'ru' => 'Художник',
            'en' => 'Artist',
            'de' => 'Künstler'
        ],
        'Год рождения' => [
            'ru' => 'Год рождения',
            'en' => 'Date of Birth',
            'de' => 'Geburtsjahr'
        ],
        'Место рождения' => [
            'ru' => 'Место рождения',
            'en' => 'Place of Birth',
            'de' => 'Geburtsort'
        ],
        'Год смерти' => [
            'ru' => 'Год смерти',
            'en' => 'Date of Demise',
            'de' => 'Sterbejahr'
        ],
        'Место смерти' => [
            'ru' => 'Место смерти',
            'en' => 'Place of Demise',
            'de' => 'Sterbeort'
        ]
    ];
?>

    <nav class="wrap nav-page nav-page_experimental">
        <div class="nav-desktop">
            <div>
                <?php echo wrapWordInSpans("ХУДОЖНИКИ") ?>
            </div>
            <div>
                <a class="editor_btn" href="artists_list_add.php">Добавить художника</a>
            </div>
            <div>
                <a class="editor_btn" href="artists_list_print.php">Печать</a>
            </div>
        </div>
    </nav>
</header>

<!-- wrap artists-list_wrap-->
<main class="wrap overflowItem_scroll">    
    <div class="artists-list-grid artists-list_header">
        <div></div>
        <div><?=$table_names['Художник'][$selectedLang]?></div>
        <div><?=$table_names['Год рождения'][$selectedLang]?></div>
        <div><?=$table_names['Место рождения'][$selectedLang]?></div>
        <div><?=$table_names['Год смерти'][$selectedLang]?></div>
        <div><?=$table_names['Место смерти'][$selectedLang]?></div>
        <div></div>
    </div>


<!-- Загрузка художников из коллекции -->
    <?php
    $artistsQuery = "SELECT * FROM Artists WHERE in_catalog = 'on'";
    $artistsStatement = $conn->prepare($artistsQuery);
    $artistsStatement->execute();
    while ($artistData = $artistsStatement->fetch(PDO::FETCH_ASSOC)): 
    ?>

    <div class="artists-list-grid artist">
        <div><img src="img/painters-portrets/<?=$artistData['portrait_image_url']?>" alt="<?=$artistData['name_ru']?> <?=$artistData['last_name_ru']?>"></div>
        <div>
            <p><?=$artistData["last_name_$selectedLang"]?></p>
            <p><?=$artistData["name_$selectedLang"]?></p>
            <p><?=$artistData["middle_name_$selectedLang"]?></p>
        </div>
        <div><?=$artistData['birth_year']?></div>
        <div><?=$artistData["birth_place_$selectedLang"]?></div>
        <div><?=$artistData['death_year']?></div>
        <div><?=$artistData["death_place_$selectedLang"]?></div>
        <div>
            <p><a class="editor_btn" href="artists_list_edit.php?artistId=<?=$artistData["artist_id"] ?>">Редактировать</a></p>
            
            <div>
                <span class="editor_btn warning_btn deleteConfirmation_btn">
                    Удалить
                    <div class="deleteConfirmation_container">
                        
                        <img src="img/painters-portrets/<?=$artistData['portrait_image_url']?>" alt="<?=$artistData['name_ru']?>">
                        
                        <p>Удалить художника: <b><?=$artistData["last_name_$selectedLang"]?> <?=$artistData["name_$selectedLang"]?> <?=$artistData["middle_name_$selectedLang"]?></b>?</p>

                        <div>
                            <a class="editor_btn warning_btn" href="artists_list_delete.php?artistId=<?=$artistData["artist_id"] ?>">Удалить</a>
                            <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                        </div>
                    </div>
                </span>
            </div>
        </div>
    </div>
    
    <!-- Картины художника -->
    <?php
    $paintingsQuery = "SELECT * FROM Paintings WHERE artist_id = :artist_id";
    $paintingsStatement = $conn->prepare($paintingsQuery);
    $artistId = $artistData["artist_id"];
    $paintingsStatement->bindParam(':artist_id', $artistId, PDO::PARAM_INT);
    $paintingsStatement->execute();
    ?>
    <div class="artists-list_paintings">
        <?php while ($paintingsData = $paintingsStatement->fetch(PDO::FETCH_ASSOC)): ?>
        <div class="artists-list-picture_container">
            <div><img src="img/paintings/<?=$paintingsData['image_url']?>" alt=""></div>
            <p>«<b><?=$paintingsData["title_$selectedLang"]?></b>»</p>
            <p><?=$paintingsData['creation_year']?></p>
            <p><?=$paintingsData["technique_$selectedLang"]?></p>
            <p><?=$paintingsData['size']?></p>
            <p><?=$paintingsData['catalog_number']?></p>
            <span class="artists-list-picture_editBtn editor_btn"><a href="artists_painting_edit.php?painting_id=<?php echo $paintingsData["painting_id"] ?>" style="color: white; text-decaration: none;">Редактировать</a></span>
            
            <span tyle="color: white;" class="artists-list-picture_editBtn editor_btn warning_btn deleteConfirmation_btn" style="top: 3vh;">
                Удалить
                <div class="deleteConfirmation_container">
                    
                    <img src="img/paintings/<?=$paintingsData['image_url']?>" alt="">
                    
                    <p>Удалить картину «<b><?=$paintingsData["title_$selectedLang"]?></b>»?</p>

                    <div>
                        <a class="editor_btn warning_btn" style="color: white; text-decaration: none;" href="artists_painting_delete.php?painting_id=<?php echo $paintingsData["painting_id"] ?>">Удалить</a>
                        <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                    </div>
                </div>

            </span>
        </div>
        <?php endwhile; ?>

        <div class="add-picture_Btn">
            <a href="artists_painting_add.php?artistId=<?php echo $artistData["artist_id"] ?>"> <span>+</span><span>Добавить картину</span> </a>
        </div>
    </div>
    <?php endwhile; ?>
<!-- END/ Загрузка художников из коллекции -->

<div style="display: flex; justify-content: space-between; align-items: baseline;">
    <p style="font-size: 3.3vh !important;">
        Художники, которых не будет видно в каталоге:
    </p>
    <a class="editor_btn" href="artists_list_add.php?in_catalog=false">Добавить художника</a>
</div>

<!-- Загрузка художников НЕ из коллекции -->
<?php
    $artistsQuery = "SELECT * FROM Artists WHERE in_catalog = 'off'";
    $artistsStatement = $conn->prepare($artistsQuery);
    $artistsStatement->execute();
    ?>
    <?php while ($artistData = $artistsStatement->fetch(PDO::FETCH_ASSOC)): ?>
    <div class="artists-list-grid artist artists-list-grid_notInCatalog">
        <div><img src="img/painters-portrets/<?=$artistData['portrait_image_url']?>" alt="<?=$artistData['name_ru']?> <?=$artistData['last_name_ru']?>"></div>
        <div>
            <p><?=$artistData["last_name_$selectedLang"]?></p>
            <p><?=$artistData["name_$selectedLang"]?></p>
            <p><?=$artistData["middle_name_$selectedLang"]?></p>
        </div>
        <div><?=$artistData['birth_year']?></div>
        <div><?=$artistData["birth_place_$selectedLang"]?></div>
        <div><?=$artistData['death_year']?></div>
        <div><?=$artistData["death_place_$selectedLang"]?></div>
        <div>
            <p><a class="editor_btn" href="artists_list_edit.php?artistId=<?=$artistData["artist_id"] ?>">Редактировать</a></p>
            
            <div>
                <span class="editor_btn warning_btn deleteConfirmation_btn">
                    Удалить
                    <div class="deleteConfirmation_container">
                        
                        <img src="img/painters-portrets/<?=$artistData['portrait_image_url']?>" alt="<?=$artistData['name_ru']?>">
                        
                        <p>Удалить художника: <b><?=$artistData["last_name_$selectedLang"]?> <?=$artistData["name_$selectedLang"]?> <?=$artistData["middle_name_$selectedLang"]?></b>?</p>

                        <div>
                            <a class="editor_btn warning_btn" href="artists_list_delete.php?artistId=<?=$artistData["artist_id"] ?>">Удалить</a>
                            <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                        </div>
                    </div>
                </span>
            </div>

        </div>
    </div>

    
    
    <!-- Картины художника -->
    <?php
    $paintingsQuery = "SELECT * FROM Paintings WHERE artist_id = :artist_id";
    $paintingsStatement = $conn->prepare($paintingsQuery);
    $artistId = $artistData["artist_id"];
    $paintingsStatement->bindParam(':artist_id', $artistId, PDO::PARAM_INT);
    $paintingsStatement->execute();
    ?>
    <div class="artists-list_paintings artists-list-grid_notInCatalog">
        <?php while ($paintingsData = $paintingsStatement->fetch(PDO::FETCH_ASSOC)): ?>
        <div class="artists-list-picture_container">
            <img src="img/paintings/<?=$paintingsData['image_url']?>" alt="">
            <p>«<b><?=$paintingsData["title_$selectedLang"]?></b>»</p>
            <p><?=$paintingsData['creation_year']?></p>
            <p><?=$paintingsData["technique_$selectedLang"]?></p>
            <p><?=$paintingsData['size']?></p>
            <p><?=$paintingsData['catalog_number']?></p>
            <span class="artists-list-picture_editBtn editor_btn"><a href="artists_painting_edit.php?painting_id=<?php echo $paintingsData["painting_id"] ?>" style="color: white; text-decaration: none;">Редактировать</a></span>
            <span tyle="color: white;" class="artists-list-picture_editBtn editor_btn warning_btn deleteConfirmation_btn" style="top: 3vh;">
                Удалить
                <div class="deleteConfirmation_container">
                    
                    <img src="img/paintings/<?=$paintingsData['image_url']?>" alt="">
                    
                    <p>Удалить картину «<b><?=$paintingsData["title_$selectedLang"]?></b>»?</p>

                    <div>
                        <a class="editor_btn warning_btn" style="color: white; text-decaration: none;" href="artists_painting_delete.php?painting_id=<?php echo $paintingsData["painting_id"] ?>">Удалить</a>
                        <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                    </div>
                </div>

            </span>
        </div>
        <?php endwhile; ?>

        <div class="add-picture_Btn">
            <a href="artists_painting_add.php?artistId=<?php echo $artistData["artist_id"] ?>"> <span>+</span><span>Добавить картину</span> </a>
        </div>
    </div>
    <?php endwhile; ?>
<!-- END/ Загрузка художников из коллекции -->

<!-- Скрипт Удаление картинки / художника -->
<script src="js/delete-confirmation.js"></script>

<style>
.apply_btn {
    display: none;
}
.nav-desktop {
    justify-content: space-between;
}
</style>
<?php $conn = null; ?>
<?php require 'templates/footer.php' ?>

<?php 
    $page_styles = "
.apply_btn {
    display: none;
}
";
    require 'templates/header_page.php';
    // require 'parts_php/dbconnection.php'; // Подключаю базу данных
    $selectedLanguage = $_SESSION['selectedLang'];
    
    $artistId = htmlentities($_GET["artistId"]);
    $paintingID = htmlentities($_GET["paintingID"]);

?>
        
<nav class="wrap nav-page nav-page_experimental"><div class="nav-desktop"><div><?php echo wrapWordInSpans("КАРТИНА") ?></div></div></nav></header>

<main class="flex textArticle_container wrap overflowItem_scroll">
    <form class="painting-add" action="actions/painting_add.php" enctype="multipart/form-data" method="POST">

        <?php if(isset($_GET['artist_add'])): ?>
            <input type="text" name="name_ru" style="display: none;" value="<?=$_GET['name_ru']?>">
            <input type="text" name="last_name_ru" style="display: none;" value="<?=$_GET['last_name_ru']?>">
            <input type="text" name="artist_add" style="display: none;" value="<?=$_GET['artist_add']?>">
        <?php endif; ?>

        <input type="text" name="artist_id" class="artistId" hidden value="<?=$artistId?>">
        <div>
            <h3 class="artist-add_header">Загрузка картины:</h3>
            <input type="file" name="painting_image">
        </div>
        <div>
            <h3>Название картины:</h3>
            на русском <input name="title_ru" type="text">
            на английском <input name="title_en" type="text">
            на немецком <input name="title_de" type="text">
        </div>
        <div>
            <h3>Дата создания:</h3>
            <input name="creation_year" type="number">
        </div>
        <div>
            <h3>Техника:</h3>
            на русском <input name="technique_ru" type="text">
            на английском <input name="technique_en" type="text">
            на немецком <input name="technique_de" type="text">
        </div>
        <div>
            <h3>Размеры:</h3>
            <input name="size" type="number">
        </div>
        <div>
            <h3>Номер по каталогу:</h3>
            <input name="catalog_number" type="number">
        </div>
        <div>
            <h3>Местонахождение:</h3>
            <input name="location" type="text">
        </div>
        
        <p><button type="submit" class="editor_btn">Сохранить картину</button></p>
        <br><br><br>
    </form>
</main>



<?php require 'templates/footer.php'; ?>

<?php
require_once 'parts_php/dbconnection.php';
$painting_id = htmlentities($_GET["painting_id"]);

// Адрес изображения художника
$sql = "SELECT image_url FROM Paintings WHERE painting_id = :painting_id";
$stmt = $conn->prepare($sql);
$stmt->execute(["painting_id" => $painting_id]);
$row = $stmt->fetch(PDO::FETCH_ASSOC);
$image_url = $row['image_url'];
unlink("img/paintings/$image_url");


$sql = "DELETE FROM Paintings WHERE painting_id=:painting_id";
$stmt = $conn->prepare($sql);
$stmt->execute([ "painting_id" => $painting_id ]);

header('location: artists_list.php');

<?php 
    require 'templates/header_page.php';
    require 'parts_php/dbconnection.php'; // Подключаю базу данных
    $selectedLanguage = $_SESSION['selectedLang'];
    
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {

        $painting_id = $_POST["painting_id"];

        // $artist_id = $_POST["artist_id"];
        $title_ru = $_POST["title_ru"];
        $title_en = $_POST["title_en"];
        $title_de = $_POST["title_de"];
        $creation_year = $_POST["creation_year"];
        $technique_ru = $_POST["technique_ru"];
        $technique_en = $_POST["technique_en"];
        $technique_de = $_POST["technique_de"];
        $size = $_POST["size"];
        $catalog_number = $_POST["catalog_number"];
        $location = $_POST["location"];

        // SQL-запрос для обновления данных в таблице Paintings
        $updateQuery = "UPDATE Paintings
                    SET
                        -- artist_id = :artist_id,
                        title_ru = :title_ru,
                        title_en = :title_en,
                        title_de = :title_de,
                        creation_year = :creation_year,
                        technique_ru = :technique_ru,
                        technique_en = :technique_en,
                        technique_de = :technique_de,
                        size = :size,
                        catalog_number = :catalog_number,
                        location = :location
                    WHERE painting_id = :painting_id";

        // Подготовка и выполнение запроса
        $updateStatement = $conn->prepare($updateQuery);
        // $updateStatement->bindParam(':artist_id', $artist_id);
        $updateStatement->bindParam(':title_ru', $title_ru);
        $updateStatement->bindParam(':title_en', $title_en);
        $updateStatement->bindParam(':title_de', $title_de);
        $updateStatement->bindParam(':creation_year', $creation_year);
        $updateStatement->bindParam(':technique_ru', $technique_ru);
        $updateStatement->bindParam(':technique_en', $technique_en);
        $updateStatement->bindParam(':technique_de', $technique_de);
        $updateStatement->bindParam(':size', $size);
        $updateStatement->bindParam(':catalog_number', $catalog_number);
        $updateStatement->bindParam(':location', $location);
        $updateStatement->bindParam(':painting_id', $painting_id, PDO::PARAM_INT);

        if ($updateStatement->execute()) {
            // Проверка, был ли выбран файл для загрузки
            if ($_FILES['painting_image']['error'] === UPLOAD_ERR_OK) {
                // Удаление предыдущей картинки
                $sql = "SELECT image_url FROM Paintings WHERE painting_id = :painting_id";
                $stmt = $conn->prepare($sql);
                $stmt->execute(["painting_id" => $painting_id]);
                $row = $stmt->fetch(PDO::FETCH_ASSOC);
                $image_url = $row['image_url'];
                // unlink("img/paintings/$image_url");


                // Получение информации о файле
                $random_identifier = bin2hex(random_bytes(8)); // Например, 16 символов
                $extension = pathinfo($portrait_image, PATHINFO_EXTENSION);
                $random_filename = $random_identifier . '_' . $portrait_image;

                $painting_image = $_FILES["painting_image"]["name"];
                $painting_image_tmp = $_FILES["painting_image"]["tmp_name"];
                $target_dir = "../img/paintings/";
                $target_file = $target_dir . $random_filename;
        
                // Перемещение файла из временной директории в желаемую
                if (move_uploaded_file($tmpName, $destination)) {                    
                    // Обновление поля с именем файла в базе данных
                    $updateImageQuery = "UPDATE Paintings SET painting_image = :painting_image WHERE painting_id = :painting_id";
                    $updateImageStatement = $conn->prepare($updateImageQuery);
                    $updateImageStatement->bindParam(':painting_image', $random_filename, PDO::PARAM_STR);
                    $updateImageStatement->bindParam(':painting_id', $painting_id, PDO::PARAM_INT);
                    
                    if ($updateImageStatement->execute()) {
                        // Картинка успешно обновлена
                    } else {
                        // Обработка ошибки обновления изображения
                        echo "Ошибка при обновлении изображения художника";
                    }
                } else {
                    // Обработка ошибки при перемещении файла
                    echo "Ошибка при загрузке новой картинки";
                }
            }
        
            // Переадресация на страницу artists_list.php
            // header('Location: artists_list.php');
            echo '<script>window.location.href = "artists_list.php";</script>';
            exit;
        } else {
            // Обработка ошибки обновления данных
            echo "Ошибка при обновлении данных художника";
        }
    
    }

    // Получаем кртину
    $paintingsQuery = "SELECT * FROM Paintings WHERE painting_id = :painting_id";
    $paintingsStatement = $conn->prepare($paintingsQuery);
    $painting_id = htmlentities($_GET["painting_id"]);
    $paintingsStatement->bindParam(':painting_id', $painting_id, PDO::PARAM_INT);
    $paintingsStatement->execute();
    $paintingsData = $paintingsStatement->fetch(PDO::FETCH_ASSOC);
?>
        
    <nav class="wrap nav-page nav-page_experimental">
        <div class="nav-desktop">
            <div>
                <?php echo wrapWordInSpans("КАРТИНА") ?>
            </div>
        </div>
    </nav>
</header>

<main class="flex textArticle_container wrap overflowItem_scroll">
    <form class="painting-add" action="" enctype="multipart/form-data" method="POST">
        <input type="text" name="painting_id" class="artistId" hidden value="<?=$painting_id?>">
        <div>
            <h3 class="artist-add_header">Загрузка картины:</h3>
            <input type="file" name="painting_image">
        </div>
        <div>
            <h3>Название картины:</h3>
            на русском <input name="title_ru" type="text" value='<?=$paintingsData["title_ru"]?>'>
            на английском <input name="title_en" type="text" value='<?=$paintingsData["title_en"]?>'>
            на немецком <input name="title_de" type="text" value='<?=$paintingsData["title_de"]?>'>
        </div>
        <div>
            <h3>Дата создания:</h3>
            <input name="creation_year" type="number" value='<?=$paintingsData["creation_year"]?>'>
        </div>
        <div>
            <h3>Техника:</h3>
            на русском <input name="technique_ru" type="text" value='<?=$paintingsData["technique_ru"]?>'>
            на английском <input name="technique_en" type="text" value='<?=$paintingsData["technique_en"]?>'>
            на немецком <input name="technique_de" type="text" value='<?=$paintingsData["technique_de"]?>'>
        </div>
        <div>
            <h3>Размеры:</h3>
            <input name="size" type="text" value='<?=$paintingsData["size"]?>'>
        </div>
        <div>
            <h3>Номер по каталогу:</h3>
            <input name="catalog_number" type="text" value='<?=$paintingsData["catalog_number"]?>'>
        </div>
        <div>
            <h3>Местонахождение:</h3>
            <input name="location" type="text" value='<?=$paintingsData["location"]?>'>
        </div>
        
        <p><button type="submit" class="editor_btn warning_btn">Сохранить</button> &nbsp;&nbsp;&nbsp; <a href="artists_list.php" style="color: white; border-size: 1px; font-size: 13px; position: relative; top: 2px;" class="editor_btn">Отменить</a></p>
        <br><br><br>
    </form>
</main>
<style>
.apply_btn {
    display: none;
}
</style>
<?php
    $conn = null;
    require 'templates/footer.php';
 ?>

 <?php 
    require_once 'templates/header_page.php';
    require_once 'parts_php/dbconnection.php'; // Подключаю базу данных
    $selectedLanguage = $_SESSION['selectedLang'];
    
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {

        $painting_id = $_POST["painting_id"];

        $title_ru = $_POST["title_ru"];
        $title_en = $_POST["title_en"];
        $title_de = $_POST["title_de"];
        $creation_year = $_POST["creation_year"];
        $technique_ru = $_POST["technique_ru"];
        $technique_en = $_POST["technique_en"];
        $technique_de = $_POST["technique_de"];
        $size = $_POST["size"];
        $catalog_number = $_POST["catalog_number"];
        $location = $_POST["location"];

        // SQL-запрос для обновления данных в таблице Paintings
        $updateQuery = "UPDATE Paintings
                        SET title_ru = :title_ru,
                            title_en = :title_en,
                            title_de = :title_de,
                            creation_year = :creation_year,
                            technique_ru = :technique_ru,
                            technique_en = :technique_en,
                            technique_de = :technique_de,
                            size = :size,
                            catalog_number = :catalog_number,
                            location = :location
                        WHERE painting_id = :painting_id";

        // Подготовка и выполнение запроса
        $updateStatement = $conn->prepare($updateQuery);
        $updateStatement->bindParam(':title_ru', $title_ru);
        $updateStatement->bindParam(':title_en', $title_en);
        $updateStatement->bindParam(':title_de', $title_de);
        $updateStatement->bindParam(':creation_year', $creation_year);
        $updateStatement->bindParam(':technique_ru', $technique_ru);
        $updateStatement->bindParam(':technique_en', $technique_en);
        $updateStatement->bindParam(':technique_de', $technique_de);
        $updateStatement->bindParam(':size', $size);
        $updateStatement->bindParam(':catalog_number', $catalog_number);
        $updateStatement->bindParam(':location', $location);
        $updateStatement->bindParam(':painting_id', $painting_id, PDO::PARAM_INT);

        if ($updateStatement->execute()) {
            
            // Проверка, был ли выбран файл для загрузки
            if ($_FILES['painting_image']['error'] === UPLOAD_ERR_OK) {                
                
                // Получение информации о файле
                $random_identifier = bin2hex(random_bytes(8));
                $original_filename = $_FILES["painting_image"]["name"];
                $random_filename = $random_identifier . '_' . $original_filename;
                
                $tmp_filename = $_FILES["painting_image"]["tmp_name"];
                
                // Определяем целевую директорию
                $target_dir = "img/paintings/";
                $target_file = $target_dir . $random_filename;

                // Перемещение файла из временной директории в желаемую
                move_uploaded_file($tmp_filename, $target_file);
                
                // Удаление предыдущей картинки
                $sql = "SELECT image_url FROM Paintings WHERE painting_id = :painting_id";
                $stmt = $conn->prepare($sql);
                $stmt->execute(["painting_id" => $painting_id]);
                $row = $stmt->fetch(PDO::FETCH_ASSOC);
                $image_url = $row['image_url'];
                echo $image_url;
                unlink("img/paintings/$image_url");

                $updateImageQuery = "UPDATE Paintings SET image_url = :image_url WHERE painting_id = :painting_id";
                $updateImageStatement = $conn->prepare($updateImageQuery);
                $updateImageStatement->bindParam(':image_url', $random_filename, PDO::PARAM_STR);
                $updateImageStatement->bindParam(':painting_id', $painting_id, PDO::PARAM_INT);
                $updateImageStatement->execute();            
                

            } else {
                echo "Ошибка при загрузке IMG";
            }
        
            // Переадресация на страницу artists_list.php
            // header('Location: artists_list.php');
            
            echo '<script>window.location.href = "artists_list.php";</script>';
            exit;

        } else {
            echo "Ошибка при обновлении данных художника";
        }
    }

    // Получаем кртину
    $paintingsQuery = "SELECT * FROM Paintings WHERE painting_id = :painting_id";
    $paintingsStatement = $conn->prepare($paintingsQuery);
    $painting_id = htmlentities($_GET["painting_id"]);
    $paintingsStatement->bindParam(':painting_id', $painting_id, PDO::PARAM_INT);
    $paintingsStatement->execute();
    $paintingsData = $paintingsStatement->fetch(PDO::FETCH_ASSOC);
?>
        
    <nav class="wrap nav-page nav-page_experimental">
        <div class="nav-desktop">
            <div>
                <?php echo wrapWordInSpans("КАРТИНА") ?>
            </div>
        </div>
    </nav>
</header>

<main class="flex textArticle_container wrap overflowItem_scroll">
    <form class="painting-add" action="" enctype="multipart/form-data" method="POST">
        <input type="text" name="painting_id" class="artistId" hidden value="<?=$painting_id?>">
        <div>
            <h3 class="artist-add_header">Загрузка картины:</h3>
            <input type="file" name="painting_image">
        </div>
        <div>
            <h3>Название картины:</h3>
            на русском <input name="title_ru" type="text" value='<?=$paintingsData["title_ru"]?>'>
            на английском <input name="title_en" type="text" value='<?=$paintingsData["title_en"]?>'>
            на немецком <input name="title_de" type="text" value='<?=$paintingsData["title_de"]?>'>
        </div>
        <div>
            <h3>Дата создания:</h3>
            <input name="creation_year" type="number" value='<?=$paintingsData["creation_year"]?>'>
        </div>
        <div>
            <h3>Техника:</h3>
            на русском <input name="technique_ru" type="text" value='<?=$paintingsData["technique_ru"]?>'>
            на английском <input name="technique_en" type="text" value='<?=$paintingsData["technique_en"]?>'>
            на немецком <input name="technique_de" type="text" value='<?=$paintingsData["technique_de"]?>'>
        </div>
        <div>
            <h3>Размеры:</h3>
            <input name="size" type="text" value='<?=$paintingsData["size"]?>'>
        </div>
        <div>
            <h3>Номер по каталогу:</h3>
            <input name="catalog_number" type="text" value='<?=$paintingsData["catalog_number"]?>'>
        </div>
        <div>
            <h3>Местонахождение:</h3>
            <input name="location" type="text" value='<?=$paintingsData["location"]?>'>
        </div>
        
        <p><button type="submit" class="editor_btn warning_btn">Сохранить</button> &nbsp;&nbsp;&nbsp; <a href="artists_list.php" style="color: white; border-size: 1px; font-size: 13px; position: relative; top: 2px;" class="editor_btn">Отменить</a></p>
        <br><br><br>
    </form>
</main>
<style>
.apply_btn {
    display: none;
}
</style>


<?php require_once 'templates/footer.php'; ?>

<?php
require_once 'templates/header_page.php';
session_start();

$translations = array(
    'contacts' => array(
        'ru' => 'Контакты',
        'en' => 'Contact us',
        'de' => 'Kontakt'
    ),
    'contact_us_using' => array(
        'ru' => 'Вы можете связаться с нами, используя',
        'en' => 'You can contact us using',
        'de' => 'Sie können uns kontaktieren über'
    ),
    'or_write_letter_using_form' => array(
        'ru' => 'Или написать письмо, используя форму',
        'en' => 'Or write a letter using the form',
        'de' => 'Oder schreiben Sie einen Brief mit dem Formular'
    ),
    'your_name' => array(
        'ru' => 'Ваше имя',
        'en' => 'Your Name',
        'de' => 'Ihr Name'
    ),
    'email_for_reply' => array(
        'ru' => 'E-mail для ответа',
        'en' => 'Email for Reply',
        'de' => 'E-Mail für die Antwort'
    ),
    'phone' => array(
        'ru' => 'Телефон',
        'en' => 'Phone',
        'de' => 'Telefon'
    ),
    'message_text' => array(
        'ru' => 'Текст сообщения',
        'en' => 'Message Text',
        'de' => 'Nachrichtentext'
    ),
    'send_form' => array(
        'ru' => 'Отправить форму',
        'en' => 'Send Form',
        'de' => 'Formular senden'
    )
);

if ($_SERVER["REQUEST_METHOD"] == "GET" && !empty($_GET['add_text'])) {

}


if ($_SERVER["REQUEST_METHOD"] == "GET" && !empty($_GET['delete_id'])) {
    $delete_id = $_GET['delete_id'];
    
    $sql = "DELETE FROM table_smalltexts WHERE id=:delete_id";
    $stmt = $conn->prepare($sql);
    $stmt->execute([ "delete_id" => $delete_id ]);
}


$sql = "SELECT * FROM table_smalltexts WHERE page_type = 'contacts'";
$stmt = $conn->prepare($sql);
$stmt->execute();


if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $to = "recipient@example.com"; // Адрес получателя
    $subject = "Тестовое письмо"; // Тема письма
    $message = "Hello, это тестовое письмо!"; // Текст письма
    $headers = "From: sender@example.com"; // Отправитель

    if (mail($to, $subject, $message, $headers)) {
        echo "Письмо успешно отправлено.";
    } else {
        echo "Ошибка при отправке письма.";
    }
}
?>
        
    <nav class="wrap nav-page nav-page_experimental">
        <div class="nav-desktop">
            <div>
                <?=wrapWordInSpans($translations['contacts'][$selectedLang])?>                         
            </div>
        </div>
    </nav>
</header>

<main class="flex textArticle_container wrap overflowItem_hide">
    
    <ul class="left-side exhibitions_list overflowItem_scroll">
    <?php while ($data = $stmt->fetch(PDO::FETCH_ASSOC)): ?>
        <li>
            <p><?=$data["description_$selectedLang"]?></p>

            <?php if ($_SESSION['login']): ?>
            <!-- Edit mode -->
            <!-- Кнопка удаления записи -->
                <div style="margin: 8px 0 0; text-align: left">
                    <span class="editor_btn warning_btn deleteConfirmation_btn">
                        Удалить
                        
                        <!-- Скрытый блок с подтверждением -->
                        <div class="deleteConfirmation_container">
                            <p style="margin-bottom: 16px; max-width: 50vw">Удалить текст: <b><?= $data["description_$selectedLang"] ?></b>?</p>
                            <div>
                                <!-- <a class="editor_btn warning_btn" style="color: white" href="actions/table-text_delete.php?delete_id=<?=$data['id']?>&page_url=<?=$page_url?>">Удалить</a> -->
                                <a class="editor_btn warning_btn" style="color: white" href="<?= $_SERVER['PHP_SELF'] ?>?delete_id=<?=$data['id']?>">Удалить</a>
                                <span class="editor_btn deleteConfirmation_cancel">Отменить удаление</span>
                            </div>
                        </div>
                    </span>
                </div>

            <!-- End of Edit mode -->
            <?php endif; ?>
        
        </li>
    <?php endwhile; ?>

    <?php if ($_SESSION['login']): ?>
    <!-- Edit mode -->
        <li style="border-bottom: 0; text-align: left">
            <a class="editor_btn" style="color: white;" href="<?= $_SERVER['PHP_SELF'] ?>?add_text=TRUE">Добавить текст</a>
        </li>
    <!-- End of Edit mode -->
    <?php endif; ?>

    </ul>

    <style>
        .exhibitions_list p {
            margin-bottom: 0;
            cursor: auto;
        }
    </style>
    
    <section class="overflowItem_hide contacts">
        
    <?php if ($_SESSION['login']): ?>

    <?php endif; ?>
        
        <p><?=$translations['contact_us_using'][$selectedLang]?>:</p>
        <p><a href="mailto:#">Gkjhlkjhlkjhlk@com</a></p>
        <p><?=$translations['or_write_letter_using_form'][$selectedLang]?>:</p>
        
        <form action="<?= $_SERVER['PHP_SELF'] ?>" method="POST">
            <div>
                <input placeholder="<?=$translations['your_name'][$selectedLang]?>" name="message_name" type="text">
                <input placeholder="<?=$translations['email_for_reply'][$selectedLang]?>" name="message_email" type="text">
                <input placeholder="<?=$translations['phone'][$selectedLang]?>" name="message_phone" type="text">
            </div>
            <textarea placeholder="<?=$translations['message_text'][$selectedLang]?>" name="message_text" cols="30" rows="10"></textarea>
            <div><button type="submit"><?=$translations['send_form'][$selectedLang]?></button></div>            
        </form>
    </section>
</main>



<?php if ($_SESSION['login']): ?>
<!-- Edit mode -->
    <script src="js/delete-confirmation.js"></script>
<!-- End of Edit mode -->
<?php endif; ?>


<?php require_once 'templates/footer.php' ?>

<?php 
// Шаблон галереи выставки. 
// Динамически отображает меню на основе ID и записи в БД

$page_styles = "::-webkit-scrollbar { display: none; }";

// Настраиваем переключатель языков
session_start();
if (isset($_GET['exhibition_id'])) {
    $exhibition_id = $_GET['exhibition_id'];
    $_SESSION['exhibition_id'] = $exhibition_id;
} elseif (isset($_SESSION['exhibition_id'])) {
    $exhibition_id = $_SESSION['exhibition_id'];
}

require_once 'parts_php/dbconnection.php';
$sql = "SELECT exhibition_type FROM exhibitions WHERE exhibition_id = :exhibition_id";
$stmt = $conn->prepare($sql);
$stmt->bindParam(':exhibition_id', $exhibition_id, PDO::PARAM_INT);
$stmt->execute();
$data = $stmt->fetch(PDO::FETCH_ASSOC);
switch ($data['exhibition_type']) {
    case 'solo':
        $page_menu = [
            "ПЕРСОНАЛЬНАЯ",
            "ВЫСТАВКИ",
            "РУБИНШТЕЙНА",
            "Тематическая",
            "ПРОШЕДШИЕ",
        ];
        break;
    case 'theme':
        $page_menu = [
            "Тематическая",
            "ВЫСТАВКИ",
            "РУБИНШТЕЙНА",
            "ПЕРСОНАЛЬНАЯ",
            "ПРОШЕДШИЕ",
        ];
        break;
};
require_once 'templates/header_page_menu.php';

$exhibition_translation = [
    "ru" => [
        wrapWordInSpans("Описание"),
        wrapWordInSpans("Выставки")
    ],
    "en" => [
        wrapWordInSpans("About the"),
        wrapWordInSpans("exhibition")
    ],
    "de" => [
        wrapWordInSpans("über die"),
        wrapWordInSpans("Ausstellung")
    ]
];

// Галерея
$page_type = 'exhibition';

// Временно, потом убрать + убрать таблицу в БД
// $sql = "SELECT * FROM exhibitions_paintings WHERE exhibition_id = ?";
// $stmt = $conn->prepare($sql);
// $stmt->execute([ $exhibition_id ]);
// $exhibitions_paintings = $stmt->fetchAll(PDO::FETCH_ASSOC);

if (empty($exhibitions_paintings)) {
    $page_type = 'exhibition_new';
    $sql = "SELECT p.image_url, p.title_ru, p.title_en, p.title_de, epl.id
        FROM Paintings p
        JOIN exhibitions_paintings_list epl ON p.painting_id = epl.painting_id
        WHERE epl.exhibition_id = ?;
    ";
    $stmt = $conn->prepare($sql);
    $stmt->execute([ $exhibition_id ]);
    $exhibitions_paintings = $stmt->fetchAll(PDO::FETCH_ASSOC);
} 


require_once 'templates/exhibition_gallery.php';
require_once 'templates/fullscreen_image_container.php'; // Fullscreen image


require_once 'templates/footer.php'; 

<?php
// HEADER и параметры
$page_title = "добавление картин";
$page_styles = ".apply_btn { display: none; }";
require_once 'templates/header_page.php';


// GET параметры
$page_type = $_GET["page_type"];
$page_url = $_GET["page_url"];

// $exhibition_id (из БД или из GET):
$exhibition_id = '';
if (isset($_GET["title_ru"])) {
    $exhibition_title = $_GET["title_ru"];
    $sql = "SELECT exhibition_id FROM exhibitions WHERE title_ru = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([ $exhibition_title ]);
    $exhibition_id = $stmt->fetchColumn();

} elseif (isset($_GET["exhibition_id"])) {
    $exhibition_id = $_GET["exhibition_id"];
}


// PAGE header
$header_name = [
    "solo" => wrapWordInSpans("Персональная"),
    "theme" => wrapWordInSpans("Тематическая"),
];
$page_header = "<nav class='wrap nav-page nav-page_experimental'><div class='nav-desktop'><div>$header_name[$page_type]</div></div></nav></header>";


// SQL список художников
$sql = "SELECT * FROM Artists ORDER BY last_name_$selectedLang";
$stmt = $conn->prepare($sql);
$stmt->execute();

// Извлекаем художников из галереи
$sql = "SELECT artist_id FROM exhibitions_paintings_list WHERE exhibition_id = ?";
$stmt_in_gallery = $conn->prepare($sql);
$stmt_in_gallery->execute([ $exhibition_id ]);
$artists_in_gallery = $stmt_in_gallery->fetchAll(PDO::FETCH_ASSOC);
$artists_in_gallery = (empty($artists_in_gallery)) ? [] : $artists_in_gallery[0];

// PAGE параметры
$firstRecord = '';

/* P A G E */ 
echo $page_header; // SHOW_Header
?>


<main class="flex textArticle_container wrap overflowItem_scroll">

    <div class="column list-scrolling_mask">
        <ul class="left-side overflowItem_scroll">
        <?php while ($data = $stmt->fetch(PDO::FETCH_ASSOC)): ?>
            
            <?php
            // Переменные списка
            $artist_list_id = $data['artist_id'];
            $artist_in_gallery = (in_array($artist_list_id, $artists_in_gallery)) ? 'style="background-color: #f7d0f1"' : '' ;
            $artist_link_url = $_SERVER['PHP_SELF'] . "?artist_id=$artist_list_id&page_type=$page_type&exhibition_id=$exhibition_id";
            $artist_name = $data["name_$selectedLang"];
            $artist_last_name = $data["last_name_$selectedLang"];
            $artist_middle_name = $data["middle_name_$selectedLang"];

            $firstRecord = ($firstRecord == '') ? $artist_list_id : $firstRecord;
            $isSelected = (
                (isset($_GET['artist_id']) && $_GET['artist_id'] == $artist_list_id) ||
                (!isset($_GET['artist_id']) && $firstRecord == $artist_list_id)
            );
            $style_selected = $isSelected ? 'style="font-weight: bold; opacity: .3; color: rgba(0, 0, 0, .7)"' : '';
            ?>

            <li <?=$artist_in_gallery?>>                
                <a id="<?=$artist_list_id?>" href="<?=$artist_link_url?>" <?=$style_selected?>>
                    <?=$artist_last_name?>
                    <?=preg_split('//u', $artist_name, -1, PREG_SPLIT_NO_EMPTY)[0]?>.<?=preg_split('//u', $artist_middle_name, -1, PREG_SPLIT_NO_EMPTY)[0]?>.
                </a>
            </li>
        <?php endwhile; ?>
        </ul>
    </div>
    

    <div class="column colomn-middle " style="width: 100%; padding-top: 0; align-items: flex-start;">
    
    <?php 
        // Извлекаем картины
        $artist_id = isset($_GET['artist_id']) ? $_GET['artist_id'] : $firstRecord;
        $sql = "SELECT * FROM Paintings WHERE artist_id = :artist_id";
        $paintingsStatement = $conn->prepare($sql);
        $paintingsStatement->bindParam(':artist_id', $artist_id, PDO::PARAM_INT);
        $paintingsStatement->execute();

        // Извлекаем картины уже добавленные в эту выставку
        $sql = "SELECT painting_id FROM exhibitions_paintings_list WHERE exhibition_id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->execute([ $exhibition_id ]);
        $paintings_in_gallery = $stmt->fetchAll(PDO::FETCH_ASSOC);
        $paintings_in_gallery = (empty($paintings_in_gallery)) ? [] : $paintings_in_gallery;
       
        function if_painting_in_gallery($painting_id_to_check, $array_to_check) {
            $count = count($array_to_check);
        
            for ($i = 0; $i < $count; $i++) {
                if ($array_to_check[$i]['painting_id'] == $painting_id_to_check) {
                    return true;
                }
            }
        
            return false;
        }      

    ?>  
        
        <form id="createExhibitionForm" method="post" action="exhibition_process_create.php">
            <div class="artists-list_paintings">
                
                <?php 
                    while ($paintingsData = $paintingsStatement->fetch(PDO::FETCH_ASSOC)):
                    // echo gettype($paintingsData['painting_id']);
                ?>
                    <div class="artists-list-picture_container <?=(if_painting_in_gallery($paintingsData['painting_id'], $paintings_in_gallery)) ? 'in_edit' : '' ;?>" data-painting-id="<?=$paintingsData['painting_id']?>">
                        <div><img src="img/paintings/<?=$paintingsData['image_url']?>" style="margin: 0 auto; cursor: pointer" alt=""></div>
                        <p>«<b><?=$paintingsData["title_$selectedLang"]?></b>»</p>
                    </div>
                <?php endwhile; ?>

            </div>
            <div class="exhibition_add_btns">

                <?= ($page_type != "solo") ? "<p>Прежде чем перейти к выбору картин другого автора,<br> не забудьте нажать на кнопку «<b>Сохранить и продолжить</b>»</p>": ''; ?>

                <span class="editor_btn" id="selectAll">Выбрать все</span>
                <span class="editor_btn" id="deselect" style="margin-right: 16px;">Отменить выбор</span>

                <?= ($page_type == "solo") 
                    ? '<span class="editor_btn warning_btn" id="create">Создать</span>'
                    : ' <span class="editor_btn" id="save">Сохранить и продолжить</span>
                        <span class="editor_btn warning_btn" id="create">Создать и завершить</span>'; 
                ?>
            </div>

            <input type="hidden" name="page_type" value="<?=$page_type?>">
            <input type="hidden" name="artist_id" value="<?=$artist_id?>">
            <input type="hidden" name="exhibition_id" value="<?=$exhibition_id?>">
        </form>

    </div>
</main>


<script src="js/exhibition-add.js"></script>
<?php require_once 'templates/footer.php' ?>

<?php
// HEADER и параметры
$page_title = "добавление картин";
$page_styles = ".apply_btn { display: none; }";
require_once 'templates/header_page.php';


// GET $exhibition_id
if (isset($_GET['exhibition_id'])) {
    $exhibition_id = $_GET['exhibition_id'];
    $_SESSION['exhibition_id'] = $exhibition_id;
} elseif (isset($_SESSION['exhibition_id'])) {
    $exhibition_id = $_SESSION['exhibition_id'];
}

// GET exhibition_type
$sql = "SELECT exhibition_type FROM exhibitions WHERE exhibition_id = :exhibition_id";
$stmt = $conn->prepare($sql);
$stmt->bindParam(':exhibition_id', $exhibition_id, PDO::PARAM_INT);
$stmt->execute();
$data = $stmt->fetch(PDO::FETCH_ASSOC);
$page_type = $data["exhibition_type"];


// PAGE header
$header_name = [
    "solo" => wrapWordInSpans("Персональная"),
    "theme" => wrapWordInSpans("Тематическая"),
];
$page_header = "<nav class='wrap nav-page nav-page_experimental'><div class='nav-desktop'><div>$header_name[$page_type]</div></div></nav></header>";


// Извлекаем художников из галереи
$sql = "SELECT artist_id FROM exhibitions_paintings_list WHERE exhibition_id = ?";
$stmt_in_gallery = $conn->prepare($sql);
$stmt_in_gallery->execute([ $exhibition_id ]);
$artists_in_gallery = $stmt_in_gallery->fetchAll(PDO::FETCH_ASSOC);
$artists_in_gallery = (empty($artists_in_gallery)) ? [] : array_column($artists_in_gallery, "artist_id");


    // SQL список художников
// Если что-то есть в $artists_in_gallery['artist_id'] (это выбранный художник)
// И выставка solo, то показываю выбранного художника, а не весь список
if(!empty($artists_in_gallery) && $page_type == "solo") {
    $sql = "SELECT * FROM Artists WHERE artist_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([ $artists_in_gallery['artist_id'] ]);

// Если выставка theme 
} else {
}

$sql = "SELECT * FROM Artists ORDER BY last_name_$selectedLang";
$stmt = $conn->prepare($sql);
$stmt->execute();


// PAGE параметры
$firstRecord = '';

/* P A G E */ 
echo $page_header; // SHOW_Header
?>


<main class="flex textArticle_container wrap overflowItem_scroll">

    <div class="column list-scrolling_mask">
        <ul class="left-side overflowItem_scroll">
        <?php while ($data = $stmt->fetch(PDO::FETCH_ASSOC)): ?>
            
            <?php
            // Переменные списка
            $artist_list_id = $data['artist_id'];
            $artist_in_gallery = (in_array($artist_list_id, $artists_in_gallery)) ? 'style="background-color: #f7d0f1"' : '' ;
            $artist_link_url = $_SERVER['PHP_SELF'] . "?artist_id=$artist_list_id&page_type=$page_type&exhibition_id=$exhibition_id";
            $artist_name = $data["name_$selectedLang"];
            $artist_last_name = $data["last_name_$selectedLang"];
            $artist_middle_name = $data["middle_name_$selectedLang"];

            $firstRecord = ($firstRecord == '') ? $artist_list_id : $firstRecord;
            $isSelected = (
                (isset($_GET['artist_id']) && $_GET['artist_id'] == $artist_list_id) ||
                (!isset($_GET['artist_id']) && $firstRecord == $artist_list_id)
            );
            $style_selected = $isSelected ? 'style="font-weight: bold; opacity: .3; color: rgba(0, 0, 0, .7)"' : '';
            ?>

            <li <?=$artist_in_gallery?>>
                <a id="<?=$artist_list_id?>" href="<?=$artist_link_url?>" <?=$style_selected?>>
                    <?=$artist_last_name?>
                    <?=preg_split('//u', $artist_name, -1, PREG_SPLIT_NO_EMPTY)[0]?>.<?=preg_split('//u', $artist_middle_name, -1, PREG_SPLIT_NO_EMPTY)[0]?>
                </a>
            </li>
        <?php endwhile; ?>
        </ul>
    </div>
    

    <div class="column colomn-middle " style="width: 100%; padding-top: 0; align-items: flex-start;">
    
    <?php 
        // Извлекаем все картины художника
        $artist_id = isset($_GET['artist_id']) ? $_GET['artist_id'] : $firstRecord;
        $sql = "SELECT * FROM Paintings WHERE artist_id = :artist_id";
        $paintingsStatement = $conn->prepare($sql);
        $paintingsStatement->bindParam(':artist_id', $artist_id, PDO::PARAM_INT);
        $paintingsStatement->execute();

        // Извлекаем картины уже добавленные в эту выставку
        $sql = "SELECT painting_id FROM exhibitions_paintings_list WHERE exhibition_id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->execute([ $exhibition_id ]);
        $paintings_in_gallery = $stmt->fetchAll(PDO::FETCH_ASSOC);
        $paintings_in_gallery = (empty($paintings_in_gallery)) ? [] : $paintings_in_gallery;
       
        // Функция проверки, наодится ли картина в выставке. Если ДА, то отправляю класс 'in_edit'. Если НЕТ, то нет
        // Используется ниже, для добавления рамки вокруг картины ('in_edit')
        function if_painting_in_gallery($painting_id_to_check, $array_to_check) {
            $count = count($array_to_check);
            for ($i = 0; $i < $count; $i++) {
                if ($array_to_check[$i]['painting_id'] == $painting_id_to_check) {
                    return 'in_edit';
                }
            }
            return '';
        }

    ?>  
        
        <form id="createExhibitionForm" method="post" action="exhibition_process_create.php">
            <div class="artists-list_paintings">
                
                <?php while ($paintingsData = $paintingsStatement->fetch(PDO::FETCH_ASSOC)): ?>
                    <div
                        class="artists-list-picture_container <?=(if_painting_in_gallery($paintingsData['painting_id'], $paintings_in_gallery))?>" 
                        data-painting-id="<?=$paintingsData['painting_id']?>">
                        <div><img 
                            src="img/paintings/<?=$paintingsData['image_url']?>" 
                            style="margin: 0 auto; cursor: pointer" 
                            alt="<?=$paintingsData["title_$selectedLang"]?>"
                        ></div>
                        <p>«<b><?=$paintingsData["title_$selectedLang"]?></b>»</p>
                    </div>
                <?php endwhile; ?>

            </div>


            <div class="exhibition_add_btns">

                <?= ($page_type != "solo") 
                    ? "<p>Если Вы отметили картины этого художника и хотите перейти к другому —<br> не забудьте нажать на кнопку «<b>Сохранить и продолжить</b>»</p>"
                    : ''; 
                ?>
                <a href="r-3_exhibition.php?exhibition_id=<?=$exhibition_id?>"><span class="editor_btn" style="margin-right: 16px;">Вернуться</span></a>
                <span class="editor_btn" id="selectAll">Выбрать все</span>
                <span class="editor_btn" id="deselect" style="margin-right: 16px;">Отменить выбор</span>

                <?= ($page_type == "solo") 
                    ? '<span class="editor_btn warning_btn" id="create">Создать</span>'
                    : ' <span class="editor_btn" style="margin-top: 4px" id="save">Сохранить и продолжить</span>
                        <span class="editor_btn warning_btn" style="margin-top: 4px" id="create">Создать и завершить</span>'; 
                ?>
            </div>

            <input type="hidden" name="page_type" value="<?=$page_type?>">
            <input type="hidden" name="artist_id" value="<?=$artist_id?>">
            <input type="hidden" name="exhibition_id" value="<?=$exhibition_id?>">
        </form>

    </div>
</main>


<script src="js/exhibition-add.js"></script>
<?php require_once 'templates/footer.php' ?>

<?php
require 'parts_php/dbconnection.php';

// Создание шаблона
$tmp_text = '<p>Описание</p>';
$exhibition_type = $_GET['page_type'];
$sql = "INSERT 
        INTO exhibitions (exhibition_type, description_ru, description_en, description_de) 
        VALUES (?, ?, ?, ?)";
$stmt = $conn->prepare($sql);
$stmt->execute([ $exhibition_type, $tmp_text, $tmp_text, $tmp_text ]);

// Получение ID
$sql = "SELECT exhibition_id 
        FROM exhibitions 
        ORDER BY exhibition_id DESC LIMIT 1";
$stmt = $conn->prepare($sql);
$stmt->execute();
$data = $stmt->fetch();
$exhibition_id = $data['exhibition_id'];

// Переход на выставку и отправка ID
header("Location: r-3_exhibition.php?exhibition_id=$exhibition_id"); 

exit();

<?php
require 'parts_php/dbconnection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {

    // Получение данных из формы
    $page_type = $_POST['page_type'];
    $artist_id = $_POST['artist_id'];
    $exhibition_id = $_POST['exhibition_id'];
    $selected_paintings = isset($_POST['selected_paintings']) ? explode(',',$_POST['selected_paintings']) : [];
    $continue_setup = isset($_POST['continue_setup']) ? true : false;

    $sql = "SELECT painting_id FROM exhibitions_paintings_list WHERE artist_id = ? AND exhibition_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([ $artist_id, $exhibition_id ]);
    $paintings_in_gallery = $stmt->fetchAll();
    
    // Очищаю галерею 
    foreach ($paintings_in_gallery as $selected_painting) {
        $sql = "DELETE FROM exhibitions_paintings_list WHERE exhibition_id = ? AND painting_id = ? AND artist_id = ?";
        $stmt = $conn->prepare($sql);
        $stmt->execute([$exhibition_id, $selected_painting["painting_id"], $artist_id]);
    }

    // Запись выбранных картин в таблицу exhibitions_paintings_list
    foreach ($selected_paintings as $painting_id) {
        $sql = "INSERT INTO exhibitions_paintings_list (exhibition_id, painting_id, artist_id) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->execute([ $exhibition_id, $painting_id, $artist_id ]);
    }

    // Редирект
    if ($continue_setup) {
        // Если "Сохранить и продолжить"
        // Отправляю обратно exhibition_id
        header("Location: exhibition_img_add.php?exhibition_id=$exhibition_id&page_type=$page_type");
    
    } else {
        // Если "Сохранить"
        header("Location: r-3_exhibition.php?exhibition_id=$exhibition_id"); // Завершаю создание
    }

    exit();
}

<?php
// Подключаю базу данных
require_once 'parts_php/dbconnection.php';
$exhibition_id = htmlentities($_GET["exhibition_id"]);

// Удаление изображения выставки
$sql = "SELECT exhibition_img, title_ru FROM exhibitions WHERE exhibition_id = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([ $exhibition_id ]);
$row = $stmt->fetch(PDO::FETCH_ASSOC);
$exhibition_img = $row['exhibition_img'];
$exhibition_title = $row['title_ru'];
unlink("img/exhibitions/$exhibition_img");

// Удаление самой выставки
$sql = "DELETE FROM exhibitions WHERE exhibition_id = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([ $exhibition_id ]);

// Удаление изображений выставки
$sql = "DELETE FROM exhibitions_paintings_list WHERE exhibition_id = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([ $exhibition_id ]);

header("location: r-3_exhibitions.php?delete_success=$exhibition_title");
exit();

<?php
$exhibition_id = htmlentities($_GET["exhibition_id"]);
$delete_id = htmlentities($_GET["delete_id"]);

// Подключаю базу данных
require_once 'parts_php/dbconnection.php';

// Удаление изображений выставки
$sql = "DELETE FROM exhibitions_paintings_list WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([ $delete_id ]);

header("location: exhibition_gallery.php?exhibition_id=$exhibition_id&delete_success=$exhibition_title");
exit();

<?php
session_start();
require 'parts_php/dbconnection.php';
$selectedLang = $_POST["lang"];
$exhibition_id = $_POST["exhibition_id"];


// И З О Б Р А Ж Е Н И Е
if(isset($_FILES['img']) && $_FILES["img"]["name"]!='') {
    $target_dir = "img/exhibitions/";

    // Если файл не стандартный, удалям его с сервера
    $sql = "SELECT exhibition_img FROM exhibitions WHERE exhibition_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([ $exhibition_id ]);
    $data = $stmt->fetch();
    if ($data["exhibition_img"] != 'exhibition-sample.jpg') {
        unlink($target_dir . $data["exhibition_img"]);
    }

    // Загружаю картинку на сервер
    $original_filename = $_FILES["img"]["name"];
    $random_filename = bin2hex(random_bytes(8)) . '_' . $original_filename;   
    $target_file = $target_dir . $random_filename;

    // Перемещение файла из временной директории в желаемую
    $tmp_filename = $_FILES["img"]["tmp_name"];
    move_uploaded_file($tmp_filename, $target_file);

    // Обновляю файл в БД
    $sql = "UPDATE exhibitions
            SET exhibition_img = ?
            WHERE exhibition_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([ $random_filename, $exhibition_id ]);
}


// З А Г О Л О В О К
if(isset($_POST["title"])) {
    $title = $_POST["title"];
    $sql = "UPDATE exhibitions
            SET title_$selectedLang = ?
            WHERE exhibition_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([ $title, $exhibition_id ]);
}


// О П И С А Н И Е
if(isset($_POST["description_editor"])) {
    $description = $_POST["description_editor"];
    $sql = "UPDATE exhibitions
            SET description_$selectedLang = ?
            WHERE exhibition_id = ?";
    $stmt = $conn->prepare($sql);
    $stmt->execute([ $description, $exhibition_id ]);
}


// Обратно на описание выставки
header("Location: r-3_exhibition.php?exhibition_id=$exhibition_id"); 

<?php

$exhibition_id = $_GET['exhibition_id'];



// Переход на выставку и отправка ID
header("Location: r-3_exhibition.php?exhibition_id=$exhibition_id"); 

<?php 
require_once 'templates/header_page.php';


$description_index = [
  'ru' => '
    <p>ИСКУССТВОВЕДЧЕСКИЙ ПОРТАЛ LBK ART FOUNDATION  НАЗВАН В ЧЕСТЬ ЛЬВА</p>
    <p>БОРИСОВИЧА КАЦЕНЕЛЬСОНА [ЛБК], ВНЁСШЕГО НЕИЗМЕРИМЫЙ ВКЛАД</p>
    <p>В КУЛЬТУРНУЮ ЖИЗНЬ САНК<span class="indexText_spb">Т-</span>ПЕТЕРБУРГА И ПЕРЕОСМЫСЛИВШЕГО РОЛЬ</p>
    <p>КОЛЛЕКЦИОНЕРА И ПРОСВЕТИТЕЛЯ В ИСТОРИИ СОВРЕМЕННОГО ИСКУССТВА</p>',
  'en' => '
    <p>THE ART HISTORICAL PORTAL LBK ART FOUNDATION IS DEDICATED TO</p>
    <p>THE MEMORY OF LEV BORISOVITCH KATZENELSON [LBK] WHO</p>
    <p>RESHAPED THE HISTORY OF ST-PETERSBURG CULTURE AND REDEFINED</p>
    <p>THE ROLE OF A CONTEMPORARY ART COLLECTOR AND EDUCATOR</p>',
  'de' => '
    <p style="letter-spacing: 0em;">DAS KUNSTWISSENSCHAFTLICHE PORTAL LBK ART FOUNDATION IST DEM ANDENKEN VON LEW</p>
    <p style="letter-spacing: 0em;">BORISSOVITSCH KATZENELSON [LBK] GEWIDMET, DER EINEN AUßERORDENTLICH GROßEN</p>
    <p style="letter-spacing: 0em;">BEITRAG ZUM KULTURLEBEN VON SANKT PETERSBUG GELEISTET SOWIE DIE ROLLE DES</p>
    <p style="letter-spacing: 0em;">SAMMLERS UND AUFKLÄRERS IN DER ZEITGENÖSSISCHEN KUNST NEU ERFUNDEN HAT</p>'
];
?>

    <div class="wrap flex header-line_2">
        <img src="img/LBK-AKT.svg">        
        <p class="index-description_mobile">ИСКУССТВОВЕДЧЕСКИЙ ПОРТАЛ LBK ART FOUNDATION  НАЗВАН В ЧЕСТЬ ЛЬВА БОРИСОВИЧА КАЦЕНЕЛЬСОНА [ЛБК] ВНЁСШЕГО НЕИЗМЕРИМЫЙ ВКЛАД В КУЛЬТУРНУЮ ЖИЗНЬ ПЕТЕРБУРГА И ПЕРЕОСМЫСЛИВШЕГО РОЛЬ КОЛЛЕКЦИОНЕРА И ПРОСВЕТИТЕЛЯ В ИСТОРИИ СОВРЕМЕННОГО ИСКУССТВА</p>    
        <div class="index-description_desctop"><?= $description_index[$selectedLang] ?></div>
    </div>

    <nav class="wrap nav-home">
        <ul class="flex nav-desktop">
            <?php              
                switch ($selectedLang) {
                    case "ru":
                        echo '
                        <li>
                            <a href="r-1_1_biography.php">БИОГРАФИЯ</a>
                            <ul class="nav-desktop_dropdown">
                                <li><a href="r-1_photogallery.php" style="letter-spacing: .2vh">ФОТОГРАФИИ</a></li>
                                <li><a href="r-1_gallery_create.php" style="letter-spacing: .3vh">ТВОРЧЕСТВО</a></li>
                                <li><a href="r-1_memoirs.php" style="letter-spacing: 0.9vh; left: .2vh; position: relative;">МЕМУАРЫ</a></li>
                                <li><a href="r-1_archiveLBK.php" style="letter-spacing: .6vh">АРХИВ ЛБК</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="r-2_1_collection.php">КОЛЛЕКЦИЯ</a>
                            <ul class="nav-desktop_dropdown">
                                <li><a href="r-2_catalog.php" style="letter-spacing: 1.03vh; left: .3vh; position: relative;">КАТАЛОГ</a></li>
                                <li><a href="r-2_articles.php" style="letter-spacing: 1.4vh; left: .5vh; position: relative;">СТАТЬИ</a></li>
                                <li><a href="r-2_literature.php" style="letter-spacing: .3vh">ЛИТЕРАТУРА</a></li>
                                <li><a href="r-2_painters.php" style="letter-spacing: .3vh">ХУДОЖНИКИ</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="r-3_exhibitions.php" style="letter-spacing: .9vh;">ВЫСТАВКИ</a>
                            <ul class="nav-desktop_dropdown">
                                <li><a href="r-3_rubinstein_descr.php" style="letter-spacing: .1vh">РУБИНШТЕЙНА</a></li>
                                <li><a href="r-3_personal.php" style="letter-spacing: .05vh">ПЕРСОНАЛЬНАЯ</a></li>
                                <li><a href="r-3_tematic.php" style="letter-spacing: .09vh">ТЕМАТИЧЕСКАЯ</a></li>
                                <li><a href="r-3_past.php" style="letter-spacing: .36vh; left: .2vh; position: relative; ">ПРОШЕДШИЕ</a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="r-4_research.php">ИЗЫСКАНИЯ</a>
                            <ul class="nav-desktop_dropdown">
                                <li><a href="r-4_lectures.php" style="letter-spacing: 1.4vh; left: .5vh; position: relative;">ЛЕКЦИИ</a></li>
                                <li><a href="r-4_meetings.php" style="letter-spacing: 1.1vh; left: .3vh; position: relative;">ВСТРЕЧИ</a></li>
                                <li><a href="r-4_news.php" style="letter-spacing: 1.05vh; left: .2vh; position: relative;">НОВОСТИ</a></li>
                                <li><a href="r-4_materials.php" style="letter-spacing: .53vh">МАТЕРИАЛЫ</a></li>
                            </ul>
                        </li>
                        ';
                        break;
                    case "en":
                        echo '
                        <li>
                          <a href="r-1_1_biography.php">
                            <span>B</span><span>I</span><span>O</span><span>G</span><span>R</span
                            ><span>A</span><span>P</span><span>H</span><span>Y</span>
                          </a>
                          <ul class="nav-desktop_dropdown">
                            <li>
                              <a href="r-1_photogallery.php"
                                ><span>P</span><span>H</span><span>O</span><span>T</span><span>O</span
                                ><span>G</span><span>R</span><span>A</span><span>P</span><span>H</span
                                ><span>S</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-1_gallery_create.php"
                                ><span>A</span><span>R</span><span>T</span><span>W</span><span>O</span
                                ><span>R</span><span>K</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-1_memoirs.php">
                                <span>M</span><span>E</span><span>M</span><span>O</span><span>I</span
                                ><span>R</span><span>S</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-1_archiveLBK.php"
                                ><span>A</span><span>R</span><span>C</span><span>H</span><span>I</span
                                ><span>V</span><span>E</span><span>&nbsp;</span><span>O</span
                                ><span>F</span><span>&nbsp;</span><span>L</span><span>B</span
                                ><span>K</span>
                              </a>
                            </li>
                          </ul>
                        </li>
                        <li>
                          <a href="r-2_1_collection.php"
                            ><span>C</span><span>O</span><span>L</span><span>L</span><span>E</span
                            ><span>C</span><span>T</span><span>I</span><span>O</span><span>N</span>
                          </a>
                          <ul class="nav-desktop_dropdown">
                            <li>
                              <a href="r-2_catalog.php"
                                ><span>C</span><span>A</span><span>T</span><span>A</span><span>L</span
                                ><span>O</span><span>G</span><span>U</span><span>E</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-2_articles.php"
                                ><span>A</span><span>R</span><span>T</span><span>I</span><span>C</span
                                ><span>L</span><span>E</span><span>S</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-2_literature.php"
                                ><span>B</span><span>I</span><span>B</span><span>L</span><span>I</span
                                ><span>O</span><span>G</span><span>R</span><span>A</span><span>P</span
                                ><span>H</span><span>Y</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-2_painters.php"
                                ><span>A</span><span>R</span><span>T</span><span>I</span><span>S</span
                                ><span>T</span><span>S</span>
                              </a>
                            </li>
                          </ul>
                        </li>
                        <li>
                          <a href="r-3_exhibitions.php"
                            ><span>E</span><span>X</span><span>H</span><span>I</span><span>B</span
                            ><span>I</span><span>T</span><span>I</span><span>O</span><span>N</span
                            ><span>S</span>
                          </a>
                          <ul class="nav-desktop_dropdown">
                            <li>
                              <a href="r-3_rubinstein_descr.php"
                                ><span>R</span><span>U</span><span>B</span><span>I</span><span>N</span
                                ><span>S</span><span>T</span><span>E</span><span>I</span><span>N</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-3_personal.php"
                                ><span>S</span><span>O</span><span>L</span><span>O</span
                                ><span>&nbsp;</span><span>S</span><span>H</span><span>O</span
                                ><span>W</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-3_tematic.php"><span>T</span><span>H</span><span>E</span><span>M</span><span>A</span><span>T</span><span>I</span><span>C</span></a>
                            </li>
                            <li>
                              <a href="r-3_past.php"
                                ><span>A</span><span>R</span><span>C</span><span>H</span><span>I</span
                                ><span>V</span><span>E</span>
                              </a>
                            </li>
                          </ul>
                        </li>
                        <li>
                          <a href="r-4_research.php"
                            ><span>R</span><span>E</span><span>F</span><span>L</span><span>E</span
                            ><span>C</span><span>T</span><span>I</span><span>O</span><span>N</span
                            ><span>S</span>
                          </a>
                          <ul class="nav-desktop_dropdown">
                            <li>
                              <a href="r-4_lectures.php"
                                ><span>L</span><span>E</span><span>C</span><span>T</span><span>U</span
                                ><span>R</span><span>E</span><span>S</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-4_meetings.php"
                                ><span>M</span><span>E</span><span>E</span><span>T</span><span>I</span
                                ><span>N</span><span>G</span><span>S</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-4_news.php"
                                ><span>N</span><span>E</span><span>W</span><span>S</span>
                              </a>
                            </li>
                            <li>
                              <a href="r-4_materials.php"
                                ><span>M</span><span>A</span><span>T</span><span>E</span><span>R</span
                                ><span>I</span><span>A</span><span>L</span><span>S</span>
                              </a>
                            </li>
                          </ul>
                        </li>
                        
                        <style>
                            .nav-desktop a {
                                display: flex;
                                justify-content: space-between;
                                letter-spacing: normal !important;
                            }
                            .nav-desktop ul li {
                                padding: 2px 2.5vh;
                            }
                        </style>
                        ';
                        break;
                    case "de":
                        echo '
                        <li>
                            <a href="r-1_1_biography.php"><span>W</span><span>E</span><span>R</span><span>D</span><span>E</span><span>G</span><span>A</span><span>N</span><span>G</span>
                            </a>
                            <ul class="nav-desktop_dropdown">
                                <li><a href="r-1_photogallery.php"><span>F</span><span>O</span><span>T</span><span>O</span><span>G</span><span>R</span><span>A</span><span>F</span><span>I</span><span>E</span><span>N</span>
                                </a></li>
                                <li><a href="r-1_gallery_create.php"><span>S</span><span>C</span><span>H</span><span>A</span><span>F</span><span>F</span><span>E</span><span>N</span>
                                </a></li>
                                <li><a href="r-1_memoirs.php"><span>M</span><span>E</span><span>M</span><span>O</span><span>I</span><span>R</span><span>E</span><span>N</span>
                                </a></li>
                                <li><a href="r-1_archiveLBK.php"><span>L</span><span>B</span><span>K</span><span>&nbsp;</span><span>A</span><span>R</span><span>C</span><span>H</span><span>I</span><span>V</span>
                                </a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="r-2_1_collection.php"><span>S</span><span>A</span><span>M</span><span>M</span><span>L</span><span>U</span><span>N</span><span>G</span></a>
                            <ul class="nav-desktop_dropdown">
                                <li><a href="r-2_catalog.php"><span>K</span><span>A</span><span>T</span><span>A</span><span>L</span><span>O</span><span>G</span></a></li>
                                <li><a href="r-2_articles.php"><span>A</span><span>R</span><span>T</span><span>I</span><span>K</span><span>E</span><span>L</span></a></li>
                                <li><a href="r-2_literature.php"><span>L</span><span>I</span><span>T</span><span>E</span><span>R</span><span>A</span><span>T</span><span>U</span><span>R</span>
                                </a></li>
                                <li><a href="r-2_painters.php"><span>K</span><span>Ü</span><span>N</span><span>S</span><span>T</span><span>L</span><span>E</span><span>R</span></a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="r-3_exhibitions.php"><span>A</span><span class="shrinked-letter">U</span><span>S</span><span>S</span><span>T</span><span class="shrinked-letter">E</span><span class="shrinked-letter">L</span><span class="shrinked-letter">L</span><span class="shrinked-letter">U</span><span>N</span><span>G</span><span class="shrinked-letter">E</span><span>N</span></a>
                            <ul class="nav-desktop_dropdown">
                                <li><a href="r-3_rubinstein_descr.php"><span>R</span><span>U</span><span>B</span><span>I</span><span>N</span><span>S</span><span>T</span><span>E</span><span>I</span><span>N</span>
                                </a></li>
                                <li><a href="r-3_personal.php"><span>P</span><span>E</span><span>R</span><span>S</span><span>O</span><span>N</span><span>A</span><span>L</span><span>E</span>
                                </a></li>
                                <li><a href="r-3_tematic.php"><span>T</span><span>H</span><span>E</span><span>M</span><span>A</span><span>T</span><span>I</span><span>S</span><span>C</span><span>H</span></a></li>
                                <li><a href="r-3_past.php"><span>A</span><span>R</span><span>C</span><span>H</span><span>I</span><span>V</span>
                                </a></li>
                            </ul>
                        </li>
                        <li>
                            <a href="r-4_research.php"><span>S</span><span>T</span><span>U</span><span>D</span><span>I</span><span>E</span><span>N</span>
                            </a>
                            <ul class="nav-desktop_dropdown">
                                <li><a href="r-4_lectures.php"><span>V</span><span>O</span><span>R</span><span>T</span><span>R</span><span>Ā</span><span>G</span><span>E</span>
                                </a></li>
                                <li><a href="r-4_meetings.php"><span>T</span><span>R</span><span>E</span><span>F</span><span>F</span><span>E</span><span>N</span></a></li>
                                <li><a href="r-4_news.php"><span>N</span><span>E</span><span>U</span><span>E</span><span>S</span>
                                </a></li>
                                <li><a href="r-4_materials.php"><span>M</span><span>A</span><span>T</span><span>E</span><span>R</span><span>I</span><span>A</span><span>L</span><span>I</span><span>E</span><span>N</span>
                                </a></li>
                            </ul>
                        </li>
                        
                        
                        <style>
                            .nav-desktop a {
                                display: flex;
                                justify-content: space-between;
                                letter-spacing: normal !important;
                            }
                            .nav-desktop ul li {
                                padding: 2px 2.5vh;
                            }
                        </style>
                        ';
                        break;
                }
            ?>
        </ul>
    </nav>
</header>

<section class="main_index"></section>

<footer>
    <div id="footer_image">
        <ul class="wrap flex">
            <li>&nbsp;</li>
            <li>&nbsp;</li>
            <li style="position: relative;z-index: 1;"><img src="img/RIVER-painter.gif" alt=""></li>
            <li class="footer_copyrite"><span>&copy;&nbsp;copyrite</span></li>
        </ul>            
    </div>
    <p>&nbsp;</p>
</footer>

<style>
    body {
        background: #4a4545;
    }
    header {
        background: white
    }
</style>
<script src="js/close-nav-dropdowns.js"></script>


<?php require_once 'templates/footer.php' ?>

<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LBK art foundation</title>
    <link rel="shortcut icon" href="/img/LBK-AKT.svg" type="image/x-icon">
</head>
<body>    
lbkoperator
    <!-- Вход на сайт -->
    <form action="actions/login-action.php" method="post">

        <!-- Сообщение об ошибке или успехе -->
        <?php
            if (isset($_GET['message'])) {
                $message = urldecode($_GET['message']);
                switch ($message) {
                    case "Неправильный пароль":
                        echo "<p class='error'>" . $message . "</p>";
                        break;
                    case "Письмо успешно отправлено. Если его нет во «Входящих», проверьте папку «Спам».":
                        echo "<p class='ok'>" . $message . "</p>";
                        break;
                    case "Ошибка отправки":
                        echo "<p class='error'>" . $message . "</p>";
                        break;
                }
            }
        ?>

        <div>
            <input type="password" name="password" placeholder="Пароль" value="lbkoperator" required>
        </div>
        <div>
            <input type="submit" value="Войти в редактор">
        </div>
    </form>
    
    <!-- Вспомнить пароль -->
    <p>Если забыли пароль, можете <a href="actions/sendUnamePass.php">нажать на ссылку</a>. Пароль будет отправлен на электронную почту</p>

    <style>
        @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500&display=swap');
        * {
            box-sizing: border-box;
            font-family: 'Open Sans', sans-serif;
        }
        body {
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }
        form {
            width: 300px;
            margin-bottom: 20px;
            padding: 20px;
        }

        form div {
            margin-bottom: 10px;
        }

        input[type="password"] {
            width: 100%;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
        }

        input[type="submit"] {
            display: block;
            width: 100%;
            padding: 10px;
            font-size: 16px;
            font-weight: bold;
            background-color: #686B9B;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        input[type="submit"]:hover {
            background-color: #a59484;
        }

        p {
            margin-top: 20px;
            font-size: 14px;
            text-align: center;
        }

        p a {
            color: #4c2e26;
            text-decoration: none;
        }

        p a:hover {
            text-decoration: underline;
        }
        .error {
            color: red;
            font-weight: bold;
        }
        .ok {
            color: #4CAF50;
            font-weight: bold;
        }
    </style>
</body>
</html>

<?php session_start(); ?>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LBK art foundation</title>
    <link rel="shortcut icon" href="/img/LBK-AKT.svg" type="image/x-icon">
</head>
<body>


        <a href="index.php">На главную</a>
        <a href="artists_list.php">К списку художников</a>

    
    

    <style>
        @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500&display=swap');
        * {
            box-sizing: border-box;
            font-family: 'Open Sans', sans-serif;
        }
        body {
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            /* flex-direction: column; */
            gap: 20px;
        }        

        a {
            /* display: block; */
            /* width: 100%; */
            padding: 10px;
            font-size: 16px;
            /* font-weight: bold; */
            text-decoration: none;
            background-color: #686B9B;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        a:hover {
            background-color: #a59484;
        }

    </style>
</body>
</html>

<?php
session_start();
session_unset();
session_destroy();
header('location: index.php');
?>

<?php
$page_menu = [
    "БИОГРАФИЯ",
    "ФОТОГРАФИИ",
    "ТВОРЧЕСТВО",
    "МЕМУАРЫ",
    "АРХИВ ЛБК"
];
require_once 'templates/header_page_menu.php';


$sql_table = 'table_smalltexts';
$page_type = "biography";
$sql = "SELECT * FROM $sql_table WHERE page_type = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$page_type]);
$data = $stmt->fetch(PDO::FETCH_ASSOC);

$data_title = $data["figcaption_$selectedLang"];
$data_img = $sql_table . "/" . $data["figure_url"];
$data_description = $data["description_$selectedLang"];

require_once 'templates/text_page_small.php';


require_once 'templates/footer.php';

<?php 
$page_menu = [
    "АРХИВ ЛБК",
    "БИОГРАФИЯ",
    "ФОТОГРАФИИ",
    "МЕМУАРЫ",
    "ТВОРЧЕСТВО",
];
require_once 'templates/header_page_menu.php';

// Набор параметров страницы 
$page_url = $menuItems['АРХИВ ЛБК']['link'];
$page_type = 'archiveLBK';
require_once 'templates/gallery_page.php';


require_once 'templates/footer.php';

<?php 
$page_menu = [
    "ТВОРЧЕСТВО",
    "БИОГРАФИЯ",
    "ФОТОГРАФИИ",
    "МЕМУАРЫ",
    "АРХИВ ЛБК"
];
require_once 'templates/header_page_menu.php';

// Набор параметров страницы 
// $page_url = 'r-1_gallery_create';
$page_url = $menuItems['ТВОРЧЕСТВО']['link'];
$page_type = 'artwork';
require_once 'templates/gallery_page.php';


require_once 'templates/footer.php';

<?php 
// Меню и шапка
$page_menu = [
    "МЕМУАРЫ",
    "ФОТОГРАФИИ",
    "ТВОРЧЕСТВО",
    "БИОГРАФИЯ",
    "АРХИВ ЛБК"
];
require_once 'templates/header_page_menu.php';

// Параметры страницы и шаблон 
$page_url = $menuItems["МЕМУАРЫ"]['link'];
$editor_btn_class = ($_SESSION['login'])?"edit-btn":"";
$page_type = 'memoirs';
require_once 'templates/texts_page.php';

// Футер 
require_once 'templates/footer.php';

<?php 
$page_menu = [
    "ФОТОГРАФИИ",
    "БИОГРАФИЯ",
    "ТВОРЧЕСТВО",
    "МЕМУАРЫ",
    "АРХИВ ЛБК"
];
require_once 'templates/header_page_menu.php';


$page_url = $menuItems['ФОТОГРАФИИ']['link'];
$page_type = 'photographs';
require_once 'templates/gallery_page.php';


require_once 'templates/footer.php';

<?php
$page_menu = [
    "КОЛЛЕКЦИЯ",
    "КАТАЛОГ",
    "СТАТЬИ",
    "ЛИТЕРАТУРА",
    "ХУДОЖНИКИ"
];
require_once 'templates/header_page_menu.php';


$sql_table = 'table_smalltexts';
$page_type = "collection";
$sql = "SELECT * FROM $sql_table WHERE page_type = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$page_type]);
$data = $stmt->fetch(PDO::FETCH_ASSOC);

$data_title = $data["figcaption_$selectedLang"];
$data_img = $sql_table . "/" . $data["figure_url"];
$data_description = $data["description_$selectedLang"];

require_once 'templates/text_page_small.php';


require_once 'templates/footer.php';

<?php 
$page_menu = [
    "СТАТЬИ",
    "КАТАЛОГ",
    "КОЛЛЕКЦИЯ",
    "ЛИТЕРАТУРА",
    "ХУДОЖНИКИ",
];
require_once 'templates/header_page_menu.php';

// Параметры страницы и шаблон 
$page_url = $menuItems["СТАТЬИ"]['link'];
$editor_btn_class = ($_SESSION['login'])?"edit-btn":"";
$page_type = 'articles';
require_once 'templates/texts_page.php';


// Футер 
require_once 'templates/footer.php';

<?php
$page_menu = [
    "ХУДОЖНИКИ",
    "КОЛЛЕКЦИЯ",
    "СТАТЬИ",
    "ЛИТЕРАТУРА",
    "КАТАЛОГ",
];
require_once 'templates/header_page_menu.php';

// Кнопки
$works_btn_text = [
    'ru' => 'РАБОТЫ',
    'en' => 'Artworks',
    'de' => 'Werke'
];
$artists_btn_text = [
    [ 
    'ru' => 'ПЕРЕЧЕНЬ',
    'en' => 'List of',
    'de' => 'Liste der'
    ],
    [ 
    'ru' => 'ХУДОЖНИКОВ',
    'en' => 'Artists',
    'de' => 'Künstler'
    ]
];

// Получаем художника
if (isset($_GET['artist_id'])) {
    $artist_id = $_GET['artist_id'];
    $_SESSION['catalog_artist_id'] = $artist_id;
} elseif (isset($_SESSION['catalog_artist_id'])) {
    $artist_id = $_SESSION['catalog_artist_id'];
}

$sql = "SELECT * FROM Artists WHERE artist_id = :artist_id";
$stmt = $conn->prepare($sql);
$stmt->bindParam(':artist_id', $artist_id);
$stmt->execute();
$artistData = $stmt->fetch(PDO::FETCH_ASSOC);

// Следующий художник
$sqlNext = "SELECT artist_id FROM Artists WHERE artist_id > :artist_id AND in_catalog = 'on' ORDER BY artist_id ASC LIMIT 1";
$stmtNext = $conn->prepare($sqlNext);
$stmtNext->bindParam(':artist_id', $artist_id);
$stmtNext->execute();
$nextArtistData = $stmtNext->fetch(PDO::FETCH_ASSOC);
if (!$nextArtistData) {
    // Если следующей записи нет, выбираем первую запись
    $sqlFirst = "SELECT artist_id FROM Artists WHERE in_catalog = 'on' ORDER BY artist_id ASC LIMIT 1";
    $stmtFirst = $conn->prepare($sqlFirst);
    $stmtFirst->execute();
    $nextArtistData = $stmtFirst->fetch(PDO::FETCH_ASSOC);
}
$nextArtistId = $nextArtistData['artist_id'];

// Предыдущий художник
$sqlPrev = "SELECT artist_id FROM Artists WHERE artist_id < :artist_id AND in_catalog = 'on' ORDER BY artist_id DESC LIMIT 1";
$stmtPrev = $conn->prepare($sqlPrev);
$stmtPrev->bindParam(':artist_id', $artist_id);
$stmtPrev->execute();
$prevArtistData = $stmtPrev->fetch(PDO::FETCH_ASSOC);

if (!$prevArtistData) {
    // Если предыдущей записи нет, выбираем последнюю запись
    $sqlLast = "SELECT artist_id FROM Artists WHERE in_catalog = 'on' ORDER BY artist_id DESC LIMIT 1";
    $stmtLast = $conn->prepare($sqlLast);
    $stmtLast->execute();
    $prevArtistData = $stmtLast->fetch(PDO::FETCH_ASSOC);
}
$prevArtistId = $prevArtistData['artist_id'];
?>


<main class="flex wrap overflowItem_hide">
    <div>
        <figure class="left-side">
            <img src='img/painters-portrets/<?=$artistData["portrait_image_url"]?>' alt='<?=$artistData["name_$selectedLang"]?>' >
            <figcaption style="text-align: center; width: 27.34vh; margin-right: 5.21vh;">
                <?=$artistData["last_name_$selectedLang"]?><br>
                <?=$artistData["name_$selectedLang"]?><br>
                <?=$artistData["middle_name_$selectedLang"]?><br>
                <?=$artistData["birth_year"]?> — <?=$artistData["death_year"]?>
            </figcaption>
        </figure>
        
        <div class="artist_descr">
            <a href="r-2_catalog-artist.php"><p class="artist_descr--works_btn"><?=wrapWordInSpans($works_btn_text[$selectedLang])?></p></a>
            <a href="r-2_painters.php">
                <p class="artist_descr--artists_btn"><?=wrapWordInSpans($artists_btn_text[0][$selectedLang])?></p>
                <p class="artist_descr--artists_btn"><?=wrapWordInSpans($artists_btn_text[1][$selectedLang])?></p>
            </a>
            
            <!-- Стрелки-переключатели -->
            <div class="arrow arrow_left">
                <a href="r-2_catalog-artist_descr.php?artist_id=<?=$nextArtistId?>">
                    <svg xmlns="http://www.w3.org/2000/svg" style="width: 1vh" width="12.21" height="40.119" viewBox="0 0 12.21 40.119">
                        <path id="arrow_2" data-name="arrow 2" d="M4285.292-642.669,4275.1-622.934l10.194,19.46" transform="translate(-4273.97 643.128)" fill="none" stroke="#959393" stroke-width="2"></path>
                    </svg>
                </a>
            </div>
            <div class="arrow arrow_right">
                <a href="r-2_catalog-artist_descr.php?artist_id=<?=$prevArtistId?>">
                    <svg xmlns="http://www.w3.org/2000/svg" style="width: 1vh" width="12.21" height="40.119" viewBox="0 0 12.21 40.119">
                        <path id="arrow_1" data-name="arrow 1" d="M4275.1-642.669l10.194,19.735-10.194,19.46" transform="translate(-4274.209 643.128)" fill="none" stroke="#959393" stroke-width="2"></path>
                    </svg>
                </a>
            </div>                
        </div>
    </div>

    <section class="list-scrolling_mask">
        <div class="overflowItem_scroll" id="description_container">

            <div <?= ($_SESSION['login'])? 'class="edit-btn" id="description"' : "" ;?>>
                <?= $artistData["description_$selectedLang"] ?>
            </div>
    
            <?php if ($_SESSION['login']): ?>
                <div id="editor_container">
                    <textarea class="editor_area" id="description_editor" name="description_editor">
                        <?= $artistData["description_$selectedLang"] ?>
                    </textarea>
                </div>
            <?php endif; ?>

        </div>
    </section>
</main>


<?php if ($_SESSION['login']): ?>
    <script src="https://cdn.tiny.cloud/1/a3mbri168ms9brn32tu5dc85nsuvui4l3sbkxjugzag3gljc/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="js/TinyMCEEditor.js"></script> 
    <script src="js/ApplyButtonManager.js"></script>
    <script src="js/update-textpage.js"></script>
<?php endif; ?>


<?php require_once 'templates/footer.php' ?>

<?php 
$page_menu = [
    "КАТАЛОГ",
    "КОЛЛЕКЦИЯ",
    "СТАТЬИ",
    "ЛИТЕРАТУРА",
    "ХУДОЖНИКИ"
];
require_once 'templates/header_page_menu.php';

// Кнопки
$picture_descr_text = [
    'ru' => 'ПОДРОБНЕЕ',
    'en' => 'Annotation',
    'de' => 'Mehr erfahren'
];
$artist_descr_text = [
    'ru' => 'О ХУДОЖНИКЕ',
    'en' => 'About the Artist',
    'de' => 'Über den Künstler'
];
$painting_names = [
    'Год создания' => [
        'ru' => 'Год создания',
        'en' => 'Date',
        'de' => ''
    ],
    'Размеры' => [
        'ru' => 'Размеры',
        'en' => 'Dimensions',
        'de' => ''
    ],
    'Материал' => [
        'ru' => 'Материал, техника',
        'en' => 'Technique, material',
        'de' => ''
    ],
    'Номер' => [
        'ru' => 'Номер по каталогу',
        'en' => 'Catalogue numbe',
        'de' => ''
    ]
];

$page_type = 'Artists';
$catalog_artist = TRUE;
if (isset($_GET['artist_id'])) {
    $artist_id = $_GET['artist_id'];
    $_SESSION['catalog_artist_id'] = $artist_id;
} elseif (isset($_SESSION['catalog_artist_id'])) {
    $artist_id = $_SESSION['catalog_artist_id'];
} else {
    $artist_id = 1;
}
?>

    <main class="flex wrap gallery-3items collection-catalog">
        
        <!-- Список художников -->
        <?php include_once 'templates/catalog_page_artistsList.php' ?>

        <div class="column colomn-middle">
            <?php
            // Получаем художника
            $sql = "SELECT * FROM Artists WHERE artist_id = :artist_id";
            $stmt = $conn->prepare($sql);
            $stmt->bindParam(':artist_id', $artist_id);
            $stmt->execute();
            $artistData = $stmt->fetch(PDO::FETCH_ASSOC);

            // Получаем картины художника
            $sql = "SELECT * FROM Paintings WHERE artist_id = :artist_id";
            $stmt = $conn->prepare($sql);
            $stmt->bindParam(':artist_id', $artist_id, PDO::PARAM_INT);
            $stmt->execute();
            $paintingsData = $stmt->fetchAll(PDO::FETCH_ASSOC);
            ?>

            <!-- Имя художника над картиной -->
            <h3><?=$artistData["last_name_$selectedLang"]?> <?=preg_split('//u', $artistData["name_$selectedLang"], -1, PREG_SPLIT_NO_EMPTY)[0]?>.<?=preg_split('//u', $artistData["middle_name_$selectedLang"], -1, PREG_SPLIT_NO_EMPTY)[0]?>.</h3>

            <div class="img_container">

                <!-- Изображения картин -->
                <div class="gallery">
                    <?php for($i = 0; $i < count($paintingsData); $i++): ?>
                        <div <?= ($i==0)?'class="gallery-active"':''; // Если это первая картина, она будет показана ?>>
                            <img class="image" src="img/paintings/<?=$paintingsData[$i]['image_url']?>" >
                            <p class="caption"><?=$paintingsData[$i]["title_$selectedLang"]?></p>
                        </div>
                    <?php endfor; ?>
                </div>
                
                <!-- Стрелки для перелистывания -->
                <?php if(count($paintingsData) != 1): ?>
                <div class="arrow arrow_left">
                    <svg xmlns="http://www.w3.org/2000/svg" width="12.21" height="40.119" viewBox="0 0 12.21 40.119">
                        <path id="Контур_2" data-name="Контур 2" d="M4285.292-642.669,4275.1-622.934l10.194,19.46" transform="translate(-4273.97 643.128)" fill="none" stroke="#959393" stroke-width="2"/>
                    </svg>
                </div>
    
                <div class="arrow arrow_right">
                    <svg xmlns="http://www.w3.org/2000/svg" width="12.21" height="40.119" viewBox="0 0 12.21 40.119">
                        <path id="Контур_1" data-name="Контур 1" d="M4275.1-642.669l10.194,19.735-10.194,19.46" transform="translate(-4274.209 643.128)" fill="none" stroke="#959393" stroke-width="2"/>
                      </svg>
                </div>
                <?php endif; ?>
            </div>     
        </div>

        <div class="column">

            <!-- Данные художника -->
            <div class="painting-artist">
                <p><?=$artistData["last_name_$selectedLang"]?></p>
                <p><?=$artistData["name_$selectedLang"]?></p>
                <p><?=$artistData["middle_name_$selectedLang"]?></p>
                <p><?=$artistData['birth_year']?> — <?=$artistData['death_year']?></p>
            </div>

            <div class="painting-description">
                
                <!-- Описания картин выбранного худлжника -->
                <?php for($i = 0; $i < count($paintingsData); $i++): ?>
                <div <?= ($i==0)?'class="gallery-active"':''; // Если это первая картина, ее описание будет показано ?>>
                    <p><?=$paintingsData[$i]["title_$selectedLang"]?></p>

                    <p><b><?=$painting_names['Год создания'][$selectedLang]?>:</b></p>
                    <p><?=$paintingsData[$i]['creation_year']?></p>

                    <p><b><?=$painting_names['Размеры'][$selectedLang]?>:</b></p>
                    <p><?=$paintingsData[$i]['size']?></p>

                    <p><b><?=$painting_names['Материал'][$selectedLang]?>:</b></p>
                    <p><?=$paintingsData[$i]["technique_$selectedLang"]?></p>

                    <p><b><?=$painting_names['Номер'][$selectedLang]?>:</b></p>
                    <p><?=$paintingsData[$i]['catalog_number']?></p>

                    <p class="learn-more_btn"><a href="r-2_catalog-picture_descr.php?painting_id=<?=$paintingsData[$i]['painting_id']?>"><?=$picture_descr_text[$selectedLang]?></a></p>
                </div>
                <?php endfor; ?>
            </div>

            <hr>
            <p class="about-painter_btn"><a href="r-2_catalog-artist_descr.php?artist_id=<?=$artist_id?>"><?=$artist_descr_text[$selectedLang]?></a></p>
        </div>

    </main>

<!-- Скрипт — прокрутка галереи -->
<?php if(count($paintingsData) != 1): ?> <script src="js/catalog-artist-gallery.js"></script> <?php endif; ?>
<?php require_once 'templates/fullscreen_image_container.php' ?>
<?php require_once 'templates/footer.php' ?>

<?php
$page_menu = [
    "ХУДОЖНИКИ",
    "КОЛЛЕКЦИЯ",
    "СТАТЬИ",
    "ЛИТЕРАТУРА",
    "КАТАЛОГ",
];
require_once 'templates/header_page_menu.php';

// Кнопки
$works_btn_text = [
    'ru' => 'РАБОТЫ',
    'en' => 'Artworks',
    'de' => 'Werke'
];

$painting_names = [
    'Год создания' => [
        'ru' => 'Год создания',
        'en' => 'Date',
        'de' => ''
    ],
    'Размеры' => [
        'ru' => 'Размеры',
        'en' => 'Dimensions',
        'de' => ''
    ],
    'Материал' => [
        'ru' => 'Материал, техника',
        'en' => 'Technique, material',
        'de' => ''
    ],
    'Номер' => [
        'ru' => 'По каталогу',
        'en' => 'Catalogue number',
        'de' => ''
    ]
];


// Получаем художника
$artist_id = $_SESSION['catalog_artist_id']; // должен сохраниться из предыдущей страницы. Если нет, то:
// if (isset($_GET['artist_id'])) {
//     $artist_id = $_GET['artist_id'];
//     $_SESSION['catalog_artist_id'] = $artist_id;
// } elseif (isset($_SESSION['catalog_artist_id'])) {
//     $artist_id = $_SESSION['catalog_artist_id'];
// }

// Получаем картину
// Настраиваем переключатель языков
if (isset($_GET['painting_id'])) {
    $painting_id = $_GET['painting_id'];
    $_SESSION['catalog_painting_id'] = $painting_id;
} elseif (isset($_SESSION['catalog_painting_id'])) {
    $painting_id = $_SESSION['catalog_painting_id'];
}

$sql = "SELECT * FROM Paintings WHERE painting_id = :painting_id";
$stmt = $conn->prepare($sql);
$stmt->bindParam(':painting_id', $painting_id);
$stmt->execute();
$paintingData = $stmt->fetch(PDO::FETCH_ASSOC);

// Следующая картина
$sqlNext = "SELECT painting_id FROM Paintings WHERE painting_id > :painting_id AND artist_id = :artist_id ORDER BY painting_id ASC LIMIT 1";
$stmtNext = $conn->prepare($sqlNext);
$stmtNext->bindParam(':painting_id', $painting_id);
$stmtNext->bindParam(':artist_id', $artist_id);
$stmtNext->execute();
$nextPainingData = $stmtNext->fetch(PDO::FETCH_ASSOC);
if (!$nextPainingData) {
    // Если следующей записи нет, выбираем первую запись
    $sqlFirst = "SELECT painting_id FROM Paintings WHERE artist_id = :artist_id ORDER BY painting_id ASC LIMIT 1";
    $stmtFirst = $conn->prepare($sqlFirst);
    $stmtFirst->bindParam(':artist_id', $artist_id);
    $stmtFirst->execute();
    $nextPainingData = $stmtFirst->fetch(PDO::FETCH_ASSOC);
}
$next_paining_id = $nextPainingData['painting_id'];

// Предыдущая картина
$sqlPrev = "SELECT painting_id FROM Paintings WHERE painting_id < :painting_id AND artist_id = :artist_id ORDER BY painting_id DESC LIMIT 1";
$stmtPrev = $conn->prepare($sqlPrev);
$stmtPrev->bindParam(':painting_id', $painting_id);
$stmtPrev->bindParam(':artist_id', $artist_id);
$stmtPrev->execute();
$prevPainingData = $stmtPrev->fetch(PDO::FETCH_ASSOC);

if (!$prevPainingData) {
    // Если предыдущей записи нет, выбираем последнюю запись
    $sqlLast = "SELECT painting_id FROM Paintings WHERE artist_id = :artist_id ORDER BY painting_id DESC LIMIT 1";
    $stmtLast = $conn->prepare($sqlLast);
    $stmtLast->bindParam(':artist_id', $artist_id);
    $stmtLast->execute();
    $prevPainingData = $stmtLast->fetch(PDO::FETCH_ASSOC);
}
$prev_paining_id = $prevPainingData['painting_id'];
?>

<main class="flex wrap overflowItem_hide">
    <div>
        <figure class="left-side painting-description_imgContainer">
            <img src="img/paintings/<?= $paintingData['image_url'] ?>" alt="<?= $paintingData["$selectedLang"] ?>">
        </figure>
        
        <div class="painting-description" style="width: 27.34vh;">
            <p><?= $paintingData["title_$selectedLang"] ?></p>
            <p><b style="color: rgba(0, 0, 0, .7);"><?=$painting_names['Год создания'][$selectedLang]?>:</b> <?= $paintingData['creation_year'] ?></p>
            <p><b style="color: rgba(0, 0, 0, .7);"><?=$painting_names['Размеры'][$selectedLang]?>:</b> <?= $paintingData['size'] ?></p>
            <p><b style="color: rgba(0, 0, 0, .7);"><?=$painting_names['Материал'][$selectedLang]?>:</b></p>
            <p><?= $paintingData["technique_$selectedLang"] ?></p>
            <p><b style="color: rgba(0, 0, 0, .7);"><?=$painting_names['Номер'][$selectedLang]?>:&nbsp;&nbsp;</b><?= $paintingData['catalog_number'] ?></p>
        </div>
        
        <div class="picture_descr" style="margin-top: calc(10 / 768 * 100vh);">
            <a href="r-2_catalog-artist.php"><p style="margin-top: 1.5vh; text-transform: uppercase"><?=wrapWordInSpans($works_btn_text[$selectedLang])?></p></a>                
            
            <!-- Стрелки-переключатели -->
            <div class="arrow arrow_left">
                <a href="r-2_catalog-picture_descr.php?painting_id=<?=$next_paining_id = $nextPainingData['painting_id'];
?>">
                    <svg xmlns="http://www.w3.org/2000/svg" style="width: 1vh" width="12.21" height="40.119" viewBox="0 0 12.21 40.119">
                        <path id="arrow_2" data-name="arrow 2" d="M4285.292-642.669,4275.1-622.934l10.194,19.46" transform="translate(-4273.97 643.128)" fill="none" stroke="#959393" stroke-width="2"></path>
                    </svg>
                </a>
            </div>
            <div class="arrow arrow_right">
                <a href="r-2_catalog-picture_descr.php?painting_id=<?=$prev_paining_id?>">
                    <svg xmlns="http://www.w3.org/2000/svg" style="width: 1vh" width="12.21" height="40.119" viewBox="0 0 12.21 40.119">
                        <path id="arrow_1" data-name="arrow 1" d="M4275.1-642.669l10.194,19.735-10.194,19.46" transform="translate(-4274.209 643.128)" fill="none" stroke="#959393" stroke-width="2"></path>
                    </svg>
                </a>
            </div>   
        </div>
    </div>

    <section class="list-scrolling_mask">
        <div class="overflowItem_scroll" id="description_container">
            
            <div <?= ($_SESSION['login'])? 'class="edit-btn" id="description"' : "" ;?>>
                <?= $paintingData["description_$selectedLang"] ?>
            </div>
    
            <?php if ($_SESSION['login']): ?>
                <div id="editor_container">
                    <textarea class="editor_area" id="description_editor" name="description_editor">
                        <?= $paintingData["description_$selectedLang"] ?>
                    </textarea>
                </div>
            <?php endif; ?>

        </div>
    </section>
</main>

<?php if ($_SESSION['login']): ?>
    <script src="https://cdn.tiny.cloud/1/a3mbri168ms9brn32tu5dc85nsuvui4l3sbkxjugzag3gljc/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="js/TinyMCEEditor.js"></script> 
    <script src="js/ApplyButtonManager.js"></script>
    <script src="js/update-textpage.js"></script>
<?php endif; ?>

<?php require_once 'templates/footer.php' ?>

<?php 
$page_menu = [
    "КАТАЛОГ",
    "КОЛЛЕКЦИЯ",
    "СТАТЬИ",
    "ЛИТЕРАТУРА",
    "ХУДОЖНИКИ"
];
require_once 'templates/header_page_menu.php';

// Данные о странице
$sql = "SELECT * FROM table_smalltexts WHERE page_type = ?";
$stmt = $conn->prepare($sql);
$stmt->execute(['catalog']);

$data = $stmt->fetch(PDO::FETCH_ASSOC);
$data_title = $data["figcaption_$selectedLang"];
$data_img = "table_smalltexts/" . $data["figure_url"];
$data_description = $data["description_$selectedLang"];

$page_type = 'Artists';

if ($_SESSION['login']) {
    $editor_class = " edit-btn";
}
?>


<main class="flex wrap gallery-3items collection-catalog overflowItem_hide">
    
    <?php require_once 'templates/catalog_page_artistsList.php' ?>

    <div class="column colomn-middle">
        <img src="img/<?= $data_img ?>" class="<?= $editor_class?>" width="100%">

        <p class="small_text catalog-description_small<?= $editor_class?>"><?= $data_title ?></p>
        <?php if ($_SESSION['login']): ?>
            <textarea class="small_text-editor editor_area in_edit" cols="30" rows="5"><?= /* Title editor */ $data_title ?></textarea>
        <?php endif; ?>
            
        </div>
        
        <div class="column">
            <p class="right_text catalog-description<?= $editor_class?>"><?= $data_description ?></p>
            <?php if ($_SESSION['login']): ?>
                <textarea class="right_text-editor editor_area in_edit" cols="30" rows="15"><?= /* Descr editor */ $data_description ?></textarea>
            <?php endif; ?>
        </div>
    </main>
    
    
<?php if ($_SESSION['login']): ?>
    <input class="editor_area img-editor" type="file"> 
    <script src="js/ApplyButtonManager.js"></script>
    <script src="js/update-catalog.js"></script>
<?php endif; ?>

<?php require_once 'templates/footer.php' ?>

<?php 
$page_menu = [
    "ЛИТЕРАТУРА",
    "КАТАЛОГ",
    "КОЛЛЕКЦИЯ",
    "СТАТЬИ",
    "ХУДОЖНИКИ",
];
require_once 'templates/header_page_menu.php';

// Параметры страницы и шаблон 
$page_url = $menuItems["ЛИТЕРАТУРА"]['link'];
$editor_btn_class = ($_SESSION['login'])?"edit-btn":"";
$page_type = 'bibliography';
require_once 'templates/texts_page.php';

// Футер 
require_once 'templates/footer.php';

<?php
$page_menu = [
    "ХУДОЖНИКИ",
    "КОЛЛЕКЦИЯ",
    "СТАТЬИ",
    "ЛИТЕРАТУРА",
    "КАТАЛОГ"
];
require_once 'templates/header_page_menu.php';

// TMP array
$artistsImgArray = [
    "img/artist-sample.png",
    "img/artist-sample-2.png",
    "img/artist-sample-3.png",
    "img/artist-sample-4.png"
];
$page_type = 'Artists';
require_once 'templates/column-4_page.php';

require_once 'templates/footer.php';

<?php 
// Шаблон конкретной выставки. 
// Динамически отображает меню на основе ID и записи в БД

// Настраиваем переключатель языков
session_start();
if (isset($_GET['exhibition_id'])) {
    $exhibition_id = $_GET['exhibition_id'];
    $_SESSION['exhibition_id'] = $exhibition_id;
} elseif (isset($_SESSION['exhibition_id'])) {
    $exhibition_id = $_SESSION['exhibition_id'];
}


require_once 'parts_php/dbconnection.php';
$sql = "SELECT * FROM exhibitions WHERE exhibition_id = :exhibition_id";
$stmt = $conn->prepare($sql);
$stmt->bindParam(':exhibition_id', $exhibition_id, PDO::PARAM_INT);
$stmt->execute();
$data = $stmt->fetch(PDO::FETCH_ASSOC);
$exhibition_type = $data['exhibition_type'];

$sql = "SELECT p.artist_id, p.image_url, p.title_ru, p.title_en, p.title_de
        FROM Paintings p
        JOIN exhibitions_paintings_list epl ON p.painting_id = epl.painting_id
        WHERE epl.exhibition_id = ?;
";
$stmt = $conn->prepare($sql);
$stmt->execute([ $exhibition_id ]);
$exhibitions_paintings = $stmt->fetchAll(PDO::FETCH_ASSOC);


switch ($exhibition_type) {
    case 'solo':
        $solo_artist_id = $exhibitions_paintings[0]['artist_id'];
        $page_menu = [
            "ПЕРСОНАЛЬНАЯ",
            "ВЫСТАВКИ",
            "РУБИНШТЕЙНА",
            "Тематическая",
            "ПРОШЕДШИЕ",
        ];
        break;
    case 'theme':
        $page_menu = [
            "Тематическая",
            "ВЫСТАВКИ",
            "РУБИНШТЕЙНА",
            "ПЕРСОНАЛЬНАЯ",
            "ПРОШЕДШИЕ",
        ];
        break;
};
require_once 'templates/header_page_menu.php';


$exhebition_btn_text = [
    [ 
    'ru' => 'Смотреть',
    'en' => 'See the',
    'de' => 'Die Ausstellung'
    ],
    [ 
    'ru' => 'Выставку',
    'en' => 'exhibition',
    'de' => 'besichtigen'
    ]
];

$template_type = "exhibition";
$data_title = $data["title_$selectedLang"];
$data_img = "exhibitions/" . $data["exhibition_img"];
$data_description = $data["description_$selectedLang"];
$exhibition_link = "exhibition_gallery.php?exhibition_id=$exhibition_id";

require_once 'templates/text_page_small.php';


require_once 'templates/footer.php';
?>

<?php 

$page_menu = [
    "ВЫСТАВКИ",
    "РУБИНШТЕЙНА",
    "ПЕРСОНАЛЬНАЯ",
    "Тематическая",
    "ПРОШЕДШИЕ",
];
require_once 'templates/header_page_menu.php';

if (isset($_GET['delete_success'])) {
    echo "<script>alert('Выставка " . $_GET['delete_success'] . " удалена')</script>";
}

$exhibition_translation = [
    // "ru" => wrapWordInSpans("Выставка"),
    "ru" => "Выставка",
    "en" => "Exhibition",
    "de" => "Ausstellung"
];

// Для кнопки (ссылки) и для БД
$page_type = "exhibitions";
$page_url = 'r-3_exhibitions';

// Загрузка списка
$sql = "SELECT * FROM exhibitions WHERE exhibition_type != ?";
$stmt = $conn->prepare($sql);
$stmt->execute(['rubinstein']);
$exhibitions = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Загрузка описания
$sql = "SELECT * FROM table_smalltexts WHERE page_type = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$page_type . "_list"]);
$exhibition_description = $stmt->fetch(PDO::FETCH_ASSOC);

require_once 'templates/exhibitions_list.php';


require_once 'templates/footer.php';

<?php 
$page_menu = [
    "ПРОШЕДШИЕ",
    "ВЫСТАВКИ",
    "РУБИНШТЕЙНА",
    "ПЕРСОНАЛЬНАЯ",
    "Тематическая"
];
require_once 'templates/header_page_menu.php';

// TMP array
$artistsImgArray = [
    "img/xudozhnik_Andrej_Ryabushkin_05.jpg",
    "img/tmp.jpg",
    "img/tmp2.jpg",
    "img/tmp.jpg"
];

$page_type = 'exhibitions';
require_once 'templates/column-4_page.php';

require_once 'templates/footer.php';

<?php 
$page_menu = [
    "ПЕРСОНАЛЬНАЯ",
    "ВЫСТАВКИ",
    "РУБИНШТЕЙНА",
    "Тематическая",
    "ПРОШЕДШИЕ"
];
require_once 'templates/header_page_menu.php';

$exhibition_translation = [
    "ru" => [
        wrapWordInSpans("Описание"),
        wrapWordInSpans("Выставки")
    ],
    "en" => [
        wrapWordInSpans("About the"),
        wrapWordInSpans("exhibition")
    ],
    "de" => [
        wrapWordInSpans("über die"),
        wrapWordInSpans("Ausstellung")
    ]
];



// Галерея
require_once 'templates/exhibition_gallery.php';
// Fullscreen image
require_once 'templates/fullscreen_image_container.php';

require_once 'templates/footer.php'; 

<?php
$page_menu = [
    "ПЕРСОНАЛЬНАЯ",
    "ВЫСТАВКИ",
    "РУБИНШТЕЙНА",
    "Тематическая",
    "ПРОШЕДШИЕ",
];
require_once 'templates/header_page_menu.php';


$exhibition_translation = [
    // "ru" => wrapWordInSpans("Выставка"),
    "ru" => "Выставка",
    "en" => "Exhibition",
    "de" => "Ausstellung"
];

// Для кнопки (ссылки) и для БД
$page_type = "solo";
$page_url = 'r-3_personal';

// Загрузка списка
$sql = "SELECT * FROM exhibitions WHERE exhibition_type = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$page_type]);
$exhibitions = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Загрузка описания
$sql = "SELECT description_ru, description_en, description_de FROM table_smalltexts WHERE page_type = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$page_type . "_list"]);
$exhibition_description = $stmt->fetch(PDO::FETCH_ASSOC);

require_once 'templates/exhibitions_list.php';


require_once 'templates/footer.php';

<?php 
$page_menu = [
    "РУБИНШТЕЙНА",
    "ВЫСТАВКИ",
    "ПЕРСОНАЛЬНАЯ",
    "Тематическая",
    "ПРОШЕДШИЕ"
];
require_once 'templates/header_page_menu.php';


$exhebition_btn_text = [
    [
        'ru' => 'ЭКСПОЗИЦИЯ',
        'en' => 'Exhibition',
        'de' => 'Die Ausstellung'
    ]
];

$page_type = "rubinstein";
$sql = "SELECT * FROM exhibitions WHERE exhibition_type = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$page_type]);
$data = $stmt->fetch(PDO::FETCH_ASSOC);

$template_type = "exhibition";
$data_title = $data["title_$selectedLang"];
$data_img = "exhibitions/" . $data["exhibition_img"];
$data_description = $data["description_$selectedLang"];
$exhibition_link = "r-3_rubinstein.php";

require_once 'templates/text_page_small.php';


require_once 'templates/footer.php';

<?php 
$page_menu = [
    "РУБИНШТЕЙНА",
    "ВЫСТАВКИ",
    "ПЕРСОНАЛЬНАЯ",
    "Тематическая",
    "ПРОШЕДШИЕ"
];
require_once 'templates/header_page_menu.php';

$page_url = $menuItems['РУБИНШТЕЙН']['link'];
$page_type = 'Rubinstein';
require_once 'templates/gallery_page.php';

require_once 'templates/footer.php';

<?php 
$page_menu = [
    "Тематическая",
    "ВЫСТАВКИ",
    "РУБИНШТЕЙНА",
    "ПЕРСОНАЛЬНАЯ",
    "ПРОШЕДШИЕ"
];
require_once 'templates/header_page_menu.php';

$exhibition_translation = [
    "ru" => [
        wrapWordInSpans("Описание"),
        wrapWordInSpans("Выставки")
    ],
    "en" => [
        wrapWordInSpans("About the"),
        wrapWordInSpans("exhibition")
    ],
    "de" => [
        wrapWordInSpans("über die"),
        wrapWordInSpans("Ausstellung")
    ]
];


// Галерея
require_once 'templates/exhibition_gallery.php';
// Fullscreen image
require_once 'templates/fullscreen_image_container.php';


require_once 'templates/footer.php'; 

<?php 
$page_menu = [
    "Тематическая",
    "ВЫСТАВКИ",
    "РУБИНШТЕЙНА",
    "ПЕРСОНАЛЬНАЯ",
    "ПРОШЕДШИЕ",
];
require_once 'templates/header_page_menu.php';


$exhibition_translation = [
    // "ru" => wrapWordInSpans("Выставка"),
    "ru" => "Выставка",
    "en" => "Exhibition",
    "de" => "Ausstellung"
]; 

// Для кнопки (ссылки) и для БД
$page_type = "theme";
$page_url = 'r-3_tematic';

// Загрузка списка
$sql = "SELECT * FROM exhibitions WHERE exhibition_type = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$page_type]);
$exhibitions = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Загрузка описания
$sql = "SELECT description_ru, description_en, description_de FROM table_smalltexts WHERE page_type = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([$page_type . "_list"]);
$exhibition_description = $stmt->fetch(PDO::FETCH_ASSOC);

require_once 'templates/exhibitions_list.php';


require_once 'templates/footer.php';

<?php 
$page_menu = [
    "ЛЕКЦИИ",
    "ВСТРЕЧИ",
    "НОВОСТИ",
    "ИЗЫСКАНИЯ",
    "МАТЕРИАЛЫ",
];
require_once 'templates/header_page_menu.php';


$calendar_translation = [
    "ru" => [
        wrapWordInSpans("КАЛЕНДАРЬ"),
        wrapWordInSpans("ЛЕКЦИЙ")
    ],
    "en" => [
        wrapWordInSpans("schedule"),
        wrapWordInSpans(" ")
    ],
    "de" => [
        wrapWordInSpans("Terminkalender"),
        // wrapWordInSpans("Terminplan"),
        wrapWordInSpans(" ")
    ]
];
$page_type = "lectures";
require_once 'templates/meetings_lectures.php';


require 'templates/footer.php';

<?php 
   $page_menu = [
    "МАТЕРИАЛЫ",
    "ЛЕКЦИИ",
    "ВСТРЕЧИ",
    "НОВОСТИ",
    "ИЗЫСКАНИЯ"
];
require_once 'templates/header_page_menu.php';


// Загрузка шаблона
$page_url = $menuItems['МАТЕРИАЛЫ']['link'];
$page_type = 'materials';
require_once 'templates/gallery_page.php';


require_once 'templates/footer.php';

<?php 
    $page_menu = [
        "ВСТРЕЧИ",
        "ЛЕКЦИИ",
        "НОВОСТИ",
        "ИЗЫСКАНИЯ",
        "МАТЕРИАЛЫ",
    ];
require_once 'templates/header_page_menu.php';

$contacts_translation = [
    "ru" => [
        wrapWordInSpans("Контактная"),
        wrapWordInSpans("информация")
    ],
    "en" => [
        wrapWordInSpans("contact us"),
        wrapWordInSpans(" ")
    ],
    "de" => [
        wrapWordInSpans("Kontakt"),
        wrapWordInSpans(" ")
    ]
];

$calendar_translation = [
    "ru" => [
        wrapWordInSpans("КАЛЕНДАРЬ"),
        wrapWordInSpans("ВСТРЕЧ")
    ],
    "en" => [
        wrapWordInSpans("schedule"),
        wrapWordInSpans(" ")
    ],
    "de" => [
        wrapWordInSpans("Terminkalender"),
        // wrapWordInSpans("Terminplan"),
        wrapWordInSpans(" ")
    ]
];

$page_type = "meetings";
require_once 'templates/meetings_lectures.php';

require_once 'templates/footer.php';

<?php 
$page_menu = [
    "НОВОСТИ",
    "ЛЕКЦИИ",
    "ВСТРЕЧИ",
    "ИЗЫСКАНИЯ",
    "МАТЕРИАЛЫ",
];
require_once 'templates/header_page_menu.php';

// Параметры страницы и шаблон
$page_url = $menuItems["НОВОСТИ"]['link'];
$editor_btn_class = ($_SESSION['login'])?"edit-btn":"";
$page_type = 'news';
require_once 'templates/texts_page_news.php';

// Фикс для нажатия по новости — текст в правой колонке не улетает выше
echo '<script src="js/iPad-click-fix.js"></script>';
// echo '<script src="js/window-dimensions-tracker.js"></script>';

// Футер
require_once 'templates/footer.php';

<?php 
$page_menu = [
    "ИЗЫСКАНИЯ",
    "ЛЕКЦИИ",
    "ВСТРЕЧИ",
    "НОВОСТИ",
    "МАТЕРИАЛЫ",
];
require_once 'templates/header_page_menu.php';

// Параметры страницы и шаблон 
$page_url = $menuItems["ИЗЫСКАНИЯ"]['link'];
$editor_btn_class = ($_SESSION['login'])?"edit-btn":"";
$page_type = 'reflections';
require_once 'templates/texts_page.php';

// Футер 
require_once 'templates/footer.php';


<?php
require 'parts_php/dbconnection.php';

// Создание шаблона
$page_url = $_GET['page_url'];
$page_type = $_GET['page_type'];

$sql = "INSERT INTO table_texts 
    	(page_type, description_ru, description_en, description_de) VALUES 
    	(?, ?, ?, ?)";
$stmt = $conn->prepare($sql);
$tmp_text = '<p>Описание</p>';
$stmt->execute([ $page_type, $tmp_text, $tmp_text, $tmp_text ]);


// Получение ID
$sql = "SELECT id 
        FROM table_texts 
        ORDER BY id DESC LIMIT 1";
$stmt = $conn->prepare($sql);
$stmt->execute();
$data = $stmt->fetch();
$data_id = $data['id'];

// Переход на выставку и отправка ID
header("location: $page_url?data_id=$data_id");

exit();

<?php
session_start();

function echo_test() {
    echo $page_url;
    echo "<br>";
    echo $page_type;
    echo "<br>";
    echo $page_id;
    echo "<br>";
    echo $selectedLang;
    echo "<br>";
    echo $title;
    echo "<br>";
    echo $description;
    echo "<br>";
}
// Создание шаблона
$page_url = $_POST['page_url'];
$page_type = $_POST['page_type']; 
$page_id = $_POST['page_id']; 
$selectedLang = $_POST["lang"]; 

$title = $_POST['title']; 
$description = $_POST['description']; 

require 'parts_php/dbconnection.php';

$sql = "UPDATE table_texts
        SET description_$selectedLang = ?, title_$selectedLang = ?
        WHERE id = ?";
$stmt = $conn->prepare($sql);
$stmt->execute([ $description, $title, $page_id ]);

// Переход на выставку и отправка ID
header("location: $page_url?data_id=$page_id");
// echo_test();

exit();

@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap');

/*****
DEV 
*****/
.bugs {
    border: 0px solid pink;
}




/******************
    G L O B A L 
******************/
* {
    box-sizing: border-box;
}
body, html {
    padding: 0;
    margin: 0;
    height: 100vh;
}
body {
    font-family: 'Open Sans', sans-serif;
    font-size: 16px;
    position: relative;
    overflow-x: hidden;
    /* overflow-y: hidden; */
}
a{
    text-decoration: none;
    color: black;
}
main a:hover {
    text-decoration: underline;
}
.wrap {
    /* 900/768*100 */
    width: 117vh;
    margin: 0 auto;
}
.flex {
    display: flex;
    justify-content: space-between;
}

main section p { 
    letter-spacing: .2vh; 
    color: rgba(0, 0, 0, .85); 
    line-height: 25px;
}
.home-flex {
    display: flex;
    flex-direction: column;
    overflow: hidden;
}
.main_index {
    height: 45vh;
    background: white;
}

.overflowItem_hide {
    overflow: hidden;
}
.overflowItem_scroll {
    overflow: scroll;
    max-height: 100%;
    scrollbar-width: none;
}
.overflowItem_scroll::-webkit-scrollbar {
    display: none;  /* Webkit-браузеры (Chrome, Safari, Opera) */
}
.left-side_scroll {
    max-height: 53vh;
    position: relative;
}
.left-side_scroll ul {
    max-height: 53vh;
}




/**********************************
    L O G   I N — L O G   O U T 
**********************************/
.login-bar {
    height: calc(10 / 768 * 100vh);
    background: #91037C;
}
.login-bar .wrap {
    position: relative;
}

.editor_btn {
    display: inline-block;
    color: white;
    background-color: #686B9B;
    border-color: #031D86;
    padding: calc(5 / 768 * 100vh) calc(10 / 768 * 100vh);
    border-radius: 5px;
    cursor: pointer;
    text-decoration: none;
    transition: background-color ease-in-out .5s;
}
.editor_btn:hover {
    text-decoration: none;
    background-color: #45476e;
}
.warning_btn {
    background-color: #9b6868;
    border-color: #860303;
}
.warning_btn:hover {
    background-color: #7a2b2b;
}
.apply_btn {
    background-color: #8B8B8B;
    border-color: #262626;
    position: absolute;
    right: -20vh;
    bottom: -80vh;
    transition: all .5s ease-in-out;
}
.apply_btn_active {
    background-color: #A3058C;
    border-color: #A3058C;
}
.apply_btn_active:hover {
    background-color: #355700;
    border-color: #262626;
}
.apply_btn_active_done {
    animation-name: apply_btn_active_done;
    animation-duration: 2s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: 1;
    animation-play-state: running;
}
@keyframes apply_btn_active_done {
    0% {
        background-color: #355700;
        border-color: #262626;
    }
    30% {
        background-color: #355700;
        border-color: #262626;
    }
    100% {
        background-color: #8B8B8B;
        border-color: #262626
    }
}
.login-bar .log-out_btn {
    position: absolute;
    right: -20vh;
    top: 7vh;     
}
.login-bar .artistsList_btn {
    position: absolute;
    left: -20vh;
    top: 7vh;
}

.text-add_btn {
    margin-top: 2vh;
    color: white !important;
}

.in_edit,
.tox.tox-tinymce {
    border: 5px solid #B7009C;
}




/******************
    H E A D E R
******************/
h1,
header a {
    text-transform: uppercase;
    text-decoration: none;
}
h1,
h1 a {
    transform: scaleY(.9);

    color: #A8A7A7;
    font-size: 6vh;
    margin: 0;
    font-weight: 300;
    margin-block-start: 0;
    margin-block-end: 0;
}
.header-line_1>div{
    align-items: baseline
}
.header-line_1 {
    background-color: #4b4646;
    /* padding: .6vh 0; */
    padding: 0;
    margin: -0.5vh 0;
}
.header-line_1 .topMenu-desktop a {
    color: white;
    /* padding-left: 4.8vh;; */
    /* font-size: 1.2vh; */
    font-size: 1.6vh; /* на макбуке */
}
.header-line_2 {
    /* padding: 5.85vh 0 0; */
    padding: 5vh 0 .85vh;
}
.header-line_2 img {
    height: 19vh;
    position: relative;
    bottom: 2vh;
}
header p {
    text-align: justify;
    text-align-last: justify;
    width: 84.5vh;
    margin-top: 0;
    margin-bottom: 0;
    font-size: 1.8vh;
    letter-spacing: .1em;
    line-height: 3.3vh;
    color: #7d7d7d;
}
header p:first-child {
    margin-top: 14px;
}
.header-p_justifyFlex {
    display: flex;
    justify-content: space-between;
}
.topMenu-desktop {
    display: flex;
    align-items: baseline
}
.indexText_spb {
    letter-spacing: .7vh;
}


.lang-switch a:not(:last-child) {
    margin-right: 1vh;
    transition: transform 0.3s;
}
.lang-switch a:last-child {
    margin-right: 3vh;
}
.lang-switch a:not(.lang-switch_active) {
    display: inline-block;
    color: #939393;
    transform-origin: center;
    transform: scale(1);
    transition: transform 0.3s; /* Добавляем анимацию масштабирования */
}
.lang-switch_active {
    color: white;
}
.lang-switch a:not(.lang-switch_active):hover {
    color: #FAF7F0;
    transform: scale(1.5); /* Увеличиваем масштаб при наведении */
}
.shrinked-letter {
    transform: scaleX(0.85);
    letter-spacing: -.2vh;
}




/**************************
    N A V I G A T I O N
    MOBILE on desktop
**************************/
.nav-mobile_btn,
.nav-mobile_menu {
    display: none;
}




/**************************
    N A V I G A T I O N
**************************/
.nav-home {
    position: relative;
    bottom: -0.5vh;
}

.nav-desktop {
    margin-top: 0;
    display: flex;
    align-items: baseline;
}
.nav-desktop,
.nav-desktop_dropdown {
    padding: 0;
    list-style: none;
}

.nav-first-item {
    width: 32.55vh;
}
.nav-first-item a {
    font-size: 3.3vh !important;
}

.nav-page {
    margin: 5.2vh auto 5vh;
}
.nav-first-item_experimental a {
    padding-right: calc(40 / 768 * 100vh);
    display: flex;
    justify-content: space-between;
}
.nav-first-item_experimental span {
    display: inline-block;
}
/* Автоматизированние расстояния в меню PAGE */
.nav-page_experimental>div>div:first-child {
    width: 32.55vh;
    padding-right: calc(40 / 768 * 100vh);
    display: flex;
    justify-content: space-between;
    font-size: 3.3vh !important;
}
.nav-page_experimental .nav-dektop_firstLink {
    display: flex;
    width: 32.55vh;
    justify-content: space-between;
    font-size: 3.3vh !important;
}
.nav-page_experimental a {
    display: flex;
    justify-content: space-between;
}
.nav-page_experimental span {
    display: inline-block;
    /* 10-11-21 */
    text-transform: uppercase;
}
.nav-page_experimental ul {
    display: flex;
    justify-content: space-between;
    flex: 1;
}


.nav-page .nav-desktop {
    border-bottom: 1px solid black;
}
.nav-page ul {
    align-items: baseline;
    padding: 0;
    list-style: none;
    margin: 0;
}
.nav-page li {
    width: 17.5vh;
}
.nav-home .nav-desktop li {
    position: relative;
    text-align: center;
    width: 20.18vh;
}
.nav-desktop a {
    color: black;
    font-size: 2.6vh;
    text-transform: uppercase;
}
.nav-page .nav-desktop a {
    font-size: 2.3vh;
}
.nav-home .nav-desktop a {
    letter-spacing: .2em;
}
.nav-home .nav-desktop li:hover {
    border-bottom: 1px solid black;
    padding-bottom: 2px;
}
.nav-desktop li:hover ul {
    display: block;
}

.nav-desktop_dropdown {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    padding-top: 16px;
    display: none;
}

.nav-desktop_dropdown li {
    margin-bottom: 1.8vh;
    padding-bottom: 2px;
    text-align: center;
    border: 1px solid black;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, .16);
}
.nav-desktop_dropdown li:hover a {
    color: black;
}
.nav-desktop_dropdown a {
    font-size: 1.82vh;
    color: #4b4646;
}




/*************************
    M A I N  B L O C K
*************************/
main {
    margin-bottom: 10vh;
    min-height: 70vh;
}
.left-side {
    width: 32.55vh;
    margin: 0;
    padding-top: 8px;
}
.left-side img {
    width: 27.34vh;
    margin-right: 5.21vh;
}
main section {
    flex-basis: auto;
}
main section p {
    margin-top: 0;
    text-align: justify;
}
.painting-description_p,
figure figcaption {
    letter-spacing: .2vh;
    margin-top: 5px;
}




/***********************
    T E X T  P A G E
    & left menu 
***********************/
.textArticle_container img {
    display: block; 
    max-width: 27.3vh;
    max-height: 27vh;
    height: auto;
    margin: 1.5vh auto 1.5vh;
}
.textArticle_container section {
    flex: 1;
}
.textArticle_container a {
    color: black;
}
.textArticle_container ul,
.IIIcolumnPage ul.left-side {
    padding-left: 0;
    padding-right: calc(40 / 768 * 100vh);
    list-style: none;
}
.textArticle_container li:first-child,
.IIIcolumnPage ul.left-side li:first-child {
    border-top: 1px solid black;
}
.textArticle_container li,
.IIIcolumnPage ul.left-side li {
    /* text-align: justify;     */
    border-bottom: 1px solid black;
    padding: 1vh 0 1.5vh;
    /* margin-bottom: 3vh; */
}



/* 3columnPage — meetings  */
.IIIcolumnPage section.column-middle {
    flex: 1;
    margin-top: 8px;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}
.IIIcolumnPage section.column-middle figure:not(:nth-child(1)),
.IIIcolumnPage section.column-middle figure:not(:nth-child(2)) {
    margin-bottom: calc(20 / 768 * 100vh);
}
.IIIcolumnPage section.column-middle figure {
    width: calc(200 / 768 * 100vh);
    margin: 0;
}
.IIIcolumnPage section.column-middle img {
    width: calc(200 / 768 * 100vh);
}
.IIIcolumnPage section.column-middle figcaption {
    width: calc(166 / 768 * 100vh);
}

.IIIcolumnPage section.column-right {
    width: calc(167 / 768 * 100vh);
    padding-left: calc(36 / 768 * 100vh);
}
.IIIcolumnPage section.column-right p {
    text-align: center;
}
.IIIcolumnPage section.column-right .column_right_header {
    letter-spacing: .5vh;;
    text-transform: uppercase;
}




/*********************** 
    C O N T A K T S 
***********************/
.contacts a {
    color: #6E0000;
}
.contacts div {
    display: flex;
}
.contacts div:first-child {
    gap: calc(14 / 768 * 100vh);
}
.contacts div:last-child {
    justify-content: end;
}
.contacts input {
    padding: calc(7 / 768 * 100vh) calc(10 / 768 * 100vh);
    flex: 1;
}
.contacts textarea {
    width: 100%;
    padding: calc(7 / 768 * 100vh) calc(10 / 768 * 100vh);
    margin: calc(11 / 768 * 100vh) 0;
}
.contacts button {
    display: inline-block;
    color: white;
    letter-spacing: .25vh;
    background-color: #000000;
    border: 0;
    padding: calc(7 / 768 * 100vh) calc(15 / 768 * 100vh);
    cursor: pointer;
    width: calc(167 / 768 * 100vh - 36 / 768 * 100vh);
}

/* Кнопка "Контакты" во встречах */
.contacts_btn {
    /* margin-top: calc(34 / 768 * 100vh); */
    /* margin-top: 25vh; */
    /* margin-top: 13vh; */
    /* padding: 1vh calc(15 / 768 * 100vh) 0; */
    margin-top: 8px;
    padding: 1vh .5em 0;
    border-top: 1px solid black;
}
.contacts_btn p {
    letter-spacing: normal;
    text-transform: uppercase;
    margin: 0 0 -0.2vh;
    display: flex;
    justify-content: space-between;
}

/* @media screen and (max-width: 1500px) {
    .contacts_btn {
        margin-top: 17.5vh;
    }
} */
/* TABLET */
/* На Air */
/* @media screen and (max-width: 1200px) {
    .contacts_btn {
        margin-top: 17.5vh;
    }
} */
/* На моём iPad */
@media screen and (max-width: 1024px) {
    .contacts_btn {
        /* margin-top: 9.5vh; */
        padding: 1vh .1em 0;
    }
}


.exhibitions_list {
    margin-bottom: 8px;
}
.exhibitions_list li {
    text-align: center;
}
.exhibitions_list p {
    margin-top: 0;
    margin-bottom: 0;
    cursor: pointer;
    text-align: left;
}
.exhibitions_list a {
    color: rgba(0, 0, 0, .7);
}

/* На ПЕРСОНАЛЬНОЙ, ТЕМАТИЧЕСКОЙ выставке */
.exhibition-description_mask {
    background: white;
    width: 100%;
    height: 360px;
    position: absolute;
    top: -4px;
    z-index: -1;
}
.exhibition-description_btn {
    width: 32vh; 
    border-top: 1px solid black; 
    padding-top: 1vh;
}
.exhibition-description_btn p {
    text-align: center; 
    text-transform: uppercase;
    margin-top: 0;
    margin-bottom: -.2vh;
    display: flex;
    justify-content: space-between;
    padding: 0 8vh;
    /* padding: 0 calc(37 / 768 * 100vh); */
}
.exhibition_add_btns p {
    font-style: italic;
}
.exhibition_add_btns p b {
    opacity: .5;
}



/****************************
    D E S C R I P T I O N
    3cols
****************************/
.exhebition_descr {
    width: 27.34vh;
    border-top: 1px solid black;
    margin-top: calc(72 / 768 * 100vh);
    padding: 1vh calc(37 / 768 * 100vh) 0;
}
.exhebition_descr p {
    margin-top: 0;
    margin-bottom: -.2vh;
}
.exhebition_descr p,
.artist_descr p,
.picture_descr p {
    display: flex;
    justify-content: space-between;
}
.exhebition_descr a:hover,
.artist_descr a:hover,
.picture_descr a:hover {
    text-decoration: none;
}
.artist_descr {
    width: 27.34vh; 
    margin-top: calc(34 / 768 * 100vh);
    position: relative;
}
.artist_descr--works_btn {
    border-bottom: 1px solid black;
    padding: 0 calc(37 / 768 * 100vh)  1vh;
    margin-bottom: calc(1vh + 2px);
    text-transform: uppercase;
}
.artist_descr--artists_btn {
    padding: 0 calc(37 / 768 * 100vh);
    margin-bottom: -.2vh;
    margin-top: 0;
    text-transform: uppercase;
}
.artist_descr--artists_btn:first-child {
    margin-top: 0;
}
.artist_descr .arrow {
    top: 55%;
}
.picture_descr .arrow {
    top: 15%;
}
@media screen and (max-width: 1200px) {
    .picture_descr .arrow {
        top: 5%;
    }
}
.artist_descr .arrow.arrow_left,
.picture_descr .arrow.arrow_left {
    position: absolute;
    left: 0;
}
.artist_descr .arrow.arrow_right,
.picture_descr .arrow.arrow_right {
    position: absolute;
    right: 0;
}
.picture_descr {
    width: 27.34vh; 
    margin-top: calc(34 / 768 * 100vh);
    border-top: 1px solid black;
    position: relative;
}
.picture_descr p {
    padding: 0 calc(37 / 768 * 100vh);
}




/*******************************
    G A L L E R Y   P A G E
            3 items
*******************************/
.gallery-3items img {
    width: 100%;
}
.gallery-3items .column {
    flex-basis: 32vh;
}
.gallery-3items figure {
    margin: 0 0 3.9vh;
}
/* 18-12-23 Чтобы в галерее на последней строке картины были прижаты  */
.exhibition-gallery {
    gap: 10.5vh;
    justify-content: flex-start;
}
.gallery-3items-NEW {
    flex-wrap: wrap;
    position: relative;
}
.exhibition_gallery__elements {
    height: 75vh;
    overflow: scroll;
    scroll-snap-type: y mandatory;
}
.exhibition_gallery__element figure {
    position: relative;
}
.exhibition_gallery__element figure>div { /* DIV с кнопкой удаления внутри*/
    position: absolute;
    top: 0px;
    right: 4px;
    margin: 4px 0 4px; 
    text-align: left
}
.exhibition_gallery__element figure>div>span {
    background-color: rgb(155 104 104 / 70%);
}
.exhibition_gallery__element {
    height: 75vh;
    scroll-snap-align: start;
}




/*******************************
    G A L L E R Y   P A G E
            4 items
*******************************/
.gallery-items-4 {
    flex-wrap: wrap;
}
.gallery-items-4 img {
    width: 100%;
    height: 22vh;
}
.gallery-items-4 .column {
    flex-basis: 20vh;
}
.gallery-items-4 figure {
    margin: 0 0 3.9vh;
}

.gallery-grid_4col {
    display: grid;
    grid-template-columns: [content1-start] 22vh [content1-end] auto [content2-start] 22vh [content2-end] auto [content3-start] 22vh [content3-end] auto [content4-start] 22vh [content4-end];
    column-gap: auto;
    row-gap: 10px;
}
.gallery-grid_4col>a:nth-child(4n+1) {
    grid-column: content1;
}
.gallery-grid_4col>a:nth-child(4n+2) {
    grid-column: content2;
}
.gallery-grid_4col>a:nth-child(4n+3) {
    grid-column: content3;
}
.gallery-grid_4col>a:nth-child(4n+4) {
    grid-column: content4;
}
.gallery-grid_4col figure {
    margin: 0 0 3.9vh;
}
.gallery-grid_4col img {
    width: 100%;
    height: 22vh;
}




/********************
    C A T A L O G
********************/
.collection-catalog {
    position: relative; 
    top: 2vh;
}
.collection-catalog_header  {
    font-weight: 400;
    color: rgba(0,0,0,.70);
    position: absolute;
    top: 19vh;
    left: 50%;
    transform: translateX(-50%);
}
.collection-catalog ul {
    list-style: none;
    padding-left: 0;
    margin-top: 0;
    height: 50vh;
    overflow: scroll;
}
.collection-catalog ul li {
    margin-bottom: .5vh;
}

.list-scrolling_mask {
    position: relative;
}
.list-scrolling_mask::before {
    content: "";
    background: white;
    width: 100%;
    height: 20px;
    position: absolute;
    left: 0;
    top: -14px;
}
.collection-catalog .list-scrolling_mask::before {
    top: -15px;  /* 18-12-23 → -14px */
} 

/* list-scrolling_mask */
.meetings-lectures::before {
    top: -12px;
}
.collection-catalog ul::-webkit-scrollbar {
    display: none;  /* Webkit-браузеры (Chrome, Safari, Opera) */
}
.collection-catalog .column:first-child {
    position: relative;
}
.catalog-description {
    margin-top: 0;
}
.collection-catalog .colomn-middle {
    flex-basis: auto;
    max-width: 52vh;
    /* position: relative; */
    padding-top: 0.65vh;
}
.collection-catalog .colomn-middle h3 {
    text-align: center;
    font-weight: normal;

    position: absolute;
    top: -50px;
    left: 50%;
    transform: translateX(-50%);
}
.collection-catalog .colomn-middle p {
    text-align: center;
}
.collection-catalog .column:last-child {
    padding-left: 9vh;
    text-align: left;
}
.collection-catalog .img_container {
    position: relative;
    cursor: pointer;
}
.collection-catalog .img_container img {
    max-height: 44vh;
    max-width: 52vh;
    width: auto;
}




/********************************************
    M E E T I N G S   &   L E C T U R E S
********************************************/
.meetings-lectures_form  {
    transition: all ease-in-out 500ms;
}
.meetings-lectures_form-hidden {
    margin-bottom: -45px !important;
    background: rgba(255, 255, 255, 0) !important;
    top: -51px;
}
.meetings-lectures_form-hidden :is(h3, section, div, p ) {
    display: none;
} 




/*************************
    P A I N T I N G S
*************************/
.painting-description {
    margin-top: -1vh;
}
/* Обнуляю отступы у всех P */
.painting-artist p,
.painting-description p:not(.learn-more_btn) {
    margin: 0;
}
/* Пкрвый P в описании */
.painting-description p:nth-child(1) {
    margin-top: 1.5vh; 
    margin-bottom: .3vh;
}
/* Каждый второй P → bold */
.collection-catalog .painting-description p:nth-child(2n):not(.learn-more_btn) {
    font-weight: bold;
    color: rgba(0, 0, 0, .7);
}

.collection-catalog .gallery div,
.painting-description div {
    display: none;
}
.collection-catalog .img_container .gallery div.gallery-active {
    display: flex; /* Показываем только активное изображение */
    flex-direction: column;
    align-items: center;
}
.collection-catalog .painting-description div.gallery-active {
    display: block;
}

.painting-description_imgContainer {
    width: 27.34vh;
    /* height: 38.35vh; */
    margin: 8px 5.21vh 0 0;

    padding: 0;
    max-width: 100%;
    text-align: center;
    background: gray;
    display: flex;
    justify-content: center;
}
.painting-description_imgContainer img {
    max-width: 100%;
    /* max-height: 38.35vh; */
    /* max-height: 35.6vh; */
    max-height: 32.5vh;
    width: auto;
    height: auto;
    display: block;
    margin-right: 0;
}
.painting-description_p {
    margin-top: 10px; /* Расстояние между изображением и текстом */
    text-align: justify;
}

.collection-catalog .arrow {
    position: absolute;
    top: 15vh;
}
.collection-catalog .arrow_left {
    left: -3vh;
    cursor: pointer;
}
.collection-catalog .arrow_right {
    right: -3vh;
    cursor: pointer;
}
.collection-catalog hr {
    margin: 0;
}
.learn-more_btn {
    margin-top: 7vh;
    margin-bottom: 1vh;
    letter-spacing: .5vh;
    text-align: center;
    text-transform: uppercase;
}
.about-painter_btn {
    margin-top: 1vh;
    letter-spacing: .2vh;
    text-align: center;
    text-transform: uppercase;
}




/***************************
    F U L L  S C R E E N
***************************/
.fullscreen {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: none;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.9);
    z-index: 999;
}
.fullscreen .close {
    position: absolute;
    top: 20px;
    right: 20px;
    color: white;
    font-size: 30px;
    cursor: pointer;

}
.fullscreen img {
    max-width: 80%;
    max-height: 80%;
    border-radius: 5px;
    cursor: pointer;
}
.fullscreen p {
    color: white;
    position: fixed;
    bottom: 3vh;
    left: 50%;
    transform: translateX(-50%);
    text-align: center;
}
.painters_fullscreen img {
    position: relative;
    bottom: 3vh;
}
.painters_fullscreen p {
    bottom: 2vh;
}
.image {
    cursor: pointer;
}
.prev,
.next {
    position: relative;
    cursor: pointer;
}
.prev {
    left: -3vh;
}
.next {
    right: -3vh;
}




/**************
    N E W S  
***************/
.news-header {
    margin-top: 2px;
    display: flex;
    justify-content: space-between;
    align-items: baseline;
}
.news-header h4 {
    margin-top: 0;
    margin-bottom: 4px;
    opacity: 0.7;
    color: rgba(0, 0, 0, .7);
}

.left-side_link,
.left-side_link:active  {
    text-decoration: none;
}
.left-side__active {
    opacity: .3;
    color: rgba(0, 0, 0, .7) !important;
    font-weight: bold;
}
@media screen and (max-width: 1200px) {
    .left-side__active {
        text-decoration: none !important;
    }
}
.news-block:first-child {
    border-top: 1px solid black;
    margin-top: 8px;
}
.news-block {
    border-bottom: 1px solid black;
    padding: 1vh 0 1.5vh;
}

/* Click Fix */
main.clickFix section .overflowItem_scroll {
    position: relative;
}
main.clickFix {
    max-height: calc(100dvh - 232px);
    overflow: hidden;
}

@media screen and (max-width: 1200px) {
    main.clickFix {
        max-height: calc(100svh - 165px);
        min-height: auto;
    }
}

.text-preview {
    margin: 0;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: 2; /* Определение максимального количества строк для отображения */
    max-height: 3em; /* Максимальная высота, соответствующая трем строкам */
    white-space: normal; /* Обеспечение переноса слов */
}




/******************
    F O O T E R
******************/
footer {
    width: 100%;
    position: absolute;
    /* bottom: -25px; */
    bottom: -3vh;
    left: 0;
}
footer ul {
    list-style: none;
    padding: 0;
}
footer img {
    position: absolute;
    right: -8vh;
    height: 12vh;
    top: 4vh;
}
footer div {
    height: 16.28vh;
    position: relative;
    background-image: url("../img/RIVER.jpg");
    background-repeat: repeat-x; 
    background-size: auto 100%; 
    animation-name: footer_animation;
    animation-duration: 200s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}
@keyframes footer_animation {
    from {
        background-position: 0;
    }
    to {
        background-position: 176vh;
    }
}
footer p {
    background-color: #4a4545;
    color: white;
    text-align: center;
    margin: 0;
    padding: 2.08vh 0;
}
.footer_copyrite {
    position: relative;
    z-index: 1;
}
.footer_copyrite span {
    position: absolute; 
    top: 17.2vh;
    left: -7.3vh; 
    color: #939393; 
    font-size: 1.5vh
}



/****************************
    A R T I S T S   L I S T
****************************/
.artists-list_wrap {
    padding: 0 50px;
}
.artists-list_item * {
    margin-right: 20px;
}
.artists-list {
    /* display: flex; */
    /* justify-content: space-between; */
    width: 100%;
    border: 1px solid #686B9B;
    border-radius: 5px;
    padding: 20px 30px;
    margin-bottom: 10px;
}
.artists-list tr>div {
    border: 1px solid #686B9B;
    border-radius: 5px;
}
.artists-list_item img {
    width: 130px;
}

/* Artists list */
.nav-page .editor_btn {
    color: white !important;
    font-size: 1.3vh !important;
    position: relative;
    bottom: 0.7vh;
}
.artists-list_header {
    margin-bottom: 2.5vh;
}
.artists-list-grid {
    display: grid;
    grid-template-columns: 20vh repeat(5, 1fr) 20vh;
    gap: 20px;
    
}
.artists-list-grid.artist {
    border-top: 2px solid #686B9B;
    padding-top: 2vh;
}
.artists-list-grid p {
    margin-top: 0;
}
.artists-list-grid img {
    width: 100%;
}

.artists-list-grid_notInCatalog {
    background: lemonchiffon;
}
.artists-list-grid_notInCatalog .editor_btn {
    background-color: rgb(65, 101, 138);
}
.artists-list-grid_notInCatalog .warning_btn {
    background-color: rgb(251, 77, 61);
}
.artists-list-grid_notInCatalog.artists-list_paintings .editor_btn {
    background-color: rgba(65, 101, 138, .7);
}
.artists-list-grid_notInCatalog.artists-list_paintings .warning_btn {
    background-color: rgba(251, 77, 61, .7);
}

.artists-list_paintings {
    display: flex;
    flex-wrap: wrap;
    justify-content: start;
    gap: 20px;
    max-width: 100vw;
    margin-bottom: 6vh;
    padding-top: 1vh; 
}
.artists-list_paintings img {
    max-height: 12vh;
    margin-bottom: -5px;
    height: auto;
}
.artists-list_paintings p {
    margin: 4px 0;
    padding: 0 8px 0 0px;
    text-align: left;
}

.artists-list-picture_container {
    position: relative;
    text-align: center;
    margin: 0 0 0px;
    padding: 0 0px 4px;

    max-width: 22vh;
    min-width: 13vh;
}
.artists-list-picture_container div {
    background: #6c6a6a;
}
.artists-list-picture_editBtn {
    position: absolute;
    font-size: 12px;
    top: 0;
    right: 0;
}

.add-picture_Btn {
    background: #f0edef;
    display: flex;;
    padding: 2vh;
    max-height: 12vh;
    transition: all 500ms ease-in-out;
}
.add-picture_Btn:hover {
    background: #cdc7e4;
}
.notList_addPicture_btn {
    height: 12vh;
    margin-bottom: 3.9vh;
}
.add-picture_Btn a {
    color: #6f6f6f;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    width: 100%;
}
.add-picture_Btn a:hover,
.artists-list-picture_editBtn a:hover {
    text-decoration: none;
}
.add-picture_Btn span:first-child {
    font-size: 3vh;
    margin-top: -1vh;
}
.artists-list_paintings p {
    color: #575757;
}

.artists-list-grid b,
.artists-list_paintings b {
    color: rgba(0,0,0,.70);
}
.artists-list_paintings .editor_btn {
    background-color: rgb(104 107 155 / 70%);
} 
.artists-list_paintings .warning_btn {
    background-color: rgb(155 104 104 / 70%);
}

.artist-add input[type=checkbox] {
    -webkit-transform: scale(3,3);
    transform: scale(3,3);
    margin: 13px;
}

.painting-add h3,
.artist-add h3 {
    margin-bottom: 8px;
}
.painting-add .artist-add_header,
.artist-add .artist-add_header {
    margin-top: 0;
}

.painting-add input:not(.artistId, input[name="size"], input[name="catalog_number"], input[type="number"]) {
    display: block;
    width: 50vh;
    margin-bottom: .5vh;
}

.text-add {
    width: 90vh;
}
.text-add h3 {
    opacity: .5;
}
.text-add input:not([hidden], input[type="file"]) {
    border: 0;
    border-bottom: 1px solid black;
    width: 100%;
}
.text-add__titles div {
    margin-bottom: 16px;
}
.text-add__titles, .text-add__img  {
    margin-bottom: 42px;
}
.text-add__img img {
    display: none;
    margin: 8px 0 4px;
}

/* РЕДАКТОР ТЕКСТОВ */
.edit-btn * {
    font-weight: normal;
    font-family: 'Open Sans', sans-serif;
    font-size: 16px !important;
    letter-spacing: .2vh  !important; 
    color: rgba(0, 0, 0, .85) !important; 
    line-height: 25px !important;
    transform: scaleY(1);
}
.edit-btn {
    cursor: pointer;
}
.left-side textarea.editor_area {
    width: 27.34vh;
    margin-right: 5.21vh;
    display: none;
}
textarea.editor_area {
    width: 100%;
}
input[type="file"].editor_area {
    display: none;
}
.tox-tinymce {
    display: none;
}

/* [hidden] {
    display: none;
} */

/* Форма загрузки изображений */
.imageAdd-form {
    background-color: rgb(250,250, 250);
    padding: 1vh 2vh;
    background-color: rgb(250,250, 250);
    margin-bottom: 3vh;
    position: relative;
}
#formTop_btn {
    position: absolute;
    top: 16px;
    right: 16px;
}
.gallery-3items-NEW figure {
    position: relative;
}
.imageAdd-form h3 {
    font-weight: 400;
    margin-top: 0;
    text-align: center;
    color: rgba(0, 0, 0, .6);
}
.imageAdd-form textarea {
    width: 100%;
}
.imageAdd-form input[type='file'] {
    color: #9b6868;
}
.imageAdd-form p {
    margin-top: 0;
    margin-bottom: 4px;
}
.imageAdd-form>p {
    text-align: center;
}
.imageAdd-form button {
    border: 0;
}
.imageAdd-form>div {
    display: flex;
    justify-content: space-between;
    gap: 2vh;
    margin: 16px 0 8px;
}
.imageAdd-form>div>div {
    flex: 1;
}
.img-gallery input,
.img-gallery textarea {
    display: none;
}
.img-gallery textarea {
    text-align: left;
    width: 100%;
    border: 3px solid #B7009C;
}
.imageAdd-form_btn {
    display: none;
}

.formbtn {
    padding: 2px 6px;;
}
.formbtn_deactive {
    border: 1px solid #031D86;
    color: rgba(0, 0, 0, .6);
    background: inherit;
}

/* Кнопки и контейнер для удаления */
.deleteConfirmation_container {
    display: none;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: fixed;
    z-index: 9;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: #e9e8e8;
}
.deleteConfirmation_container img {
    width: auto;
    height: auto;
    max-width: 300px;
    max-height: 300px;
    display: block;
    cursor: auto;
}
.deleteConfirmation_container p {
    font-size: 16px;
    margin: 16px 0;
    color: black
}
.deleteConfirmation_container.meetingslectures p {
    max-width: 50vh;
    text-align: left;
}
.deleteConfirmation_container div {
    display: flex;
    gap: 20px;
}
.deleteConfirmation_container div span,
.deleteConfirmation_container div a {
    font-size: 16px;
}


.exhibition-description {
    position: fixed;
    bottom: 15vh;
    left: 50%;
    transform: translateX(-50%);
}

/* MAC */
@media screen and (min-width: 1201px) and (max-width: 1355px) {
    .nav-page_experimental>div>div:first-child {
        opacity: .6;
    }
}


/* TABLET */
@media screen and (max-width: 1200px) {
    body, html {
        /* height: 95vh; */
        height: 100dvh;
    }
    .learn-more_btn {
        margin-top: 5vh;
    }
    .nav-home .nav-desktop li:hover {
        border-bottom-width: 1px;
        border-bottom-style: solid;
        border-bottom-color: black;
        animation: hideBorder 1ms ease-in-out 2500ms forwards;
    }
    .nav-home .nav-desktop li:hover ul {
        display: block;
        opacity: 1;
        animation: hideElement 1s ease-in-out 2s forwards;
    }
    @keyframes hideBorder {
        to {
            border-bottom-width: 0px;
        }
    }
    @keyframes hideElement {
        to {
          opacity: 0;
        }
    }
    .exhibition-description {
        bottom: 3vh;
    }
    .login-bar .log-out_btn {
        right: -12vh;
        top: 2vh;
    }
    .login-bar .apply_btn {
        right: -9vh;
        bottom: -75vh;
    }
    .login-bar .artistsList_btn {
        left: -12vh;
        top: 2vh;
    }
    .footer_copyrite span {
        top: 17vh;
    }
}
/* Футер выше на iPad */
@media screen and (max-height: 750px) {
    footer {
        width: 100%;
        position: absolute;
        /* bottom: 3vh; */ /* 12-12-23 */
        /* 17-12-23 */
        bottom: -3.7vh;
        left: 0;
    }
}

/******************
    M O B I L E
******************/
.index-description_mobile {
    display: none;
}
.index-description_desctop {
    display: block;
}

@media screen and (max-width: 800px) {
    .wrap {
        width: 100vw;
    }
    .header-line_2 {       
        flex-direction: column;
        padding: 10vh 0 0;
    }
    .index-description_mobile {
        display: block;
        padding: 0 5vw;
        width: 100vw;
    }
    .index-description_desctop {
        display: none;
    }
    h1 {
        padding-left: 5vw;
        font-size: 5vh;
    }

    header .nav-desktop,
    header .topMenu-desktop,
    .nav-mobile_r {
        display: none;
    }

    /* 
    .nav-mobile_menu {
        display: none;
        flex-direction: column;
        margin-top: 0;
        padding: 10vh 20vw 30vh;
        position: absolute;
        top: 0; left: 0;
        width: 100vw;
        height: 100vh;
        background: white;
    }
    .nav-mobile_menu>li {
        margin-bottom: 4vh;
    }
    .nav-mobile_menu,
    .nav-mobile_dropdown {
        list-style: none;
    }
    .nav-mobile_dropdown {
        padding-left: 0;
    }
    .nav-mobile_menu>li>a {
        font-weight: bold;
    }
    .nav-mobile_menu a {
        display: flex;
        justify-content: space-between;
        width: 36vw;
    }

    .nav-mobile_btnClose {
        width: 32px;
        height: 32px;
        position: absolute;
        top: 4.5vw;
        right: 5vw;
        cursor: pointer;
    }
    .nav-mobile_btnClose img {
        width: 100%;
    }

    .nav-mobile_btn {
        display: block;
        width: 32px;
        height: 32px;
        position: absolute;
        top: 4.5vw;
        right: 5vw;
        cursor: pointer;
    }
    .nav-mobile_btn img {
        width: 100%;
        filter: invert(100%);
    } 
    */

    .nav-mobile_menu {
        display: none;
        flex-direction: column;
        margin-top: 0;
        padding: 10vh 20vw 30vh;
        position: absolute;
        top: 0; left: 0;
        width: 100vw;
        height: 100vh;
        background: white;
    }
    .nav-mobile_menu>li {
        margin-bottom: 4vh;
    }
    .nav-mobile_menu,
    .nav-mobile_dropdown {
        list-style: none;
    }
    .nav-mobile_dropdown {
        padding-left: 0;
    }
    .nav-mobile_menu>li>a {
        font-weight: bold;
    }
    .nav-mobile_menu a {
        display: flex;
        justify-content: space-between;
        width: 36vw;
    }

    .nav-mobile_btnClose,
    .nav-mobile_btnBack,
    .nav-mobile_btn {
        width: 32px;
        height: 32px;
        position: absolute;
        top: 4.5vw;
        right: 5vw;
        cursor: pointer;
    }
    .nav-mobile_btn {
        display: block;
    }

    .nav-mobile_btn img,
    .nav-mobile_btnBack img,
    .nav-mobile_btnClose img {
        width: 100%;
    }    
    .nav-mobile_btn img {
        filter: invert(100%);
    }  
    
    
    footer {
        width: 100%;
        position: absolute;
        bottom: -3vh;
        left: 0;
    }
}


/* MOBILE-PHONE */
@media screen and (max-width: 900px) {
    body {
        height: 90vh;
    }
    .header-line_2 {       
        padding: 5vh 0 0;
    }
    .header-line_2 img {
        height: 17vh;
    }
    footer {
        width: 100%;
        position: absolute;
        bottom: 0vh;
        left: 0;
    }
}
